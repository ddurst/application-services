var searchIndex = JSON.parse('{\
"as_ohttp_client":{"doc":"","t":"NNNNNNEDDDNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CannotEncodeMessage","DuplicateHeaders","InvalidSession","KeyFetchFailed","MalformedKeyConfig","MalformedMessage","OhttpError","OhttpResponse","OhttpSession","OhttpTestServer","RelayFailed","TestServerRequest","UnsupportedKeyConfig","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decapsulate","encapsulate","fmt","fmt","from","from","from","from","from","into","into","into","into","into","new","provide","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"as_ohttp_client"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Decode an OHTTP response returned in response to a request …","Encode an HTTP request in Binary HTTP format and then …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new encryption session for use with specific key …","","","","","","","","","","","","","","","","",""],"i":[5,5,5,5,5,5,0,0,0,0,5,0,5,1,4,15,16,5,1,4,15,16,5,1,1,5,5,1,4,15,16,5,1,4,15,16,5,1,5,5,1,4,15,16,5,1,4,15,16,5,1,4,15,16,5],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[3,[2]]],[[6,[4,5]]]],[[1,7,7,7,7,[9,[8,8]],[3,[2]]],[[6,[[10,[2]],5]]]],[[5,11],12],[[5,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[2]]],[[6,[1,5]]]],[13],[[],8],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14]],"c":[],"p":[[3,"OhttpSession"],[15,"u8"],[15,"slice"],[3,"OhttpResponse"],[4,"OhttpError"],[4,"Result"],[15,"str"],[3,"String"],[3,"HashMap"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"TypeId"],[3,"OhttpTestServer"],[3,"TestServerRequest"]]},\
"autofill":{"doc":"","t":"CCCCAAACAODALLLALLLLALLAALLLLMFFFFFDALLLLALLLLLLLMMMMMLLLLLDDDMMMMMMMMMMMMLLLLLLLLLLLLMMMLLLMMMLLMMMLLLLLLLLLMMMMMLLLLLLLMLMMMMMMLMMMMMMMMMMLLLLLLLLLLLLLLLDDDLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLMMLLLLLLLMLLMMMMLLLLLLLLLLLLLLLRRDRRLLFLLLLLLLLLLDLLLLLLLLLLLLLFLLLLLLLLLLLLLGFFFGENNENNNNNNNNNNGNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNDENIIQQIALLLLKAAKKKKLLLLKKKLLKKKKKKKLLLLLLKLLMMDLLLLLALALLLLLAARDDRRILLLLLLLLLKKLLLLLLLKLLLLLLLLLLLL","n":["ApiResult","AutofillApiError","Error","Result","db","encryption","error","get_registered_sync_engine","sync","sync_merge_field_check","AutofillDb","addresses","begin_interrupt_scope","borrow","borrow_mut","credit_cards","deref","deref_mut","from","into","models","new","new_memory","schema","store","try_from","try_into","type_id","vzip","writer","touch","delete_credit_card","scrub_encrypted_credit_card_data","touch","update_credit_card","Metadata","address","borrow","borrow_mut","clone","clone_into","credit_card","default","eq","equivalent","fmt","from","into","merge","sync_change_counter","time_created","time_last_modified","time_last_used","times_used","to_owned","try_from","try_into","type_id","vzip","Address","InternalAddress","UpdatableAddressFields","additional_name","additional_name","additional_name","address_level1","address_level1","address_level1","address_level2","address_level2","address_level2","address_level3","address_level3","address_level3","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","country","country","country","default","default","default","email","email","email","eq","equivalent","family_name","family_name","family_name","fmt","fmt","fmt","from","from","from","from","from_row","get_hash","given_name","given_name","given_name","guid","guid","hash","id","into","into","into","merge","metadata","metadata","metadata_mut","organization","organization","organization","postal_code","postal_code","postal_code","record_name","street_address","street_address","street_address","tel","tel","tel","time_created","time_last_modified","time_last_used","times_used","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","CreditCard","InternalCreditCard","UpdatableCreditCardFields","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cc_exp_month","cc_exp_month","cc_exp_month","cc_exp_year","cc_exp_year","cc_exp_year","cc_name","cc_name","cc_name","cc_number_enc","cc_number_enc","cc_number_enc","cc_number_last_4","cc_number_last_4","cc_number_last_4","cc_type","cc_type","cc_type","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","fmt","fmt","fmt","from","from","from","from","from_row","guid","guid","has_scrubbed_data","id","into","into","into","merge","metadata","metadata","metadata_mut","record_name","time_created","time_last_modified","time_last_used","times_used","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ADDRESS_COMMON_COLS","ADDRESS_COMMON_VALS","AutofillConnectionInitializer","CREDIT_CARD_COMMON_COLS","CREDIT_CARD_COMMON_VALS","borrow","borrow_mut","create_empty_sync_temp_tables","finish","from","init","into","prepare","try_from","try_into","type_id","upgrade_from","vzip","Store","add_address","add_credit_card","borrow","borrow_mut","create_addresses_sync_engine","create_credit_cards_sync_engine","delete_address","delete_credit_card","from","get_address","get_all_addresses","get_all_credit_cards","get_credit_card","get_registered_sync_engine","into","new","new_shared_memory","register_with_sync_manager","scrub_encrypted_data","touch_address","touch_credit_card","try_from","try_into","type_id","update_address","update_credit_card","vzip","EncryptorDecryptor","create_autofill_key","decrypt_string","encrypt_string","ApiResult","AutofillApiError","CryptoError","CryptoError","Error","IllegalDatabasePath","InterruptedError","InterruptedError","InvalidSyncPayload","IoError","JsonError","MissingEncryptionKey","NoSuchRecord","NoSuchRecord","OpenDatabaseError","Result","SqlError","SqlError","UnexpectedAutofillApiError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_error_handling","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","guid","reason","reason","reason","Forked","IncomingState","MergeResult","Merged","ProcessIncomingRecordImpl","ProcessOutgoingRecordImpl","Record","Record","SyncRecord","address","borrow","borrow","borrow_mut","borrow_mut","change_record_guid","credit_card","engine","fetch_incoming_states","fetch_outgoing_records","finish_incoming","finish_synced_items","fmt","fmt","from","from","get_local_dupe","id","insert_local_record","into","into","merge","metadata","metadata_mut","record_name","remove_record","remove_tombstone","stage_incoming","try_from","try_from","try_into","try_into","type_id","type_id","update_local_record","vzip","vzip","forked","merged","AddressPayload","borrow","borrow_mut","default","deserialize","from","incoming","into","outgoing","serialize","try_from","try_into","type_id","vzip","incoming","outgoing","COLLECTION_SYNCID_META_KEY","ConfigSyncEngine","EngineConfig","GLOBAL_SYNCID_META_KEY","LAST_SYNC_META_KEY","SyncEngineStorageImpl","apply","borrow","borrow","borrow_mut","borrow_mut","collection_name","from","from","get_collection_request","get_incoming_impl","get_outgoing_impl","get_sync_assoc","into","into","new","prepare_for_sync","reset","reset_local_sync_data","reset_storage","set_local_encryption_key","set_uploaded","stage_incoming","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wipe"],"q":[[0,"autofill"],[10,"autofill::db"],[30,"autofill::db::addresses"],[31,"autofill::db::credit_cards"],[35,"autofill::db::models"],[59,"autofill::db::models::address"],[155,"autofill::db::models::credit_card"],[230,"autofill::db::schema"],[248,"autofill::db::store"],[276,"autofill::encryption"],[280,"autofill::error"],[331,"autofill::error::AutofillApiError"],[335,"autofill::sync"],[381,"autofill::sync::MergeResult"],[383,"autofill::sync::address"],[397,"autofill::sync::credit_card"],[399,"autofill::sync::engine"]],"d":["","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Metadata that’s common between the records.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Merge the metadata from <code>other</code>, and possibly <code>mirror</code>, into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs a three-way merge between an incoming, local, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Performs a three-way merge between an incoming, local, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Called by the sync manager to get a sync engine via the …","Calls <code>U::from(self)</code>.","","Creates a store backed by an in-memory database that …","","","","","","","","","","","","","","","Result enum for the public API","","","","","","","","","","","","","","","Result enum for internal functions","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finish the incoming phase. This will typically caused …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns a local record that has the same values as the …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,18,18,17,18,19,17,18,19,17,18,18,19,19,18,17,18,19,18,19,18,19,17,18,19,19,19,19,19,17,18,19,17,18,19,19,17,18,19,17,18,19,18,18,18,18,17,18,19,17,18,19,17,18,19,17,18,19,17,18,19,0,0,0,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,12,28,28,29,29,28,29,29,29,12,28,29,29,29,29,29,29,28,28,28,28,12,28,29,12,28,29,12,28,29,12,28,29,12,28,29,0,0,0,0,0,31,31,0,31,31,31,31,31,31,31,31,31,31,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,42,43,0,43,42,43,43,43,43,43,42,43,43,0,42,43,42,42,43,42,43,42,42,43,43,42,43,43,43,43,43,43,43,43,42,43,42,43,43,42,43,42,43,42,43,42,43,42,43,73,74,75,76,27,0,0,27,0,0,67,68,0,0,27,52,27,52,67,0,0,67,68,67,68,27,52,27,52,67,61,67,27,52,61,61,61,61,67,67,67,27,52,27,52,27,52,67,27,52,77,78,0,58,58,58,58,58,0,58,0,58,58,58,58,58,0,0,0,0,0,0,0,0,62,70,62,70,62,62,70,62,62,71,71,62,70,62,62,62,62,62,71,62,62,62,70,62,70,62,70,62,70,62,62],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],0,[1],[1],[[]],[[]],0,[[[5,[4]]],[[3,[1]]]],[6,[[3,[1]]]],0,0,[[],7],[[],7],[[],8],[[]],0,[[9,10],3],[[9,10],[[3,[11]]]],[9,3],[[9,10],3],[[9,10,12],3],0,0,[[]],[[]],[13,13],[[]],0,[[],13],[[13,13],11],[[],11],[[13,14],15],[[]],[[]],[[13,13,[16,[13]]]],0,0,0,0,0,[[]],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[18,18],[19,19],[[]],[[]],[[]],0,0,0,[[],17],[[],18],[[],19],0,0,0,[[18,18],11],[[],11],0,0,0,[[17,14],15],[[18,14],15],[[19,14],15],[[]],[[]],[19,18],[[]],[20,[[7,[19,21]]]],[[[0,[22,23]],24],25],0,0,0,0,0,[[18,26]],[19,10],[[]],[[]],[[]],[[19,19,[16,[19]]],[[27,[19]]]],[19,13],0,[19,13],0,0,0,0,0,0,[[],6],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[12,12],[28,28],[29,29],[[]],[[]],[[]],[[],12],[[],28],[[],29],[[12,14],15],[[28,14],15],[[29,14],15],[[]],[29,28],[[]],[[]],[20,[[7,[29,21]]]],0,0,[29,11],[29,10],[[]],[[]],[[]],[[29,29,[16,[29]]],[[27,[29]]]],[29,13],0,[29,13],[[],6],0,0,0,0,[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[9,30],[[31,9],30],[[]],[[31,32],30],[[]],[[31,9,11],30],[[],7],[[],7],[[],8],[[31,32,33],30],[[]],0,[[34,17],[[35,[18]]]],[[34,12],[[35,[28]]]],[[]],[[]],[[[36,[34]]],[[38,[37]]]],[[[36,[34]]],[[38,[37]]]],[[34,39],[[35,[11]]]],[[34,39],[[35,[11]]]],[[]],[[34,39],[[35,[18]]]],[34,[[35,[[40,[18]]]]]],[34,[[35,[[40,[28]]]]]],[[34,39],[[35,[28]]]],[41,[[16,[[38,[37]]]]]],[[]],[[[5,[4]]],[[35,[34]]]],[6,[[35,[34]]]],[[[36,[34]]]],[[[36,[34]]],35],[[34,39],35],[[34,39],35],[[],7],[[],7],[[],8],[[34,39,17],35],[[34,39,12],35],[[]],0,[[],[[35,[39]]]],[[39,39],[[35,[39]]]],[[39,39],[[35,[39]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[42,14],15],[[42,14],15],[[43,14],15],[[43,14],15],[[]],[44,43],[45,43],[46,43],[21,43],[47,43],[48,43],[[]],[43,49],[[]],[[]],[50],[50],[43,[[16,[51]]]],[[],39],[[],39],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[32,10,10],3],0,0,[32,[[3,[[40,[52]]]]]],[32,[[54,[[40,[53]]]]]],[32,3],[[32,[40,[10]]],54],[[[27,[55]],14],15],[[[52,[55]],14],15],[[]],[[]],[32,[[3,[16]]]],[[],10],[32,3],[[]],[[]],[[23,23,[16,[23]]],[[27,[23]]]],[[],13],[[],13],[[],6],[[32,10],3],[[32,10],3],[[32,[40,[56]],57],3],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[32,11],3],[[]],[[]],0,0,0,[[]],[[]],[[],58],[59,[[7,[58]]]],[[]],0,[[]],0,[[58,60],7],[[],7],[[],7],[[],8],[[]],0,0,0,0,0,0,0,0,[[[62,[[0,[61,55]]]],63,64],[[54,[[40,[53]]]]]],[[]],[[]],[[]],[[]],[[[62,[[0,[61,55]]]]],65],[[]],[[]],[[[62,[[0,[61,55]]]],63],[[54,[[16,[66]]]]]],[[[16,[39]]],[[3,[[38,[67]]]]]],[[[16,[39]]],[[3,[[38,[68]]]]]],[[[62,[[0,[61,55]]]]],[[54,[69]]]],[[]],[[]],[[70,[36,[34]],[38,[71]]],62],[[[62,[[0,[61,55]]]],72],54],[[[62,[[0,[61,55]]]],69],54],[62,3],[32,3],[[[62,[[0,[61,55]]]],6],54],[[[62,[[0,[61,55]]]],63,[40,[10]]],54],[[[62,[[0,[61,55]]]],[40,[56]],64],54],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[]],[[]],[[[62,[[0,[61,55]]]]],54]],"c":[],"p":[[3,"AutofillDb"],[3,"SqlInterruptScope"],[6,"Result"],[3,"Path"],[8,"AsRef"],[15,"str"],[4,"Result"],[3,"TypeId"],[3,"Connection"],[3,"Guid"],[15,"bool"],[3,"UpdatableCreditCardFields"],[3,"Metadata"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"UpdatableAddressFields"],[3,"Address"],[3,"InternalAddress"],[3,"Row"],[4,"Error"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"MergeResult"],[3,"CreditCard"],[3,"InternalCreditCard"],[6,"Result"],[3,"AutofillConnectionInitializer"],[3,"Transaction"],[15,"u32"],[3,"Store"],[6,"ApiResult"],[3,"Arc"],[8,"SyncEngine"],[3,"Box"],[3,"String"],[3,"Vec"],[4,"SyncEngineId"],[4,"AutofillApiError"],[4,"Error"],[3,"Error"],[3,"EncryptorDecryptorError"],[4,"Error"],[3,"Interrupted"],[3,"Error"],[3,"ErrorHandling"],[3,"Demand"],[8,"Error"],[3,"IncomingState"],[3,"OutgoingBso"],[6,"Result"],[8,"Debug"],[3,"IncomingBso"],[8,"Interruptee"],[3,"AddressPayload"],[8,"Deserializer"],[8,"Serializer"],[8,"SyncRecord"],[3,"ConfigSyncEngine"],[3,"ServerTimestamp"],[3,"Engine"],[6,"CollectionName"],[3,"CollectionRequest"],[8,"ProcessIncomingRecordImpl"],[8,"ProcessOutgoingRecordImpl"],[4,"EngineSyncAssociation"],[3,"EngineConfig"],[8,"SyncEngineStorageImpl"],[8,"Fn"],[13,"NoSuchRecord"],[13,"SqlError"],[13,"CryptoError"],[13,"UnexpectedAutofillApiError"],[13,"Forked"],[13,"Merged"]]},\
"cli_support":{"doc":"","t":"CAFFFADMLLLLMLFFFLMMLLLLFFF","n":["env_logger","fxa_creds","init_logging","init_logging_with","init_trace_logging","prompt","CliFxa","account","as_auth_info","as_key_bundle","borrow","borrow_mut","client_init","from","get_account_and_token","get_cli_fxa","get_default_fxa_config","into","token_info","tokenserver_url","try_from","try_into","type_id","vzip","prompt_char","prompt_string","prompt_usize"],"q":[[0,"cli_support"],[6,"cli_support::fxa_creds"],[24,"cli_support::prompt"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,2,2,2,2,2,2,2,0,0,0],"f":[0,0,[[]],[1],[[]],0,0,0,[2,3],[2,[[5,[4]]]],[[]],[[]],0,[[]],[[6,1],5],[[6,1],[[5,[2]]]],[[],6],[[]],0,0,[[],7],[[],7],[[],8],[[]],[1,[[10,[9]]]],[[[11,[1]]],[[10,[12]]]],[[[11,[1]]],[[10,[13]]]]],"c":[],"p":[[15,"str"],[3,"CliFxa"],[3,"SyncAuthInfo"],[3,"KeyBundle"],[6,"Result"],[3,"FxaConfig"],[4,"Result"],[3,"TypeId"],[15,"char"],[4,"Option"],[8,"AsRef"],[3,"String"],[15,"usize"]]},\
"crashtest":{"doc":"Crash Test Helper APIs","t":"ENLLLLLLLLFFFLLL","n":["CrashTestError","ErrorFromTheRustCode","borrow","borrow_mut","fmt","fmt","from","into","provide","to_string","trigger_rust_abort","trigger_rust_error","trigger_rust_panic","try_from","try_into","type_id"],"q":[[0,"crashtest"]],"d":["An error that can be returned from Rust code.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","Trigger a hard abort inside the Rust code.","Trigger an error inside the Rust code.","Trigger a panic inside the Rust code.","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1],"f":[0,0,[[]],[[]],[[1,2],3],[[1,2],3],[[]],[[]],[4],[[],5],[[]],[[],[[6,[1]]]],[[]],[[],6],[[],6],[[],7]],"c":[],"p":[[4,"CrashTestError"],[3,"Formatter"],[6,"Result"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"]]},\
"embedded_uniffi_bindgen":{"doc":"","t":"F","n":["main"],"q":[[0,"embedded_uniffi_bindgen"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]},\
"error_support":{"doc":"","t":"IDDQICLLLLOLFLOOOMLLLKXLLLLLFFLFKKLOFMFOLLLLLLF","n":["ApplicationErrorReporter","ErrorHandling","ErrorReporting","ExternalError","GetErrorHandling","backtrace","borrow","borrow","borrow_mut","borrow_mut","breadcrumb","convert","convert_log_report_error","default","define_error","define_error_conversions","define_error_wrapper","err","fmt","from","from","get_error_handling","handle_error","into","into","log","log_info","log_warning","redact_compact_jwe","redact_url","report","report_breadcrumb","report_breadcrumb","report_error","report_error","report_error","report_error_to_app","reporting","set_application_error_reporter","trace_error","try_from","try_from","try_into","try_into","type_id","type_id","unset_application_error_reporter"],"q":[[0,"error_support"]],"d":["Application error reporting trait","Specifies how an “internal” error is converted to an …","Describes what error reporting action should be taken.","","A trait to define how errors are converted and reported.","Re-export of the <code>backtrace</code> crate for use in macros and to …","","","","","Tell the application to log a breadcrumb","Create an ErrorHandling instance with an error conversion.","Handle the specified “internal” error, taking any …","","All the error boilerplate (okay, with a couple exceptions …","Define a set of conversions from external error types into …","XXX - Most of this is now considered deprecated - only FxA …","The external error that should be returned.","","Returns the argument unchanged.","Returns the argument unchanged.","Return how to handle our internal errors","A procedural macro that exposes internal errors to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Add logging to an ErrorHandling instance","log an info","log a warning","Redact compact jwe string (Five base64 segments, separated …","Redact a URL.","Add reporting to an ErrorHandling instance","","Send a breadcrumb to a Sentry-like error reporting system","Send an error report to a Sentry-like error reporting …","Add reporting to an ErrorHandling instance and also log an …","Tell the application to report an error","","How the error should be reported.","","Log a breadcrumb if we see an <code>Result::Err</code> value","","","","","","",""],"i":[0,0,0,2,0,0,1,4,1,4,0,1,0,4,0,0,0,1,4,1,4,2,0,1,4,1,1,1,0,0,1,0,12,12,1,0,0,1,0,0,1,4,1,4,1,4,0],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[[],1],[[[0,[2,3]]],3],[[],4],0,0,0,0,[[4,5],6],[[]],[[]],[[],1],0,[[]],[[]],[[1,7],1],[1,1],[1,1],[8,9],[8,9],[[1,[10,[9]]],1],[[9,9,11,11]],[[9,9,11,11]],[[9,9]],[[1,[10,[9]]],1],0,[[9,9]],0,[[[13,[12]]]],0,[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[]]],"c":[],"p":[[3,"ErrorHandling"],[8,"GetErrorHandling"],[8,"Error"],[3,"ErrorReporting"],[3,"Formatter"],[6,"Result"],[4,"Level"],[15,"str"],[3,"String"],[8,"Into"],[15,"u32"],[8,"ApplicationErrorReporter"],[3,"Box"],[4,"Result"],[3,"TypeId"]]},\
"error_support_macros":{"doc":"","t":"X","n":["handle_error"],"q":[[0,"error_support_macros"]],"d":["A procedural macro that exposes internal errors to …"],"i":[0],"f":[0],"c":[],"p":[]},\
"examples_fxa_client":{"doc":"","t":"HHNDENNNHNNENNLLLLLLLLLLLLLLMLALLLLLLLLLLLLLLLLFFLFAMLLLLLLLLLLLLLLLLLLLEDNNLLLLLLLLMLLLLLLLLLLFFFLLLLLLLLLLLLMENNDLLLLLLLLMLLLLLLLLLLFFFLLLLLLLLLLLLMMM","n":["CLIENT_ID","CREDENTIALS_PATH","China","Cli","Command","Devices","Disconnect","LocalDev","REDIRECT_URI","Release","SendTab","Server","Stable","Stage","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","command","command","command_for_update","devices","eq","equivalent","equivalent","fmt","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","into","load_account","main","partial_cmp","persist_fxa_state","send_tab","server","to_owned","to_possible_value","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","Command","DeviceArgs","List","SetName","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","list","run","set_name","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","name","Command","Poll","Send","SendTabArgs","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","poll","run","send","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","device_id","title","url"],"q":[[0,"examples_fxa_client"],[72,"examples_fxa_client::devices"],[110,"examples_fxa_client::devices::Command"],[111,"examples_fxa_client::send_tab"],[149,"examples_fxa_client::send_tab::Command"]],"d":["","","China server","","","","","local dev sever","","Official server","","","stable dev sever","staging dev sever","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","The FxA server to use","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Perform a single poll for tabs sent to this device","Send a tab to another device","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Device ID (use the <code>devices</code> command to list)","",""],"i":[0,0,2,0,0,11,11,2,0,2,11,0,2,2,8,8,11,11,8,2,11,8,2,11,2,2,2,8,8,8,0,2,2,2,2,8,2,11,8,11,8,11,8,11,8,2,11,0,0,2,0,0,8,2,2,8,2,11,8,2,11,8,2,11,8,11,8,11,2,8,2,11,0,0,21,21,20,20,21,21,20,21,20,21,20,20,21,20,21,20,21,20,21,20,21,0,0,0,20,21,20,21,20,21,20,21,20,21,20,21,25,0,24,24,0,23,23,24,24,23,24,23,24,23,23,24,23,24,23,24,23,24,23,24,0,0,0,23,24,23,24,23,24,23,24,23,24,23,24,26,26,26],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[[]],[[2,2],3],[[],1],0,[[],1],0,[[2,2],4],[[],4],[[],4],[[2,5],6],[[]],[[]],[[]],[7,[[10,[8,9]]]],[7,[[10,[11,9]]]],[7,[[10,[8,9]]]],[7,[[10,[11,9]]]],[[],[[13,[12]]]],[14,4],[[]],[[]],[[]],[8,[[16,[15]]]],[[],16],[[2,2],[[13,[3]]]],[15,16],0,0,[[]],[2,[[13,[17]]]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[],18],[[8,7],[[10,[9]]]],[[11,7],[[10,[9]]]],[[8,7],[[10,[9]]]],[[11,7],[[10,[9]]]],[[],[[19,[2]]]],[[]],[[]],[[]],0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],0,[[]],[[]],[7,[[10,[20,9]]]],[7,[[10,[21,9]]]],[7,[[10,[20,9]]]],[7,[[10,[21,9]]]],[[],[[13,[12]]]],[14,4],[[]],[[]],[15,16],[[15,20],16],[[15,22],16],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[20,7],[[10,[9]]]],[[21,7],[[10,[9]]]],[[20,7],[[10,[9]]]],[[21,7],[[10,[9]]]],[[]],[[]],0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],0,[[]],[[]],[7,[[10,[23,9]]]],[7,[[10,[24,9]]]],[7,[[10,[23,9]]]],[7,[[10,[24,9]]]],[[],[[13,[12]]]],[14,4],[[]],[[]],[15,16],[[15,23],16],[[15,22,22,22],16],[[],10],[[],10],[[],10],[[],10],[[],18],[[],18],[[23,7],[[10,[9]]]],[[24,7],[[10,[9]]]],[[23,7],[[10,[9]]]],[[24,7],[[10,[9]]]],[[]],[[]],0,0,0],"c":[],"p":[[3,"Command"],[4,"Server"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Id"],[4,"Option"],[15,"str"],[3,"FirefoxAccount"],[6,"Result"],[3,"PossibleValue"],[3,"TypeId"],[15,"slice"],[3,"DeviceArgs"],[4,"Command"],[3,"String"],[3,"SendTabArgs"],[4,"Command"],[13,"SetName"],[13,"Send"]]},\
"fxa_client":{"doc":"Firefox Accounts Client","t":"DNNENGDNNDDNNNNNNNNDENNDENEDDEENNNENNNNNNNDNNNNNNNNNNNNNNNNDNNNNGNDNNDNNNNDNNNNNNNNNNNNNMMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLLLLLMMLMLLLLLMMMLMMMMLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLMMMMMLMMMMMMLMLLLMMMMLMMMMLLLLMLLLLLMMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMM","n":["AccessTokenInfo","AccountAuthStateChanged","AccountDestroyed","AccountEvent","ApiClientError","ApiResult","AttachedClient","AuthCircuitBreakerError","Authentication","AuthorizationInfo","AuthorizationParameters","BackoffError","Base64Decode","China","CommandNotFound","CommandReceived","CryptoError","Custom","Desktop","Device","DeviceCapability","DeviceConnected","DeviceDisconnected","DevicePushSubscription","DeviceType","EceError","Error","FirefoxAccount","FxaConfig","FxaError","FxaServer","HawkError","HexDecodeError","IllegalState","IncomingDeviceCommand","IntegerConversionError","InvalidBufferLength","InvalidPushEvent","JsonError","JwCryptoError","LocalDev","MalformedUrl","MetricsParams","MismatchedKeys","MissingUrlParameter","Mobile","MultipleScopesRequested","Network","NoCachedToken","NoCurrentDeviceId","NoExistingAuthFlow","NoMigrationData","NoRefreshToken","NoScopedKey","NoSessionToken","NullPointer","OriginMismatch","Other","Panic","Profile","ProfileUpdated","Release","RemoteError","RequestError","Result","ScopeNotAllowed","ScopedKey","SendTab","SendTabDiagnosisError","SendTabPayload","Stable","Stage","SyncError","TV","TabHistoryEntry","TabReceived","Tablet","UTF8DecodeError","UnexpectedStatus","Unknown","Unknown","UnknownCommand","UnknownOAuthState","UnknownTargetDevice","UnsupportedCommand","VR","WrongAuthFlow","XorLengthMismatch","access_type","active","auth_key","authorize_code_using_session_token","avatar","begin_oauth_flow","begin_pairing_flow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capabilities","check_authorization_status","china","clear_access_token_cache","clear_device_name","client_id","client_id","client_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code_challenge","code_challenge_method","complete_oauth_flow","created_time","default","deserialize","deserialize","deserialize","dev","device_id","device_type","device_type","disconnect","display_name","display_name","email","endpoint","ensure_capabilities","entries","eq","eq","equivalent","equivalent","expires_at","flow_id","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_json","gather_telemetry","get_access_token","get_attached_clients","get_connection_success_url","get_current_device_id","get_devices","get_error_handling","get_hash","get_hash","get_manage_account_url","get_manage_devices_url","get_pairing_authority_url","get_profile","get_session_token","get_token_server_endpoint_url","handle_push_message","handle_session_token_change","hash","hash","id","initialize_device","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_current_device","is_current_session","is_default_avatar","k","key","key_bytes","keys_jwk","kid","kty","last_access_time","last_access_time","name","new","parameters","poll_device_commands","provide","provide","public_key","push_endpoint_expired","push_subscription","redirect_uri","release","scope","scope","scope","scope","send_single_tab","serialize","serialize","serialize","server","set_device_name","set_push_subscription","source","stable","stage","state","stream_id","title","to_json","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","token","token_server_url_override","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","command","device_id","device_name","is_local_device","code","errno","error","info","message","url","payload","sender"],"q":[[0,"fxa_client"],[401,"fxa_client::AccountEvent"],[405,"fxa_client::Error"],[410,"fxa_client::FxaServer"],[411,"fxa_client::IncomingDeviceCommand"]],"d":["An OAuth access token, with its associated keys and …","Sent when when there has been a change in authorization …","Sent when the user deletes their Firefox Account.","An event that happened on the user’s account.","","Result returned by public-facing API functions","A client connected to the user’s account.","","Thrown when there was a problem with the authentication …","Information about the authorization state of the …","Parameters provided in an incoming OAuth request.","","","","","Sent when another device has invoked a command for this …","","","","A device connected to the user’s account.","A “capability” offered by a device.","Sent when a new device connects to the user’s account.","Sent when a device disconnects from the user’s account.","Details of a web-push subscription endpoint.","Enumeration for the different types of device.","","FxA internal error type These are used in the internal …","Object representing the signed-in state of an application.","","Public error type thrown by many [<code>FirefoxAccount</code>] …","","","","","A command invoked by another device.","","","","","","","","Additional metrics tracking parameters to include in an …","","","","","Thrown if an operation fails due to network access …","","","Thrown if the application attempts to complete an OAuth …","","","","","","","A catch-all for other unspecified errors.","Thrown if there is a panic in the underlying Rust code.","Information about the user that controls a Firefox Account.","Sent when the user has modified their account profile …","","","","Result returned by internal functions","","A cryptograpic key associated with an OAuth scope.","","","The payload sent when invoking a “send tab” command.","","","","","An individual entry in the navigation history of a sent …","Indicates that a tab has been sent to this device.","","","","","An unknown event, most likely an event the client doesn’…","","","","","","Thrown if the application attempts to complete an OAuth …","","","","","Create a new OAuth authorization code using the stored …","The URL of a profile picture representing the user.","Initiate a web-based OAuth sign-in flow.","Initiate a device-pairing sign-in flow.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Check authorization status for this application.","","Clear the access token cache in response to an auth …","Clear any custom display name used for this application …","","","registered OAuth client id of the application.","","","","","","","","","","","","","Complete an OAuth flow.","","","","","","","","","","Disconnect from the user’s account.","The user’s preferred textual display name.","","The user’s current primary email address.","","Ensure that the device record has a specific set of …","The navigation history of the sent tab.","","","","","The expiry time of the token, in seconds.","A unique identifier to be included in send-tab metrics.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Restore a <code>FirefoxAccount</code> instance from serialized state.","Collect and return telemetry about send-tab attempts.","Get a short-lived OAuth access token for the user’s …","Get the list of all client applications attached to the …","Get a URL which shows a “successfully connected!” …","Get the device id registered for this application.","Get the list of devices registered on the user’s account.","","","","Get a URL at which the user can manage their account and …","Get a URL at which the user can manage the devices …","Get the URL at which to begin a device-pairing signin flow.","Get profile information for the signed-in user, if any.","Get the session token for the user’s account, if one is …","Get the token server URL","Process and respond to a server-delivered account update …","Update the stored session token for the user’s account.","","","","Create a new device record for this application.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether the <code>avatar</code> URL represents the default avatar image.","The key material, as base64-url-encoded bytes.","The client-side encryption key associated with this scope.","","","An opaque unique identifier for this key.","The type of key.","","","","Create a new <code>FirefoxAccount</code> instance, not connected to any …","","Poll the server for any pending device commands.","","","","","","<code>redirect_uri</code> - the registered OAuth redirect URI of the …","","","","The scope of access granted by token.","The OAuth scope with which this key is associated.","Use device commands to send a single tab to another device.","","","","FxaServer to connect with","Update the display name used for this application instance.","Set or update a push subscription endpoint for this device.","","","","","A unique identifier to be included in send-tab metrics.","","Save current state to a JSON string.","","","","","","","","The access token itself.","URL for the user’s Sync Tokenserver. This can be used to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The user’s account uid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,28,28,0,25,0,0,25,24,0,0,25,25,16,25,28,25,16,14,0,0,28,28,0,0,25,0,0,0,0,0,25,25,25,0,25,25,25,25,25,16,25,0,25,25,14,25,24,25,25,24,25,25,25,25,25,25,24,24,0,28,16,25,25,0,25,0,13,25,0,16,16,25,14,0,29,14,25,25,14,28,25,25,25,25,14,24,25,2,10,27,1,53,1,1,10,8,47,53,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,10,8,47,53,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,21,1,12,1,1,47,2,12,13,14,15,12,16,13,14,15,12,16,2,2,1,47,14,13,14,15,12,47,47,21,1,53,21,53,27,1,30,13,14,13,14,32,30,21,13,24,24,25,25,14,27,28,29,30,31,32,15,12,16,10,8,47,53,2,1,21,13,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,14,27,28,29,30,31,32,15,12,16,1,1,1,1,1,1,1,25,13,14,1,1,1,1,1,1,1,1,13,14,21,1,10,8,47,53,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,21,47,53,15,32,15,2,15,15,47,21,47,1,8,1,24,25,27,21,21,12,12,47,2,32,15,1,13,14,15,12,1,1,25,12,12,2,30,31,1,13,14,15,12,16,24,25,32,12,10,8,47,53,2,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,10,8,47,53,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,10,8,47,53,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,53,31,10,8,47,53,2,1,21,13,24,25,14,27,28,29,30,31,32,15,12,16,62,63,64,63,65,65,65,65,65,66,67,67],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],0,[[1,[7,[[6,[5]]]],5,[9,[8]]],[[4,[3]]]],[[1,5,[7,[3]],5,[9,[8]]],[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[1,[[4,[10]]]],[[11,11],12],[1],[1,4],0,0,0,[13,13],[14,14],[15,15],[12,12],[16,16],[[]],[[]],[[]],[[]],[[]],0,0,[[1,5,5],4],0,[[],14],[17,[[18,[13]]]],[17,[[18,[14]]]],[17,[[18,[15]]]],[[11,11],12],0,0,0,[1],0,0,0,0,[[1,[19,[13]]],4],0,[[13,13],20],[[14,14],20],[[],20],[[],20],0,0,[[21,22],23],[[13,22],23],[[24,22],23],[[24,22],23],[[25,22],23],[[25,22],23],[[14,22],[[18,[26]]]],[[27,22],23],[[28,22],23],[[29,22],23],[[30,22],23],[[31,22],23],[[32,22],23],[[15,22],23],[[12,22],23],[[16,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,25],[34,25],[35,25],[36,25],[37,25],[38,25],[39,25],[40,25],[41,25],[42,25],[43,25],[44,25],[45,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[4,[1]]]],[1,[[4,[3]]]],[[1,5,[9,[46]]],[[4,[32]]]],[1,[[4,[[19,[47]]]]]],[1,[[4,[3]]]],[1,[[4,[3]]]],[[1,20],[[4,[[19,[21]]]]]],[25,48],[[[0,[49,50]],51],52],[[[0,[49,50]],51],52],[[1,5],[[4,[3]]]],[[1,5],[[4,[3]]]],[1,[[4,[3]]]],[[1,20],[[4,[53]]]],[1,[[4,[3]]]],[1,[[4,[3]]]],[[1,5],[[4,[28]]]],[[1,5],4],[[13,54]],[[14,54]],0,[[1,5,14,[19,[13]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[15,[[56,[[19,[55]]]]]],0,0,0,0,0,0,[12,1],0,[1,[[4,[[19,[29]]]]]],[57],[57],0,0,0,0,[[11,11],12],0,0,0,0,[[1,5,5,5],4],[[13,58],18],[[14,58],18],[[15,58],18],0,[[1,5],4],[[1,27],4],[25,[[9,[59]]]],[[11,11],12],[[11,11],12],0,0,0,[1,[[4,[3]]]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],0,0,[[],18],[[],18],[[],18],[[],18],[[],18],[60,[[56,[2]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],[[],61],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"FirefoxAccount"],[3,"AuthorizationParameters"],[3,"String"],[6,"ApiResult"],[15,"str"],[8,"AsRef"],[15,"slice"],[3,"MetricsParams"],[4,"Option"],[3,"AuthorizationInfo"],[8,"ToString"],[3,"FxaConfig"],[4,"DeviceCapability"],[4,"DeviceType"],[3,"ScopedKey"],[4,"FxaServer"],[8,"Deserializer"],[4,"Result"],[3,"Vec"],[15,"bool"],[3,"Device"],[3,"Formatter"],[6,"Result"],[4,"FxaError"],[4,"Error"],[3,"Error"],[3,"DevicePushSubscription"],[4,"AccountEvent"],[4,"IncomingDeviceCommand"],[3,"SendTabPayload"],[3,"TabHistoryEntry"],[3,"AccessTokenInfo"],[3,"TryFromIntError"],[4,"DecodeError"],[4,"Error"],[4,"Error"],[4,"FromHexError"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"UnexpectedStatus"],[4,"JwCryptoError"],[3,"FromUtf8Error"],[4,"ParseError"],[15,"i64"],[3,"AttachedClient"],[3,"ErrorHandling"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[3,"Profile"],[8,"Hasher"],[15,"u8"],[6,"Result"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[3,"Url"],[3,"TypeId"],[13,"CommandReceived"],[13,"DeviceDisconnected"],[13,"DeviceConnected"],[13,"RemoteError"],[13,"Custom"],[13,"TabReceived"]]},\
"interrupt_support":{"doc":"","t":"DIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFFLLLLLLLLLLLLLLLLLKLLLL","n":["Interrupted","Interruptee","NeverInterrupts","ShutdownInterruptee","SqlInterruptHandle","SqlInterruptScope","begin_interrupt_scope","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dummy","err_if_interrupted","err_if_interrupted","err_if_interrupted","fmt","fmt","fmt","fmt","from","from","from","from","from","in_shutdown","interrupt","into","into","into","into","into","new","provide","register_interrupt","shutdown","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","was_interrupted","was_interrupted","was_interrupted","was_interrupted","was_interrupted"],"q":[[0,"interrupt_support"]],"d":["The error returned by err_if_interrupted.","Represents the state of something that may be interrupted. …","A convenience implementation, should only be used in tests.","","Interrupt operations that use SQL","Check if an operation has been interrupted","Begin an interrupt scope that will be interrupted by this …","","","","","","","","","","","","","","","","Return Err(Interrupted) if we were interrupted","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Check if we’re currently in shutdown mode","Interrupt all interrupt scopes created by this handle","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Register a ShutdownInterrupt implementation","Initiate shutdown mode","","","","","","","","","","","","","","","","","","","","","Check if scope has been interrupted",""],"i":[0,0,0,0,0,0,1,14,15,1,3,2,14,15,1,3,2,3,3,2,16,16,2,1,3,3,2,14,15,1,3,2,0,1,14,15,1,3,2,1,3,0,0,3,3,14,15,1,3,2,14,15,1,3,2,14,15,1,3,2,16,14,15,2,2],"f":[0,0,0,0,0,0,[1,[[4,[2,3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[[]],[[],2],[[],[[4,[3]]]],[[],[[4,[3]]]],[2,[[4,[3]]]],[[1,5],6],[[3,5],6],[[3,5],6],[[2,5],6],[[]],[[]],[[]],[[]],[[]],[[],7],[1],[[]],[[]],[[]],[[]],[[]],[8,1],[9],[[[11,[10]]]],[[]],[[]],[[],12],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],13],[[],13],[[],13],[[],13],[[],13],[[],7],[14,7],[15,7],[2,7],[2,7]],"c":[],"p":[[3,"SqlInterruptHandle"],[3,"SqlInterruptScope"],[3,"Interrupted"],[4,"Result"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Connection"],[3,"Demand"],[8,"AsRef"],[3,"Weak"],[3,"String"],[3,"TypeId"],[3,"NeverInterrupts"],[3,"ShutdownInterruptee"],[8,"Interruptee"]]},\
"logins":{"doc":"","t":"GNNNNNNDNENNNNNNNENNNNDDDDDEDNNNNNNDGDNNNNNILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLXLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMMLOLLMMMMLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLLLLLLLLLLLLLLLLLLLMMMMMMGFFF","n":["ApiResult","BadSyncStatus","BothTargets","CryptoError","DuplicateLogin","EmptyOrigin","EmptyPassword","EncryptedLogin","EncryptionKeyMissing","Error","IOError","IllegalFieldValue","IllegalOrigin","IncorrectKey","Interrupted","Interrupted","InvalidDatabaseFile","InvalidLogin","InvalidLogin","InvalidPath","InvalidRecord","JsonError","Login","LoginDb","LoginEntry","LoginFields","LoginStore","LoginsApiError","LoginsSyncEngine","MalformedIncomingRecord","MigrationError","NoSuchRecord","NoSuchRecord","NoTarget","NonEmptyTable","RecordFields","Result","SecureLoginFields","SqlError","SyncAdapterError","SyncAuthInvalid","UnexpectedLoginsApiError","UrlParseError","ValidateAndFixup","add","add","add_or_update","add_or_update","apply","begin_interrupt_scope","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","breadcrumb","check_for_dupes","check_valid","check_valid","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collection_name","conn","create_logins_sync_engine","db","db","decrypt","decrypt","decrypt_fields","default","default","default","default","default","default","delete","delete","deref","deserialize","do_reset","dupe_exists","encrypt","encrypt","encryption","entry","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","exists","fields","fields","fields","find_dupe","find_login_to_update","find_login_to_update","fixup","fixup","fixup_and_check_for_dupes","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","form_action_origin","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_all","get_by_base_domain","get_by_base_domain","get_by_id","get_collection_request","get_error_handling","get_global_state","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_registered_sync_engine","get_sync_assoc","guid","guid","guid_str","handle_error","hash","hash","hash","hash","hash","hash","http_realm","id","into","into","into","into","into","into","into","into","into","into","into","into","into_bso","list","maybe_fixup","maybe_fixup","new","new","new_from_db","new_in_memory","new_interrupt_handle","open","open_in_memory","origin","password","password_field","provide","provide","provide","record","record","register_with_sync_manager","report_error","reset","reset","scope","sec_fields","sec_fields","sec_fields","serialize","set_global_state","set_local_encryption_key","set_uploaded","source","stage_incoming","staged","store","time_created","time_last_used","time_password_changed","times_used","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","touch","touch","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","username","username_field","validate_and_fixup","validate_and_fixup","validate_and_fixup","validate_and_fixup","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","wipe_local","wipe_local","with_connection","field_info","reason","reason","reason","reason","reason","EncryptorDecryptor","check_canary","create_canary","create_key"],"q":[[0,"logins"],[320,"logins::InvalidLogin"],[321,"logins::LoginsApiError"],[326,"logins::encryption"]],"d":["","","","","","","","A login stored in the database","","Logins error type These are “internal” errors used by …","","","","","","","","Error::InvalidLogin subtypes","","","","","A login stored in the database","","A login entered by the user","","","","","","","","","","","Login data specific to database records","","LoginEntry fields that are stored encrypted","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tell the application to log a breadcrumb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete the record with the provided id. Returns true if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Called by the sync manager to get a sync engine via the …","","","","","A procedural macro that exposes internal errors to …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Tell the application to report an error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Internal helper for doing validation and fixups.","We don’t actually have fixups.","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,36,37,36,37,37,37,0,36,0,36,37,37,33,33,36,36,0,36,36,33,36,0,0,0,0,0,0,0,36,36,33,36,37,36,0,0,0,36,36,33,33,36,0,1,6,1,6,9,1,1,6,9,33,36,37,18,19,20,2,21,4,1,6,9,33,36,37,18,19,20,2,21,4,0,1,60,60,18,19,20,2,21,4,18,19,20,2,21,4,9,1,6,1,6,19,4,4,18,19,20,2,21,4,1,6,1,19,9,1,19,21,0,21,18,19,20,2,21,4,18,19,20,2,21,4,1,2,21,4,1,1,6,60,60,1,33,33,36,36,37,37,18,19,20,2,21,4,18,1,6,9,33,36,36,36,36,36,36,36,36,36,37,18,19,20,2,21,4,6,1,1,6,1,9,36,9,18,19,20,2,21,4,0,9,21,4,4,0,18,19,20,2,21,4,18,20,1,6,9,33,36,37,18,19,20,2,21,4,4,6,60,60,6,9,6,6,1,1,1,18,19,18,33,36,37,21,4,6,0,6,9,9,2,21,4,19,9,9,9,36,9,9,9,20,20,20,20,18,19,20,2,21,4,33,36,37,1,6,1,6,9,33,36,37,18,19,20,2,21,4,1,6,9,33,36,37,18,19,20,2,21,4,1,6,9,33,36,37,18,19,20,2,21,4,1,6,19,18,60,18,19,2,1,6,9,33,36,37,18,19,20,2,21,4,6,9,1,6,1,61,62,63,64,65,66,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[4]]]],[[6,2,7],[[8,[4]]]],[[1,2,3],[[5,[4]]]],[[6,2,7],[[8,[4]]]],[[9,10,11],[[14,[[13,[12]]]]]],[1,[[5,[15]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,16,2,3],5],[17,5],[17,5],[18,18],[19,19],[20,20],[2,2],[21,21],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[9,[[22,[7]]]],[1,23],[[[24,[6]]],[[8,[[26,[25]]]]]],0,0,[[7,3],[[5,[19]]]],[[4,3],[[5,[21]]]],[[4,3],[[5,[19]]]],[[],18],[[],19],[[],20],[[],2],[[],21],[[],4],[[1,7],[[5,[27]]]],[[6,7],[[8,[27]]]],[1,23],[28,[[29,[19]]]],[[9,30],5],[[1,16,2,3],[[5,[27]]]],[[19,3],[[5,[31]]]],[[21,3],[[5,[4]]]],0,[21,2],[[18,18],27],[[19,19],27],[[20,20],27],[[2,2],27],[[21,21],27],[[4,4],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[1,7],[[5,[27]]]],0,0,0,[[1,16,2,3],[[5,[[32,[16]]]]]],[[1,2,3],[[5,[[32,[21]]]]]],[[6,2,7],[[8,[[32,[21]]]]]],[17,[[5,[17]]]],[17,[[5,[17]]]],[[1,16,2,3],[[5,[2]]]],[[33,34],35],[[33,34],35],[[36,34],35],[[36,34],35],[[37,34],35],[[37,34],35],[[18,34],35],[[19,34],35],[[20,34],35],[[2,34],35],[[21,34],35],[[4,34],35],0,[[]],[[]],[[]],[[]],[38,36],[37,36],[39,36],[40,36],[[]],[41,36],[42,36],[43,36],[44,36],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,7],[[8,[[32,[4]]]]]],[1,[[5,[[13,[4]]]]]],[[1,7],[[5,[[13,[4]]]]]],[[6,7],[[8,[[13,[4]]]]]],[[1,7],[[5,[[32,[4]]]]]],[[9,10],[[14,[[32,[45]]]]]],[36,46],[9,[[5,[[32,[31]]]]]],[[[0,[47,17]],48],49],[[[0,[47,17]],48],49],[[[0,[47,17]],48],49],[[[0,[47,17]],48],49],[[[0,[47,17]],48],49],[[[0,[47,17]],48],49],[50,[[32,[[26,[25]]]]]],[9,[[14,[30]]]],[21,16],[4,16],[4,7],0,[[18,51]],[[19,51]],[[20,51]],[[2,51]],[[21,51]],[[4,51]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,3,[32,[31]]],[[5,[12]]]],[6,[[8,[[13,[4]]]]]],[17,[[5,[[32,[17]]]]]],[17,[[5,[[32,[17]]]]]],[[[53,[52]]],[[8,[6]]]],[[[24,[6]]],[[5,[9]]]],[1,6],[[],[[8,[6]]]],[1,[[24,[54]]]],[[[53,[52]]],[[5,[1]]]],[[],[[5,[1]]]],0,0,0,[55],[55],[55],0,0,[[[24,[6]]]],0,[[[24,[6]]],8],[[9,30],14],0,0,0,0,[[19,56],29],[[9,[32,[31]]],5],[[9,7],14],[[9,10,[13,[16]]],14],[36,[[32,[57]]]],[[9,[13,[58]],11],14],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[1,7],5],[[6,7],8],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[],59],[[1,7,2,3],[[5,[4]]]],[[6,7,2,7],[[8,[4]]]],0,0,[[17,27],[[5,[[32,[17]]]]]],[[18,27],[[5,[[32,[18]]]]]],[[19,27],[[5,[[32,[19]]]]]],[[2,27],[[5,[[32,[2]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,8],[9,14],[1,5],[6,8],[23,[[5,[1]]]],0,0,0,0,0,0,0,[[7,7,7],[[8,[27]]]],[[7,7],[[8,[31]]]],[[],[[8,[31]]]]],"c":[],"p":[[3,"LoginDb"],[3,"LoginEntry"],[6,"EncryptorDecryptor"],[3,"EncryptedLogin"],[6,"Result"],[3,"LoginStore"],[15,"str"],[6,"ApiResult"],[3,"LoginsSyncEngine"],[3,"ServerTimestamp"],[3,"Engine"],[3,"OutgoingBso"],[3,"Vec"],[6,"Result"],[3,"SqlInterruptScope"],[3,"Guid"],[8,"Sized"],[3,"LoginFields"],[3,"SecureLoginFields"],[3,"RecordFields"],[3,"Login"],[4,"Cow"],[3,"Connection"],[3,"Arc"],[8,"SyncEngine"],[3,"Box"],[15,"bool"],[8,"Deserializer"],[4,"Result"],[4,"EngineSyncAssociation"],[3,"String"],[4,"Option"],[4,"LoginsApiError"],[3,"Formatter"],[6,"Result"],[4,"Error"],[4,"InvalidLogin"],[3,"EncryptorDecryptorError"],[3,"Error"],[4,"Error"],[3,"Error"],[3,"Interrupted"],[4,"Error"],[4,"ParseError"],[3,"CollectionRequest"],[3,"ErrorHandling"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[4,"SyncEngineId"],[8,"Hasher"],[3,"Path"],[8,"AsRef"],[3,"SqlInterruptHandle"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[3,"IncomingBso"],[3,"TypeId"],[8,"ValidateAndFixup"],[13,"IllegalFieldValue"],[13,"InvalidRecord"],[13,"NoSuchRecord"],[13,"Interrupted"],[13,"SyncAuthInvalid"],[13,"UnexpectedLoginsApiError"]]},\
"nimbus":{"doc":"","t":"CNNDENCDNDCCNLLLLLLLLMMLLLLLLMLLLLLALFMLLLLLLLLLLLLLLLALMMALLLLLLLLLLLLLLLLAMMMMMMMMMMMENNNNNNNNNNNNNNNNNENNNNGNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDNDDDDNENMMLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLMLLLLLLLLLLLMMLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMFMMMMMMMMLLLLLMMMMMMMMLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLAAAAAAAAANNNNEDNEDDNNNDDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLFFFFFFDMMLLLLMMLLMLLLLMMMLLLLLLDMMMMMMLLMLLMMLLMMLLMMLMMMLLLLLLRRRRDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNNNNIDENGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDLLLLLLLLLLLLLLLL","n":["AppContext","Disqualified","Enrolled","EnrolledFeature","EnrollmentStatus","Error","NimbusError","NimbusTargetingHelper","NotEnrolled","RemoteSettingsConfig","Result","TargetingAttributes","WasEnrolled","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","bucket_name","clone","clone","clone","clone_into","clone_into","clone_into","collection_name","deserialize","eq","eq","equivalent","equivalent","error","eval_jexl","evaluate_enrollment","feature_id","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","into","is_enrolled","new","new_enrolled","schema","serialize","server_url","slug","stateful","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","versioning","branch","branch","branch","enrollment_id","enrollment_id","enrollment_id","experiment_ended_at","reason","reason","reason","reason","BehaviorError","BehaviorError","ClientError","DatabaseNotReady","EmptyRatiosError","EvaluationError","IOError","InternalError","IntervalParseError","InvalidDuration","InvalidExperimentFormat","InvalidExpression","InvalidFraction","InvalidPath","InvalidPersistedData","InvalidState","JSONError","MissingEventStore","NimbusError","NoSuchBranch","NoSuchExperiment","OutOfBoundsError","ParseIntError","Result","RkvError","TransformParameterError","TryFromIntError","TryFromSliceError","UrlParsingError","UuidError","VersionParsingError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AvailableExperiment","AvailableRandomizationUnits","Branch","BucketConfig","ClientId","EnrolledExperiment","Experiment","ExperimentBranch","FeatureConfig","NimbusId","RandomizationUnit","UserId","app_id","app_name","apply_nimbus_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch_slug","branches","branches","bucket_config","channel","client_id","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","end_date","enrollment_id","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","feature","feature_id","feature_ids","feature_ids","features","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_value","into","into","into","into","into","into","into","into","into","is_enrollment_paused","is_rollout","namespace","nimbus_id","parse_experiments","proposed_duration","proposed_enrollment","randomization_unit","ratio","ratio","reference_branch","reference_branch","schema_version","serialize","serialize","serialize","serialize","serialize","slug","slug","slug","slug","slug","start","start_date","targeting","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_facing_description","user_facing_description","user_facing_description","user_facing_name","user_facing_name","user_facing_name","user_id","value","with_client_id","with_nimbus_id","with_user_id","behavior","client","dbcache","enrollment","evaluator","matcher","nimbus_client","persistence","updating","AveragePerInterval","AveragePerNonZeroInterval","CountNonZero","Days","EventQueryType","EventStore","Hours","Interval","IntervalConfig","IntervalData","LastSeen","Minutes","Months","MultiIntervalCounter","SingleIntervalCounter","Sum","Weeks","Years","advance_datum","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","data","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_config","from_str","hash","increment","increment","increment","increment_at","increment_then","increment_then","intervals","into","into","into","into","into","into","into","maybe_advance","maybe_advance","new","new","new","new","new","num_rotations","perform_query","persist_data","query","query_event_store","read_from_db","record_event","record_past_event","rotate","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_duration","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_arguments","DatabaseCache","borrow","borrow_mut","commit_and_update","default","from","get_active_experiments","get_enrollment_by_feature","get_experiment_branch","get_feature_config_variables","into","try_from","try_into","type_id","get_enrollments","get_global_user_participation","opt_in_with_branch","opt_out","reset_telemetry_identifiers","set_global_user_participation","TargetingAttributes","active_experiments","app_context","borrow","borrow_mut","clone","clone_into","days_since_install","days_since_update","default","deserialize","enrollments","fmt","from","from","into","is_already_enrolled","language","region","serialize","to_bytes","to_owned","try_from","try_into","type_id","AppContext","android_sdk_version","app_build","app_id","app_name","app_version","architecture","borrow","borrow_mut","channel","clone","clone_into","custom_targeting_attributes","debug_tag","default","deserialize","device_manufacturer","device_model","fmt","from","home_directory","installation_date","into","locale","os","os_version","serialize","to_bytes","to_owned","try_from","try_into","type_id","DB_KEY_APP_VERSION","DB_KEY_FETCH_ENABLED","DB_KEY_INSTALLATION_DATE","DB_KEY_UPDATE_DATE","InternalMutableState","NimbusClient","NimbusStringHelper","advance_event_time","apply_pending_experiments","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_events","create_string_helper","create_targeting_helper","default","dump_state_to_log","event_store","fetch_experiments","from","from","from","get_active_experiments","get_all_experiments","get_available_experiments","get_enrollment_by_feature","get_experiment_branch","get_experiment_branches","get_feature_config_variables","get_global_user_participation","get_targeting_attributes","get_uuid","initialize","into","into","into","new","nimbus_id","opt_in_with_branch","opt_out","record_event","record_past_event","reset_enrollments","reset_telemetry_identifiers","set_experiments_locally","set_fetch_enabled","set_global_user_participation","set_nimbus_id","string_format","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_targeting_attributes","Database","Enrollments","EventCounts","Experiments","Meta","Readable","SingleStore","StoreId","Updates","Writer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","collect_all","delete","from","from","from","get","get_store","into","into","into","new","new","open_rkv","put","read","try_collect_all","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write","read_and_remove_pending_experiments","write_pending_experiments","Version","borrow","borrow_mut","clone","clone_into","default","eq","fmt","from","into","partial_cmp","to_owned","try_from","try_from","try_from","try_into","type_id"],"q":[[0,"nimbus"],[76,"nimbus::EnrollmentStatus"],[87,"nimbus::error"],[152,"nimbus::schema"],[335,"nimbus::stateful"],[344,"nimbus::stateful::behavior"],[499,"nimbus::stateful::dbcache"],[513,"nimbus::stateful::enrollment"],[519,"nimbus::stateful::evaluator"],[544,"nimbus::stateful::matcher"],[576,"nimbus::stateful::nimbus_client"],[638,"nimbus::stateful::persistence"],[681,"nimbus::stateful::updating"],[683,"nimbus::versioning"]],"d":["","","","","","","","","","Custom configuration for the client. Currently includes …","","","","","","","","","","","","","","","","","","","","","","","","","","Not complete yet This is where the error definitions can go","","Determine the enrolment status for an experiment.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Nimbus SDK App Version Comparison","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module defines all the information needed to match a …","","Our storage abstraction, currently backed by Rkv.","This module implements the primitive functions to implement","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Return information about all enrolled experiments. Note …","","","","Reset unique identifiers in response to application-level …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","The <code>AppContext</code> object represents the parameters and …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Nimbus is the main struct representing the experiments …","","Advances the event store’s concept of <code>now</code> artificially.","","","","","","","","Clear all events in the Nimbus event store.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Records an event for the purposes of behavioral targeting.","Records an event for the purposes of behavioral targeting.","Reset all enrollments and experiments in the database.","Reset internal state in response to application-level …","","","","","","","","","","","","","","","","Database used to access persisted data This an abstraction …","Store containing the set of known experiment enrollments.","Store containing collected counts of behavior events for …","Store containing the set of known experiments, as read …","Store containing miscellaneous metadata about this client …","","A wrapper for an Rkv store. Implemented to allow any value …","Enumeration of the different stores within our database.","Store containing pending updates to experiment data.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Gets a Store object, which used with the writer returned by","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Main constructor for a database Initiates the Rkv database …","","","Function used to obtain a “reader” which is used for …","Fork of collect_all that simply drops records that fail to …","","","","","","","","","","Function used to obtain a “writer” which is used for …","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[0,2,2,0,0,2,0,0,2,0,0,0,2,7,1,2,3,7,1,2,3,3,1,1,2,3,1,2,3,1,2,2,3,2,3,0,7,0,3,1,2,3,7,1,2,3,2,7,1,2,3,2,7,2,0,2,1,3,0,2,1,2,3,7,1,2,3,7,1,2,3,7,1,2,3,0,94,95,96,94,95,96,96,94,97,95,98,0,27,27,27,27,27,27,27,28,28,27,27,27,27,27,28,27,28,0,27,27,27,27,0,27,27,27,27,27,27,27,27,28,27,28,27,27,28,28,27,27,27,27,27,27,27,27,27,27,27,27,28,27,28,27,28,27,27,28,27,28,27,28,27,28,0,0,0,0,47,0,0,0,0,47,0,47,11,11,10,48,49,43,11,44,45,46,47,10,48,49,43,11,44,45,46,47,10,43,48,11,11,11,10,43,11,44,45,46,47,43,11,44,45,46,47,46,11,44,45,46,47,10,11,44,45,46,47,11,43,11,44,45,46,47,11,44,45,46,47,45,44,43,11,45,43,11,44,45,46,47,48,48,49,49,43,11,44,45,46,47,10,10,48,49,43,11,44,45,46,47,10,11,11,46,10,0,11,11,46,49,45,48,11,11,11,44,45,46,47,48,49,43,11,45,46,11,11,11,44,45,46,47,43,11,44,45,46,47,46,48,49,43,11,44,45,46,47,10,48,49,43,11,44,45,46,47,10,48,49,43,11,44,45,46,47,10,48,43,11,48,43,11,10,44,10,10,10,0,0,0,0,0,0,0,0,0,57,57,57,56,0,0,56,0,0,0,57,56,56,0,0,57,56,56,17,57,17,52,53,54,55,56,57,17,52,53,54,55,56,17,17,52,53,54,55,56,17,52,53,54,55,56,53,53,17,52,54,55,17,52,53,54,55,56,56,56,57,57,17,52,53,54,55,56,56,57,17,17,17,52,53,54,55,56,53,56,56,52,53,54,54,52,53,52,57,17,52,53,54,55,56,52,53,17,52,53,54,55,56,57,17,17,0,17,17,17,54,17,52,53,54,55,56,17,52,53,54,55,56,56,17,52,53,54,55,56,57,56,57,17,17,52,53,54,55,56,57,17,52,53,54,55,56,57,17,52,53,54,55,56,57,0,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,0,0,0,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,0,0,0,0,0,0,0,75,75,75,77,78,75,77,78,75,75,75,78,75,75,75,75,77,78,75,75,75,75,75,75,75,75,75,77,75,75,77,78,75,75,75,75,75,75,75,75,75,75,75,75,77,75,77,78,75,77,78,75,77,78,75,0,83,83,83,83,0,0,0,83,0,83,81,51,83,81,51,81,81,81,83,81,51,81,51,83,81,51,81,51,51,81,51,81,83,81,51,83,81,51,83,81,51,51,0,0,0,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[2,2],[3,3],[[]],[[]],[[]],0,[4,[[5,[2]]]],[[2,2],6],[[3,3],6],[[],6],[[],6],0,[[7,8],[[9,[6]]]],[[10,11,7],[[9,[0]]]],0,[[1,12],[[5,[13]]]],[[2,12],14],[[3,12],14],[[]],[[]],[[]],[[]],[[2,15]],[[]],[[]],[[]],[[]],[2,6],[[16,[19,[[18,[17]]]]],7],0,0,[[2,21],5],0,0,0,[[],[[5,[[24,[22,23]],25]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[27,12],14],[[27,12],14],[[28,12],14],[[28,12],14],[29,27],[[]],[30,27],[31,27],[32,27],[33,27],[34,27],[28,27],[35,27],[36,27],[37,27],[38,27],[[]],[[]],[[]],[39],[39],[27,[[41,[40]]]],[[],8],[[],8],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,42],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[43,43],[11,11],[44,44],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],11],[[],44],[[],45],[[],46],[[],47],[[],10],[4,[[5,[11]]]],[4,[[5,[44]]]],[4,[[5,[45]]]],[4,[[5,[46]]]],[4,[[5,[47]]]],0,0,[[11,11],6],[[44,44],6],[[45,45],6],[[46,46],6],[[47,47],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,[[43,12],14],[[11,12],14],[[44,12],14],[[45,12],14],[[46,12],14],[[47,12],14],[11,48],[[]],[[]],[45,49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[10,47],[[41,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[20,[[9,[[24,[11]]]]]],0,0,0,0,0,0,0,0,[[11,21],5],[[44,21],5],[[45,21],5],[[46,21],5],[[47,21],5],0,0,0,0,0,0,0,0,[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,[20,10],[42,10],[20,10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,50]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[17,51],9],[17,17],[52,52],[53,53],[54,54],[55,55],[56,56],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],17],[[],52],[[],54],[[],55],[4,[[5,[17]]]],[4,[[5,[52]]]],[4,[[5,[53]]]],[4,[[5,[54]]]],[4,[[5,[55]]]],[4,[[5,[56]]]],[[56,56],6],[[],6],[[57,12],14],[[57,12],14],[[17,12],14],[[52,12],14],[[53,12],14],[[54,12],14],[[55,12],14],[[56,12],14],[[56,12],14],[[]],[[]],[24,17],[[[58,[8,52]]],17],[[]],[[]],[[]],[[]],[[]],[[59,56],53],[20,[[9,[56]]]],[[56,15]],[[52,60],9],[[53,60],9],[[54,60],9],[[54,59,60],9],[[52,[62,[61]],60],9],[[53,[62,[61]],60],9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[52,[62,[61]]],9],[[53,[62,[61]]],9],[[],17],[[[24,[53]]],52],[55,53],[59,54],[[59,56],55],[[56,[62,[61]],[62,[61]]],[[9,[63]]]],[[57,[64,[60]],59],[[9,[65]]]],[[17,51],9],[[17,20,56,59,59,57],[[9,[65]]]],[[[19,[[18,[17]]]],57,[67,[66]]],[[9,[66]]]],[[17,51],9],[[17,60,20,[41,[[62,[61]]]]],9],[[17,60,20,[41,[[62,[61]]]],50],9],[[54,63],9],[[17,21],5],[[52,21],5],[[53,21],5],[[54,21],5],[[55,21],5],[[56,21],5],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[],[[5,[[24,[22,23]],25]]]],[[56,68],50],[[]],[[]],[[]],[[]],[[]],[[]],[[],8],[[],8],[[],5],[51,[[9,[17,27]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[57,[67,[66]]],9],0,[[]],[[]],[[69,51,70,[71,[20]]],9],[[],69],[[]],[69,[[9,[[24,[43]]]]]],[[69,20],[[9,[[41,[3]]]]]],[[69,20],[[9,[[41,[8]]]]]],[[69,20],[[9,[[41,[8]]]]]],[[]],[[],5],[[],5],[[],26],[[51,72],[[9,[[24,[43]]]]]],[[51,72],[[9,[6]]]],[[51,70,20,20],[[9,[[24,[0]]]]]],[[51,70,20],[[9,[[24,[0]]]]]],[[51,70],[[9,[[24,[0]]]]]],[[51,70,6],9],0,0,0,[[]],[[]],[73,73],[[]],0,0,[[],73],[4,[[5,[73]]]],0,[[73,12],14],[74,73],[[]],[[]],0,0,0,[[73,21],5],[[],[[5,[[24,[22,23]],25]]]],[[]],[[],5],[[],5],[[],26],0,0,0,0,0,0,0,[[]],[[]],0,[74,74],[[]],0,0,[[],74],[4,[[5,[74]]]],0,0,[[74,12],14],[[]],0,0,[[]],0,0,0,[[74,21],5],[[],[[5,[[24,[22,23]],25]]]],[[]],[[],5],[[],5],[[],26],0,0,0,0,0,0,0,[[75,68],9],[75,[[9,[[24,[0]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[75,9],[[75,[41,[[76,[8,66]]]]],[[9,[[19,[77]]]]]],[[75,[41,[[76,[8,66]]]]],[[9,[[19,[7]]]]]],[[],78],[75,9],[75,[[19,[[18,[17]]]]]],[75,9],[[]],[[]],[[]],[75,[[9,[[24,[43]]]]]],[75,[[9,[[24,[11]]]]]],[75,[[9,[[24,[48]]]]]],[[75,8],[[9,[[41,[3]]]]]],[[75,8],[[9,[[41,[8]]]]]],[[75,8],[[9,[[24,[49]]]]]],[[75,8],[[9,[[41,[8]]]]]],[75,[[9,[6]]]],[75,73],[[77,8],[[41,[8]]]],[75,9],[[]],[[]],[[]],[[74,[24,[8]],[80,[79]],[41,[1]],10],[[9,[75]]]],[75,[[9,[42]]]],[[75,8,8],[[9,[[24,[0]]]]]],[[75,8],[[9,[[24,[0]]]]]],[[75,8,68],9],[[75,8,68,68],9],[75,9],[[75,10],[[9,[[24,[0]]]]]],[[75,8],9],[[75,6],9],[[75,6],[[9,[[24,[0]]]]]],[[75,42],9],[[77,8,[41,[8]]],8],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[[75,73]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[81,70],9],[[81,72],[[9,[[24,[[0,[16,82]]]]]]]],[[81,70,20],9],[[]],[[]],[[]],[[81,72,20],[[9,[[41,[[0,[16,82]]]]]]]],[[51,83],81],[[]],[[]],[[]],[[[85,[84]]],81],[[[87,[86]]],[[9,[51]]]],[[[87,[86]]],[[9,[[89,[88]]]]]],[[81,70,20,[0,[16,82]]],9],[51,[[9,[[91,[90]]]]]],[[81,72],[[9,[[24,[[0,[16,82]]]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[51,[[9,[70]]]],[[51,70],[[9,[[41,[[24,[11]]]]]]]],[[51,70,[24,[11]]],9],0,[[]],[[]],[92,92],[[]],[[],92],[[92,92],6],[[92,12],14],[[]],[[]],[[92,92],[[41,[93]]]],[[]],[20,[[5,[92]]]],[8,[[5,[92]]]],[[],5],[[],5],[[],26]],"c":[],"p":[[3,"RemoteSettingsConfig"],[4,"EnrollmentStatus"],[3,"EnrolledFeature"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"NimbusTargetingHelper"],[3,"String"],[6,"Result"],[3,"AvailableRandomizationUnits"],[3,"Experiment"],[3,"Formatter"],[3,"Error"],[6,"Result"],[8,"Hasher"],[8,"Serialize"],[3,"EventStore"],[3,"Mutex"],[3,"Arc"],[15,"str"],[8,"Serializer"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"DataError"],[3,"TypeId"],[4,"NimbusError"],[4,"BehaviorError"],[3,"TryFromSliceError"],[3,"Error"],[3,"TryFromIntError"],[3,"ParseIntError"],[4,"StoreError"],[3,"Error"],[4,"RemoteSettingsError"],[4,"ParseError"],[3,"Error"],[4,"EvaluationError"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"Uuid"],[3,"EnrolledExperiment"],[3,"FeatureConfig"],[3,"Branch"],[3,"BucketConfig"],[4,"RandomizationUnit"],[3,"AvailableExperiment"],[3,"ExperimentBranch"],[3,"Duration"],[3,"Database"],[3,"MultiIntervalCounter"],[3,"SingleIntervalCounter"],[3,"IntervalData"],[3,"IntervalConfig"],[4,"Interval"],[4,"EventQueryType"],[3,"HashMap"],[15,"usize"],[15,"u64"],[3,"Utc"],[3,"DateTime"],[15,"i32"],[3,"Iter"],[15,"f64"],[4,"Value"],[15,"slice"],[15,"i64"],[3,"DatabaseCache"],[6,"Writer"],[3,"HashSet"],[8,"Readable"],[3,"TargetingAttributes"],[3,"AppContext"],[3,"NimbusClient"],[3,"Map"],[3,"NimbusStringHelper"],[3,"InternalMutableState"],[3,"PathBuf"],[8,"Into"],[3,"SingleStore"],[8,"Deserialize"],[4,"StoreId"],[3,"DatabaseImpl"],[3,"SingleStore"],[3,"Path"],[8,"AsRef"],[3,"EnvironmentImpl"],[3,"Rkv"],[3,"RoTransactionImpl"],[3,"Reader"],[3,"Version"],[4,"Ordering"],[13,"Enrolled"],[13,"Disqualified"],[13,"WasEnrolled"],[13,"NotEnrolled"],[13,"Error"]]},\
"nimbus_cli":{"doc":"","t":"NEDNNNNNNNNNNENNDNNNNNHNNLLMLLLLLLLLLLLLLMALLLLAALLMLLLLLLLALLLLLLLLLLLLFLLLLLLLLLLLLLFLLLAMMMMLLALLALLLLLLLLLLLLLLLLLLLLLALAMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNDENNDDDDNNNNNNNDNDNNNNNNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMLMLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMFFFMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMFFFFFFFFFFFFFFFAAAAAARFFFFDDLMLLLLMMLMLLLMMLMMLLLLLLLMMLMLLMMMLLLLLLLLMMGDGDLLLLFFFLMLLFFLLLMLLFMMFFFMFFLFFLLLLLLLLMDLLLLLMLLLLMMLLLLAAAAEDNNNNLLLLLLLLMLLLLLLLLFLLLLLLLLLLLLLLLLLLMMMMMMMMMNENNNNNLLLLFLLFLLLLFFLLLLLLLLLLLMMMMMMMDMMLLMLLLMLMLLLLLLLMLLMLLLLNNELLLLLLLLLLLLLLLLLMMMMMMFADDDLLLLLLFLLLLLLLLLLLLLLLLLLMIIKKKKKKKKFKFFFFKFFFFFF","n":["Android","AppCommand","AppOpenArgs","ApplyFile","CaptureLogs","Defaults","Enroll","ExtractFeatures","FetchList","FmlPassthrough","Info","Ios","Kill","LaunchableApp","List","LogState","NimbusApp","NoOp","Open","Reset","StartServer","TailLogs","USER_AGENT","Unenroll","ValidateExperiment","android_start","app_name","app_name","app_opening_deeplink","apply_list","args","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capture_logs","channel","channel","cli","clone","clone","clone_into","clone_into","cmd","config","copy_to_clipboard","deeplink","deeplink","default","enroll","eq","eq","eq","eq","exe","feature_utils","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","get_commands_from_cli","github_repo","into","into","into","into","ios_app_container","ios_log_file","ios_log_file_command","ios_reset","ios_start","kill_app","log_state","longform_url","main","mandatory_scheme","manifest_location","open","output","output","passthrough","pbcopy","pbpaste","platform","prepend_scheme","protocol","ref_from_version","reset_app","sources","start_app","tail_logs","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from_app_channel_device","try_into","try_into","try_into","try_into","try_validate","type_id","type_id","type_id","type_id","unenroll_all","updater","validate_experiment","value_utils","app","app","app","app","app","app","app","app","app","args","branch","branch","cwd","experiment","experiment","experiment","experiment","feature_id","feature_id","file","file","list","list","list","manifest","manifest","manifest","multi","open","open","open","open","open","output","output","output","params","params","preserve_bucketing","preserve_nimbus_db","preserve_nimbus_db","preserve_targeting","rollouts","validate","activity_name","app_id","device_id","device_id","open_deeplink","package_name","scheme","scheme","ApplyFile","CaptureLogs","Cli","CliCommand","Defaults","Enroll","ExperimentArgs","ExperimentListArgs","ExperimentListFilterArgs","ExperimentListSourceArgs","Features","Fetch","FetchList","Fml","Info","List","LogState","ManifestArgs","Open","OpenArgs","ResetApp","StartServer","TailLogs","TestFeature","Unenroll","Validate","active_on","app","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel","check_valid","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","command","command","command_for_update","deeplink","default","default","default","default","default","default","device_id","enrolling_on","experiment","feature","file","file","filter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","group_id","group_id","group_id","group_id","group_id","group_id","group_id","has_subcommand","into","into","into","into","into","into","into","into","is_rollout","manifest","open_args","output","passthrough","patch","pbcopy","pbpaste","ref_","reset_app","server","should_kill","should_reset","slug","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","use_api","use_rs","validate_date","validate_date_parts","validate_num","version","args","branch","branch","experiment","experiment","experiment","experiment","experiment","feature_id","feature_id","feature_id","file","file","files","list","list","manifest","manifest","manifest","manifest","manifest","multi","no_clobber","no_validate","no_validate","open","open","open","open","open","open","output","output","output","output","output","patch","preserve_bucketing","preserve_nimbus_db","preserve_nimbus_db","preserve_targeting","recipes","rollouts","validate","logcat_args","output_err","output_ok","process_cmd","prompt","api_v6_production_server","api_v6_stage_server","manifest_cache_dir","rs_production_server","rs_stage_server","server_host","server_port","branch","create_experiment","slug","deeplink","features","fetch","fml_cli","info","server","QUERY","join_query","longform_deeplink_url","set_clipboard","fml_cli","DateRange","ExperimentInfo","active","app_name","borrow","borrow","borrow_mut","borrow_mut","branches","bucketing","bucketing_percent","channel","contains","default","default","duration","end","enrollment","enrollment","features","fmt","fmt","fmt","from","from","into","into","is_enrollment_paused","is_rollout","new","proposed","serialize","serialize","slug","start","targeting","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_facing_description","user_facing_name","Db","InMemoryDb","Srhl","StartAppPostPayload","borrow","borrow","borrow_mut","borrow_mut","create_app","create_server","create_state","deserialize","experiments","from","from","get_address","index","into","into","latest","latest","new","new","no_cache_layer","payloads","platform","post_deeplink","post_handler","post_payload","reloader","rs","script","serialize","start_server","style","try_from","try_from","try_into","try_into","type_id","type_id","update","url","url","StartAppProtocol","borrow","borrow_mut","clone","clone_into","default","experiments","fmt","from","from_ref","into","log_state","reset_db","to_owned","try_from","try_into","type_id","experiment","experiment_list","filter","manifest","ExperimentSource","FeatureDefaults","FromApiV6","FromFeatureFiles","FromList","WithPatchFile","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deserialize","eq","features","fmt","fmt","from","from","from_ref","get_features_json","into","into","patch_experiment","print_features","print_info","serialize","to_owned","to_string","try_from","try_from","try_from","try_from","try_from_api","try_from_file","try_from_rs","try_from_slug","try_from_url","try_into","try_into","type_id","type_id","app","endpoint","feature_id","files","inner","list","patch","slug","slug","Empty","ExperimentListSource","Filtered","FromApiV6","FromFile","FromRecipes","FromRemoteSettings","borrow","borrow_mut","clone","clone_into","decode_list_slug","eq","fetch_list","filter_list","fmt","from","from_ref","into","is_preview_collection","is_production_server","print_list","to_owned","try_from","try_from","try_from","try_from","try_from_api","try_from_rs","try_from_slug","try_into","type_id","endpoint","endpoint","file","filter","inner","is_preview","recipes","ExperimentListFilter","active_on","app","borrow","borrow_mut","channel","clone","clone_into","default","enrolling_on","eq","feature_pattern","fmt","for_app","from","from","from_ref","into","is_empty","is_rollout","matches","matches_info","slug_pattern","to_owned","try_from","try_into","type_id","FromFile","FromGithub","ManifestSource","borrow","borrow_mut","channel","eq","fmt","fmt","from","get_defaults_json","into","manifest_file","manifest_loader","print_defaults","to_string","try_from","try_from","try_into","type_id","channel","channel","github_repo","manifest_file","manifest_file","ref_","check_for_update","taskcluster","ReqwestGunzippingHttpClient","Response","TaskClusterRegistry","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_taskcluster_for_update","deserialize","from","from","from","get","get_latest_version","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","CliUtils","Patch","get_array","get_bool","get_mut_array","get_mut_object","get_object","get_str","get_u64","has","is_yaml","patch","prepare_experiment","prepare_recipe","prepare_rollout","read_from_file","set","try_extract_data_list","try_find_branches_from_experiment","try_find_experiment","try_find_features_from_branch","try_find_mut_features_from_branch","write_to_file_or_print"],"q":[[0,"nimbus_cli"],[125,"nimbus_cli::AppCommand"],[169,"nimbus_cli::LaunchableApp"],[177,"nimbus_cli::cli"],[392,"nimbus_cli::cli::CliCommand"],[436,"nimbus_cli::cmd"],[441,"nimbus_cli::config"],[448,"nimbus_cli::feature_utils"],[451,"nimbus_cli::output"],[457,"nimbus_cli::output::deeplink"],[461,"nimbus_cli::output::fml_cli"],[462,"nimbus_cli::output::info"],[508,"nimbus_cli::output::server"],[552,"nimbus_cli::protocol"],[569,"nimbus_cli::sources"],[573,"nimbus_cli::sources::experiment"],[615,"nimbus_cli::sources::experiment::ExperimentSource"],[624,"nimbus_cli::sources::experiment_list"],[656,"nimbus_cli::sources::experiment_list::ExperimentListSource"],[663,"nimbus_cli::sources::filter"],[690,"nimbus_cli::sources::manifest"],[710,"nimbus_cli::sources::manifest::ManifestSource"],[716,"nimbus_cli::updater"],[718,"nimbus_cli::updater::taskcluster"],[747,"nimbus_cli::value_utils"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send a complete JSON file to the Nimbus SDK and apply it …","Capture the logs into a file.","","","Print the defaults for the manifest.","Enroll into an experiment or a rollout.","","","","","Print the feature configuration involved in the branch of …","Fetch one or more named experiments and rollouts and put …","Fetch a list of experiments and put it in a file.","Execute a nimbus-fml command. See","Displays information about an experiment","List the experiments from a server","Print the state of the Nimbus database to logs.","","Open the app without changing the state of experiment …","","Reset the app back to its just installed state","Start a server","Follow the logs for the given app.","Configure an application feature with one or more feature …","Unenroll from all experiments and rollouts","Validate an experiment against a feature manifest","","The app name according to Nimbus.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The channel according to Nimbus. This determines which app …","","","","","","","","","","","","","","","","","","","","Optional deeplink. If present, launch with this link.","","","","","","","The device id of the simulator, emulator or device.","","The experiment slug, including the server and collection.","","An optional file from which to get the experiment.","An optional file","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","An optional manifest file","","An optional file to dump experiments into.","Optionally, add platform specific arguments to the adb or …","An optional patch file, used to patch feature …","Instead of opening via adb or xcrun simctl, construct a …","Instead of opening via adb or xcrun simctl, construct a …","The branch/tag/commit for the version of the manifest to …","Resets the app back to its initial state before launching","A server slug e.g. preview, release, stage, stage/preview","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use the v6 API to fetch the experiment recipes.","Use remote settings to fetch the experiment recipe.","","","","An optional version of the app. If present, constructs the …","","The branch slug.","The branch of the experiment","","","","","","An optional feature-id","An optional feature-id: if it exists in this branch, print …","The identifier of the feature to configure","The filename to be loaded into the SDK.","The file to put the logs.","One or more files containing a feature config for the …","","","","","","","","Print out the features involved in this branch as in a …","By default, the app is terminated before sending the a …","Don’t validate the feature config files before enrolling","Don’t validate the feature config files before enrolling","","","","","","","An optional file to print the manifest defaults.","An optional file to print the output.","The file to download the recipes to.","The file to download the recipes to.","An optional file to print the output.","An optional patch file, used to patch feature …","Preserves the original experiment bucketing","Keeps existing enrollments and experiments before …","Keeps existing enrollments and experiments before …","Preserves the original experiment targeting","The recipe slugs, including server.","Optional rollout slugs, including the server and …","If set, then merge the experimental configuration with the …","","","","","","","","","","","","","","","","","","","","","","","","Construct a URL from the deeplink and the protocol object.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","This is the protocol that each app understands.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Check the specifically crafted JSON file for this package …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,16,16,16,16,16,16,16,16,1,16,0,16,16,0,16,16,16,16,16,0,16,16,1,6,6,1,1,3,1,6,16,3,1,6,16,3,1,6,6,0,1,6,1,6,0,0,1,1,3,3,1,1,6,16,3,1,0,1,6,16,3,1,6,6,16,3,3,1,6,0,6,1,6,16,3,1,1,1,1,1,1,1,1,0,1,6,1,0,3,3,3,3,1,1,0,6,1,0,1,1,1,6,1,1,6,16,16,3,1,1,6,16,3,16,1,6,16,3,1,0,6,0,83,84,85,86,87,88,89,90,91,92,85,93,92,85,93,94,95,96,93,84,97,83,97,98,96,93,95,93,83,85,87,88,91,96,93,94,85,95,85,83,85,85,85,93,99,100,99,100,99,99,99,100,26,26,0,0,26,26,0,0,0,0,26,26,26,26,26,26,26,0,26,0,26,26,26,26,26,26,31,19,19,27,20,28,29,30,31,19,27,20,28,29,30,31,26,26,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,31,26,26,27,20,28,29,30,31,26,27,20,28,29,30,31,19,19,19,20,27,20,28,29,30,31,19,31,28,31,28,30,29,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,26,27,20,28,29,30,31,19,27,20,28,29,30,31,26,19,26,27,20,28,29,30,31,31,27,26,20,20,28,20,20,27,20,30,26,26,31,29,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,19,26,27,20,28,29,30,31,30,28,0,0,0,27,101,102,103,102,103,104,105,106,107,103,108,109,110,108,111,112,107,102,103,108,106,103,113,102,108,109,102,114,113,108,115,107,103,104,111,105,108,102,109,102,102,104,102,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,42,41,42,41,41,41,41,42,41,42,41,42,41,41,41,41,42,42,41,42,41,42,41,41,42,42,41,42,41,42,41,42,41,41,42,41,42,41,42,41,41,0,0,0,0,45,54,45,54,0,0,0,54,54,45,54,0,0,45,54,45,45,45,54,0,45,54,0,0,0,45,0,0,54,0,0,45,54,45,54,45,54,45,45,54,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,14,14,14,14,14,66,14,66,14,14,66,14,66,14,14,14,66,14,14,14,66,0,14,14,66,14,14,14,14,14,66,14,14,14,14,14,14,66,14,66,116,117,116,116,118,119,118,119,117,10,0,10,10,10,10,10,10,10,10,10,0,10,10,0,10,10,10,10,0,0,10,10,10,10,10,10,10,10,10,10,10,120,121,122,123,123,121,124,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,24,24,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,125,126,125,125,126,125,0,0,0,0,0,127,128,72,127,128,72,0,72,127,128,72,128,127,127,128,72,127,128,72,127,128,72,127,128,72,72,0,0,129,129,129,129,129,129,129,129,0,130,0,0,0,0,129,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3],[[5,[4]]]],[6,[[8,[7]]]],0,[1,[[8,[9]]]],[[1,3,10,11],[[5,[11]]]],[3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,12],[[5,[11]]]],[6,[[8,[7]]]],0,0,[1,1],[6,6],[[]],[[]],0,0,[[1,2,3],[[5,[13]]]],[[1,3],[[5,[[8,[7]]]]]],0,[[],3],[[1,6,14,[15,[14]],9,11,11,11,3],[[5,[11]]]],[[1,1],11],[[6,6],11],[[16,16],11],[[3,3],11],[1,[[5,[4]]]],0,[[1,17],18],[[6,17],18],[[16,17],18],[[3,17],18],[[]],[[]],[19,6],[[]],[[]],[20,3],[[]],[[]],[21,[[5,[[15,[16]]]]]],[6,[[5,[9]]]],[[]],[[]],[[]],[[]],[[1,9],[[5,[7]]]],[1,[[5,[12]]]],[1,7],[[1,7,7],[[5,[11]]]],[[1,2,3],[[5,[4]]]],[1,[[5,[11]]]],[[1,3],[[5,[11]]]],[[1,2,3],[[5,[7]]]],[[],5],[1,[[5,[9]]]],[6,[[5,[9]]]],[[1,3],[[5,[11]]]],0,0,0,0,0,[1,9],[[1,9],[[5,[7]]]],0,[[6,[8,[7]],7],[[5,[7]]]],[1,[[5,[11]]]],0,[[1,2,3],[[5,[11]]]],[1,[[5,[11]]]],[[]],[[]],[[],22],[19,[[5,[1]]]],[[],22],[[],22],[19,[[5,[16]]]],[[],22],[[[8,[9]],[8,[9]],[8,[9]]],[[5,[1]]]],[[],22],[[],22],[[],22],[[],22],[19,[[5,[16]]]],[[],23],[[],23],[[],23],[[],23],[[1,3],[[5,[11]]]],0,[[6,24,14],[[5,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[26,5],[26,26],[27,27],[20,20],[28,28],[29,29],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],0,[[],25],0,[[],27],[[],20],[[],28],[[],29],[[],30],[[],31],0,0,0,0,0,0,0,[[27,17],18],[[20,17],18],[[28,17],18],[[29,17],18],[[30,17],18],[[31,17],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,[[22,[19,33]]]],[32,[[22,[26,33]]]],[32,[[22,[27,33]]]],[32,[[22,[20,33]]]],[32,[[22,[28,33]]]],[32,[[22,[29,33]]]],[32,[[22,[30,33]]]],[32,[[22,[31,33]]]],[32,[[22,[19,33]]]],[32,[[22,[26,33]]]],[32,[[22,[27,33]]]],[32,[[22,[20,33]]]],[32,[[22,[28,33]]]],[32,[[22,[29,33]]]],[32,[[22,[30,33]]]],[32,[[22,[31,33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[34]]]],[[],[[8,[34]]]],[[],[[8,[34]]]],[[],[[8,[34]]]],[[],[[8,[34]]]],[[],[[8,[34]]]],[[],[[8,[34]]]],[9,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[26,[[8,[20]]]],0,0,0,0,0,0,0,0,[26,11],[26,11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[19,32],[[22,[33]]]],[[26,32],[[22,[33]]]],[[27,32],[[22,[33]]]],[[20,32],[[22,[33]]]],[[28,32],[[22,[33]]]],[[29,32],[[22,[33]]]],[[30,32],[[22,[33]]]],[[31,32],[[22,[33]]]],[[19,32],[[22,[33]]]],[[26,32],[[22,[33]]]],[[27,32],[[22,[33]]]],[[20,32],[[22,[33]]]],[[28,32],[[22,[33]]]],[[29,32],[[22,[33]]]],[[30,32],[[22,[33]]]],[[31,32],[[22,[33]]]],0,0,[9,[[22,[7,7]]]],[[9,9,9],[[22,[9]]]],[[9,13],[[22,[9]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[15,[9]]]],[[35,9,9],5],[[35,9],5],[16,[[5,[11]]]],[[35,9],5],[[],7],[[],7],[[],[[8,[12]]]],[[],7],[[],7],[[],7],[[],7],[[9,36],[[5,[37]]]],[[6,9,[15,[12]]],[[5,[37]]]],[36,[[5,[7]]]],0,0,0,0,0,0,0,[[9,9],7],[[9,2],[[5,[7]]]],[7,[[5,[[39,[38]]]]]],[[[15,[40]],36],[[5,[11]]]],0,0,[41,42],0,[[]],[[]],[[]],[[]],0,0,[41,7],0,[[42,9],11],[[],41],[[],42],0,0,[41,42],0,0,[[41,17],18],[[42,17],18],[[42,17],18],[[]],[[]],[[]],[[]],0,0,[[[8,[37]],[8,[37]],[8,[37]]],42],0,[[41,43],22],[[42,43],22],0,0,0,[[],7],[37,[[5,[41]]]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[44,[47,[[46,[45]]]]],48],[[44,[47,[[46,[45]]]]],[[5,[[51,[49,[50,[48]]]],52]]]],[44,[[47,[[46,[45]]]]]],[53,[[22,[54]]]],0,[[]],[[]],[[],[[5,[55]]]],[[[56,[[47,[[46,[45]]]]]]],[[57,[7]]]],[[]],[[]],[45,[[8,[54]]]],0,[58,45],[[9,9,[8,[37]]],54],[[],[[61,[[60,[59]],[61,[[60,[59]],[60,[59]]]]]]]],0,0,[[9,9,[8,[37]]],[[5,[11]]]],[[[56,[[47,[[46,[45]]]]]],[62,[54]]],63],[[64,9],[[5,[7]]]],0,[[[56,[[47,[[46,[45]]]]]],65],63],[[[56,[[47,[[46,[45]]]]]]],9],[[54,43],22],[[],[[5,[11]]]],[[[56,[[47,[[46,[45]]]]]]],9],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[45,54]],[[45,9],[[8,[9]]]],0,0,[[]],[[]],[2,2],[[]],[[],2],0,[[2,17],18],[[]],[[]],[[]],0,0,[[]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[14,14],[[]],[53,[[22,[66]]]],[[14,14],11],0,[[14,17],18],[[14,17],18],[[]],[[]],[[]],[[14,24,[8,[7]],7,11,11],[[5,[37]]]],[[]],[[]],[[14,12],[[5,[37]]]],[[14,7,24,[8,[7]],11,11,[8,[[67,[36]]]]],[[5,[11]]]],[[14,[8,[[67,[36]]]]],[[5,[11]]]],[[66,43],22],[[]],[[],7],[19,[[5,[14]]]],[[],22],[28,[[5,[14]]]],[[],22],[9,[[5,[14]]]],[[36,9],[[5,[14]]]],[9,[[5,[14]]]],[[9,9,9],5],[9,[[5,[14]]]],[[],22],[[],22],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[10,10],[[]],[9,5],[[10,10],11],[[10,[8,[[67,[36]]]]],[[5,[11]]]],[[68,10],[[5,[37]]]],[[10,17],18],[[]],[[]],[[]],[9,[[5,[11]]]],[9,[[5,[11]]]],[10,[[5,[11]]]],[[]],[[],22],[19,[[5,[10]]]],[29,[[5,[10]]]],[36,[[5,[10]]]],[9,[[5,[10]]]],[9,[[5,[10]]]],[[9,9,9],5],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[68,68],[[]],[[],68],0,[[68,68],11],0,[[68,17],18],[9,68],[31,68],[[]],[[]],[[]],[68,11],0,[[68,37],[[5,[11]]]],[[68,41],11],0,[[]],[[],22],[[],22],[[],23],0,0,0,[[]],[[]],[24,9],[[24,24],11],[[24,17],18],[[24,17],18],[[]],[[24,69,[8,[7]]],[[5,[37]]]],[[]],[24,9],[24,[[5,[70]]]],[[24,[8,[7]],[8,[[67,[36]]]]],[[5,[11]]]],[[],7],[[6,27],[[5,[24]]]],[[],22],[[],22],[[],23],0,0,0,0,0,0,[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[71],[53,[[22,[72]]]],[[]],[[]],[[]],[[9,73,74],[[76,[75]]]],[[[78,[77]],79],[[76,[[8,[7]]]]]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],0,0,0,[9,[[5,[[15,[37]]]]]],[9,[[5,[11]]]],[9,[[5,[[15,[37]]]]]],[9,[[5,[37]]]],[9,[[5,[37]]]],[9,[[5,[9]]]],[9,[[5,[80]]]],[9,11],[[[67,[36]]],11],[[],11],[[37,6,9,11,11],[[5,[37]]]],[[37,6,11,11],[[5,[37]]]],[[37,6,11,11],[[5,[37]]]],[[[67,[36]]],[[5,[81]]]],[[9,64],5],[37,[[5,[[15,[37]]]]]],[37,[[5,[[15,[37]]]]]],[[37,9],[[5,[37]]]],[37,[[5,[[15,[37]]]]]],[37,[[5,[[82,[7,37]]]]]],[[[8,[[67,[36]]]],64],5]],"c":[],"p":[[4,"LaunchableApp"],[3,"StartAppProtocol"],[3,"AppOpenArgs"],[3,"Command"],[6,"Result"],[3,"NimbusApp"],[3,"String"],[4,"Option"],[15,"str"],[4,"ExperimentListSource"],[15,"bool"],[3,"PathBuf"],[15,"usize"],[4,"ExperimentSource"],[3,"Vec"],[4,"AppCommand"],[3,"Formatter"],[6,"Result"],[3,"Cli"],[3,"OpenArgs"],[8,"IntoIterator"],[4,"Result"],[3,"TypeId"],[4,"ManifestSource"],[3,"Command"],[4,"CliCommand"],[3,"ManifestArgs"],[3,"ExperimentArgs"],[3,"ExperimentListArgs"],[3,"ExperimentListSourceArgs"],[3,"ExperimentListFilterArgs"],[3,"ArgMatches"],[6,"Error"],[3,"Id"],[3,"Term"],[3,"Path"],[4,"Value"],[8,"Error"],[3,"Box"],[3,"OsString"],[3,"ExperimentInfo"],[3,"DateRange"],[8,"Serializer"],[3,"LiveReloadLayer"],[3,"InMemoryDb"],[3,"RwLock"],[3,"Arc"],[3,"Router"],[3,"AddrIncoming"],[3,"IntoMakeService"],[3,"Server"],[3,"Error"],[8,"Deserializer"],[3,"StartAppPostPayload"],[4,"SocketAddr"],[3,"State"],[3,"Html"],[3,"Reloader"],[3,"HeaderValue"],[3,"SetResponseHeaderLayer"],[3,"Stack"],[3,"Json"],[8,"IntoResponse"],[8,"Serialize"],[3,"Path"],[3,"FeatureDefaults"],[8,"AsRef"],[3,"ExperimentListFilter"],[3,"FeatureManifest"],[3,"FileLoader"],[8,"Fn"],[3,"Response"],[3,"Duration"],[3,"HeaderMap"],[8,"DeserializeOwned"],[6,"Result"],[8,"HttpClient"],[3,"GenericHttpClient"],[3,"Package"],[15,"u64"],[8,"Deserialize"],[3,"HashMap"],[13,"ApplyFile"],[13,"CaptureLogs"],[13,"Enroll"],[13,"Kill"],[13,"LogState"],[13,"Open"],[13,"Reset"],[13,"TailLogs"],[13,"Unenroll"],[13,"FmlPassthrough"],[13,"ExtractFeatures"],[13,"Info"],[13,"ValidateExperiment"],[13,"Defaults"],[13,"FetchList"],[13,"List"],[13,"Android"],[13,"Ios"],[13,"Fml"],[13,"Enroll"],[13,"Features"],[13,"Fetch"],[13,"Info"],[13,"Validate"],[13,"Defaults"],[13,"TestFeature"],[13,"ApplyFile"],[13,"CaptureLogs"],[13,"FetchList"],[13,"List"],[13,"Open"],[13,"LogState"],[13,"Unenroll"],[13,"FromFeatureFiles"],[13,"FromApiV6"],[13,"WithPatchFile"],[13,"FromList"],[13,"FromApiV6"],[13,"FromRemoteSettings"],[13,"FromFile"],[13,"Filtered"],[13,"FromRecipes"],[13,"FromGithub"],[13,"FromFile"],[3,"TaskClusterRegistry"],[3,"ReqwestGunzippingHttpClient"],[8,"CliUtils"],[8,"Patch"]]},\
"nimbus_fml":{"doc":"","t":"RAAAAAAFAANIIINNINNGNELLLLLLLLAKLLALLLLLLAKKLKALLLLKKLLKNEDDGNNNLLLLLLLLLLLLMMLLMLLLLLLLLFMLLLMMLLLLLLLLLLLLLLMMFAFDDLLLLALLALLLLLLALALALMLLLALLLLLLLLAMALLALLLLLLLLDDLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLFAFFFFFFDDLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLLMLLLLLLLLLLFFFFFFFFFFDLLLLLLLLLLLMLLLLLLLLLLDDDLLLLLLLLLLLLLMLLLLMLLMLLLLLLLLLFLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLMMLLLMLLLFLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLAFDDLLLLALLALLLLLLALAALMLLLALLLLLLLLAMALLALLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFAFFFFFFDDLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLDLLLLLLLMLLLMLLLLLLLLLLFFFFFFFFFDLLLLLLLLLLLMLLLLLLLLLLDDDLLLLLLLLLLLLMLLLLMLMLLLLLLLLLFLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLRAFFFFFFFFFFFAENNNDNDDNDNDMLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLRFFFFFFFFFFFFFFDLLMFLLLLLLLFLMMLLLNENENNNNNNNNNNNNNNGNNNNNLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDDDDDDDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLMLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMMLMLLLLLMMMLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNNNDNNNDDDNDNNNGNENDNDNNGNNEIEDLMMLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLKLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLFFLLMLLLFLLLLFLLFLFMLLLFFFFAFFDERDNNHLLLLLLLLLLMMLLLLLLLMLMMLLLLMLLLLLLLLLLLFLLLLLLMLLMLLLLLLLLLLLLLLLL","n":["SUPPORT_URL_LOADING","backends","command_line","defaults_merger","error","frontend","intermediate_representation","main","parser","util","Bool","CodeDeclaration","CodeOracle","CodeType","Image","Int","LiteralRenderer","String","Text","TypeIdentifier","Variables","VariablesType","as_json","as_json_transform","borrow","borrow_mut","create_transform","defaults_mapper","defaults_type","definition_code","experimenter_manifest","find","fmt","from","frontend_manifest","helper_code","imports","imports","initialization_code","into","is_resource_id","kotlin","literal","literal","merge_transform","property_getter","swift","to_string","try_from","try_into","type_id","type_label","value_getter","value_mapper","value_merger","variables_type","Boolean","ExperimentManifestPropType","ExperimenterFeature","ExperimenterFeatureProperty","ExperimenterManifest","Int","Json","String","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","description","description","deserialize","deserialize","exposure_description","fmt","fmt","fmt","from","from","from","from","from","generate_manifest","has_exposure","into","into","into","is_early_startup","property_type","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","variables","variants","merge","gen_structs","generate_struct","ConcreteCodeOracle","FeatureManifestDeclaration","borrow","borrow","borrow_mut","borrow_mut","bundled","clone","clone_into","common","create_code_type","declaration_code","default","dyn_render","dyn_render_into","dyn_write_into","enum_","extension","feature","feature_properties","filters","find","fm","fmt","from","from","imports","imports","initialization_code","into","into","iter_feature_defs","members","mime_type","new","object","oracle","primitives","render_into","size_hint","structural","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ImageCodeType","TextCodeType","as_json_transform","borrow","borrow","borrow_mut","borrow_mut","defaults_mapper","defaults_mapper","defaults_type","defaults_type","from","from","imports","imports","into","into","is_resource_id","is_resource_id","is_resource_id","literal","literal","property_getter","property_getter","try_from","try_from","try_into","try_into","type_id","type_id","type_label","type_label","value_getter","value_getter","value_mapper","value_mapper","variables_type","variables_type","class_name","code_type","enum_variant_name","quoted","var_name","property_getter","value_getter","value_mapper","EnumCodeDeclaration","EnumCodeType","as_json_transform","borrow","borrow","borrow_mut","borrow_mut","create_transform","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fmt","from","from","id","inner","inner","into","into","literal","mime_type","new","new","property_getter","render_into","size_hint","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_label","value_getter","value_mapper","variables_type","FeatureCodeDeclaration","borrow","borrow_mut","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fm","fmt","from","imports","inner","inner","into","literal","mime_type","new","render_into","size_hint","to_string","try_from","try_into","type_id","class_name","comment","defaults_type_label","enum_variant_name","literal","property","quoted","to_json","type_label","var_name","ImportedModuleInitialization","borrow","borrow_mut","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fmt","from","imports","initialization_code","inner","into","literal","mime_type","new","render_into","size_hint","to_string","try_from","try_into","type_id","ObjectCodeDeclaration","ObjectCodeType","ObjectRuntime","as_json_transform","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_transform","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fm","fmt","from","from","from","id","imports","inner","inner","into","into","into","literal","literal","merge_transform","mime_type","new","new","object_literal","property_getter","render_into","size_hint","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","value_getter","value_mapper","value_merger","variables_type","BooleanCodeType","IntCodeType","StringCodeType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","literal","literal","literal","property_getter","property_getter","property_getter","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","value_getter","value_getter","value_getter","value_mapper","value_mapper","value_mapper","variables_type","variables_type","variables_type","ListCodeType","MapCodeType","OptionalCodeType","as_json_transform","as_json_transform","as_json_transform","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_transform","create_transform","defaults_mapper","defaults_mapper","defaults_mapper","defaults_type","defaults_type","defaults_type","from","from","from","imports","inner","inner","into","into","into","k_type","literal","literal","literal","map_functions","merge_transform","new","new","new","property_getter","property_getter","property_getter","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","v_type","value_getter","value_getter","value_getter","value_mapper","value_mapper","value_mapper","value_merger","value_merger","value_merger","variables_type","variables_type","variables_type","gen_structs","generate_struct","ConcreteCodeOracle","FeatureManifestDeclaration","borrow","borrow","borrow_mut","borrow_mut","bundled","clone","clone_into","common","create_code_type","declaration_code","default","dyn_render","dyn_render_into","dyn_write_into","enum_","extension","feature","filters","find","fm","fmt","from","from","imports","imports","initialization_code","into","into","iter_feature_defs","members","mime_type","new","object","oracle","primitives","render_into","size_hint","structural","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ImageCodeType","TextCodeType","borrow","borrow","borrow_mut","borrow_mut","defaults_mapper","defaults_mapper","defaults_type","defaults_type","from","from","imports","into","into","literal","literal","property_getter","property_getter","try_from","try_from","try_into","try_into","type_id","type_id","type_label","type_label","value_getter","value_getter","value_mapper","value_mapper","variables_type","variables_type","class_name","code_type","enum_variant_name","quoted","var_name","property_getter","value_getter","value_mapper","EnumCodeDeclaration","EnumCodeType","borrow","borrow","borrow_mut","borrow_mut","create_transform","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fmt","from","from","id","inner","inner","into","into","literal","mime_type","new","new","property_getter","render_into","size_hint","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_label","value_getter","value_mapper","variables_type","FeatureCodeDeclaration","borrow","borrow_mut","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fm","fmt","from","inner","inner","into","literal","mime_type","new","render_into","size_hint","to_string","try_from","try_into","type_id","class_name","comment","defaults_type_label","enum_variant_name","literal","property","quoted","type_label","var_name","ImportedModuleInitialization","borrow","borrow_mut","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fmt","from","imports","initialization_code","inner","into","literal","mime_type","new","render_into","size_hint","to_string","try_from","try_into","type_id","ObjectCodeDeclaration","ObjectCodeType","ObjectRuntime","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_transform","definition_code","dyn_render","dyn_render_into","dyn_write_into","extension","fm","fmt","from","from","from","id","inner","inner","into","into","into","literal","literal","merge_transform","mime_type","new","new","object_literal","property_getter","render_into","size_hint","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","value_getter","value_mapper","value_merger","variables_type","BooleanCodeType","IntCodeType","StringCodeType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","literal","literal","literal","property_getter","property_getter","property_getter","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","value_getter","value_getter","value_getter","value_mapper","value_mapper","value_mapper","variables_type","variables_type","variables_type","ListCodeType","MapCodeType","OptionalCodeType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_transform","create_transform","defaults_mapper","defaults_mapper","defaults_mapper","defaults_type","defaults_type","defaults_type","from","from","from","inner","inner","into","into","into","k_type","literal","literal","literal","merge_transform","new","new","new","property_getter","property_getter","property_getter","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_label","type_label","type_label","v_type","value_getter","value_getter","value_getter","value_mapper","value_mapper","value_mapper","value_merger","value_merger","value_merger","variables_type","variables_type","variables_type","RELEASE_CHANNEL","commands","create_generate_command_experimenter_from_cli","create_generate_command_from_cli","create_loader","create_print_channels_from_cli","create_single_file_from_cli","create_validate_command_from_cli","do_main","file_path","get_command_from_cli","input_file","process_command","workflows","CliCmd","FetchFile","Generate","GenerateExperimenter","GenerateExperimenterManifestCmd","GenerateSingleFileManifest","GenerateSingleFileManifestCmd","GenerateStructCmd","PrintChannels","PrintChannelsCmd","Validate","ValidateCmd","as_json","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel","clone","clone_into","from","from","from","from","from","from","into","into","into","into","into","into","language","language","load_from_ir","load_from_ir","loader","loader","loader","loader","loader","manifest","manifest","manifest","manifest","manifest","output","output","output","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","MATCHING_FML_EXTENSION","fetch_file","generate_experimenter_manifest","generate_single_file_manifest","generate_struct","generate_struct_from_dir","generate_struct_from_glob","generate_struct_from_ir","generate_struct_single","load_feature_manifest","output_err","output_note","output_ok","print_channels","validate","DefaultsMerger","borrow","borrow_mut","channel","collect_channel_defaults","collect_feature_defaults","collect_map_defaults","collect_object_defaults","collect_prop_defaults","from","into","merge_feature_defaults","merge_two_defaults","new","objects","supported_channels","try_from","try_into","type_id","CliError","ClientError","ClientError","FMLError","FMLModuleError","Fatal","FeatureValidationError","FetchError","IOError","InternalError","InvalidChannelError","InvalidFeatureConfig","InvalidFeatureError","InvalidFeatureId","InvalidFeatureValue","InvalidPath","JSONError","JsonMergeError","Result","TemplateProblem","TypeParsingError","UrlError","ValidationError","YAMLError","borrow","borrow","borrow_mut","borrow_mut","did_you_mean","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","literals","message","path","AboutBlock","DefaultBlock","EnumBody","EnumVariantBody","FeatureBody","FieldBody","ImportBlock","KotlinAboutBlock","ManifestFrontEnd","ObjectBody","SwiftAboutBlock","Types","about","allow_coenrollment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","channel","channels","channels","channels","class","class","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","description","description","description","description","description","description","description_only","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","enums","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","features","features","fields","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_enums","get_feature_defs","get_intermediate_representation","get_objects","get_prop_def_from_field","get_types","imports","includes","includes","into","into","into","into","into","into","into","into","into","into","into","into","is_includable","kotlin_about","legacy_types","merge_channels","module","nimbus_fully_qualified_name","nimbus_module_name","nimbus_object_name_kt","nimbus_object_name_swift","nimbus_package_name","objects","package","path","resource_package_name","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","supports","swift_about","targeting","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","value","variable_type","variables","variants","version","Boolean","BundleImage","BundleText","Enum","EnumDef","EnumMap","ExperimenterJSON","ExperimenterYAML","FeatureDef","FeatureManifest","FromStringDef","IR","ImportedModule","Int","Kotlin","List","Literal","Local","ModuleId","Object","ObjectDef","Option","PropDef","Remote","String","StringId","StringMap","Swift","TargetLanguage","TypeFinder","TypeRef","VariantDef","about","about","all_imports","all_types","allow_coenrollment","allow_coenrollment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","create_experimenter_feature","default","default","default","default","default","default","default","default","default_json","default_json","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","doc","enum_defs","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","feature_defs","features","features","find_enum","find_feature","find_import","find_object","find_prop","find_types","find_types","find_types","find_types","find_types","find_types","find_types","fm","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_extension","get_coenrolling_feature_ids","get_feature","get_hash","get_hash","get_hash","hash","hash","hash","id","id","imported_features","into","into","into","into","into","into","into","into","into","into","into","iter_all_enum_defs","iter_all_feature_defs","iter_all_object_defs","iter_enum_defs","iter_feature_defs","iter_imported_files","iter_object_defs","name","name","name","name","name","name","name","name","name","name","name","new","new","new","new","new","obj_defs","partial_cmp","props","props","props","props","props_to_variables","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_default_by_typ","validate_defaults","validate_enum_defs","validate_feature_config","validate_feature_def","validate_feature_defs","validate_manifest","validate_manifest_for_lang","validate_obj_defs","validate_prop_defaults","validate_props","validate_type_ref","variants","variants","variants","Parser","borrow","borrow_mut","canonicalize_import_paths","check_can_import_list","check_can_import_manifest","check_can_merge_imports","check_can_merge_manifest","files","fmt","from","get_intermediate_representation","get_typeref_from_string","into","load_frontend","load_imports","load_manifest","merge_import_block","merge_import_block_list","merge_manifest","merge_map","new","parse_typeref_string","source","try_from","try_into","type_id","as_dir","build_dir","generated_src_dir","join","loaders","pkg_dir","sdk_dir","FileLoader","FilePath","GITHUB_USER_CONTENT_DOTCOM","LoaderConfig","Local","Remote","USER_AGENT","add_repo","add_repo_file","add_repo_relative","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cache_dir","cache_dir","cache_dir","canonicalize","clone","clone","clone","clone_into","clone_into","clone_into","config","create_cache_path_buf","cwd","cwd","default","default_remote_path","drop","fetch_and_cache","fetch_client","file_path","fmt","fmt","fmt","from","from","from","from","into","into","into","is_dir","join","join","lookup_repo_path","new","new","read_to_string","refs","remote_file_path","repo_and_path","repo_files","resolve_url_shortcut","tmp_cache_dir","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"nimbus_fml"],[10,"nimbus_fml::backends"],[56,"nimbus_fml::backends::experimenter_manifest"],[112,"nimbus_fml::backends::frontend_manifest"],[113,"nimbus_fml::backends::kotlin"],[115,"nimbus_fml::backends::kotlin::gen_structs"],[164,"nimbus_fml::backends::kotlin::gen_structs::bundled"],[202,"nimbus_fml::backends::kotlin::gen_structs::common"],[207,"nimbus_fml::backends::kotlin::gen_structs::common::code_type"],[210,"nimbus_fml::backends::kotlin::gen_structs::enum_"],[249,"nimbus_fml::backends::kotlin::gen_structs::feature"],[273,"nimbus_fml::backends::kotlin::gen_structs::filters"],[283,"nimbus_fml::backends::kotlin::gen_structs::imports"],[306,"nimbus_fml::backends::kotlin::gen_structs::object"],[359,"nimbus_fml::backends::kotlin::gen_structs::primitives"],[401,"nimbus_fml::backends::kotlin::gen_structs::structural"],[467,"nimbus_fml::backends::swift"],[469,"nimbus_fml::backends::swift::gen_structs"],[517,"nimbus_fml::backends::swift::gen_structs::bundled"],[550,"nimbus_fml::backends::swift::gen_structs::common"],[555,"nimbus_fml::backends::swift::gen_structs::common::code_type"],[558,"nimbus_fml::backends::swift::gen_structs::enum_"],[596,"nimbus_fml::backends::swift::gen_structs::feature"],[619,"nimbus_fml::backends::swift::gen_structs::filters"],[628,"nimbus_fml::backends::swift::gen_structs::imports"],[651,"nimbus_fml::backends::swift::gen_structs::object"],[702,"nimbus_fml::backends::swift::gen_structs::primitives"],[744,"nimbus_fml::backends::swift::gen_structs::structural"],[805,"nimbus_fml::command_line"],[819,"nimbus_fml::command_line::commands"],[896,"nimbus_fml::command_line::workflows"],[911,"nimbus_fml::defaults_merger"],[930,"nimbus_fml::error"],[986,"nimbus_fml::error::FMLError"],[989,"nimbus_fml::frontend"],[1233,"nimbus_fml::intermediate_representation"],[1550,"nimbus_fml::parser"],[1577,"nimbus_fml::util"],[1584,"nimbus_fml::util::loaders"]],"d":["","Backend traits","","","","","","","","","","A trait that is able to render a declaration about a …","An object to look up a foreign language code specific …","A Trait to emit foreign language code to handle referenced …","","","","","","","","The generated code is running against hand written code to …","Call from the template","Implement these in different code types, and call …","","","A function handle that is capable of turning the variables …","","","Code which represents this member. e.g. the foreign …","","","","Returns the argument unchanged.","","Optional helper code to make this type work. This might …","A list of imports that are needed if this type is in use. …","A list of imports that are needed if this type is in use. …","Code (one or more statements) that is run on start-up of …","Calls <code>U::from(self)</code>.","","","A representation of the given literal for this type. N.B. …","","A function handle that is capable of merging two instances …","The language specific expression that gets a value of the …","","","","","","The language specific label used to reference this type. …","The expression needed to get a value out of a <code>Variables</code> …","The method call here will use the <code>create_transform</code> to …","The method call to merge the value with the defaults.","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","","","","","","","","","The language specific label used to reference this type. …","The language specific label used to reference this type. …","","","","","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","Get the idiomatic Kotlin rendering of a class name (for …","","Get the idiomatic Kotlin rendering of an individual enum …","Surrounds a string with quotes. In Kotlin, you can “”…","Get the idiomatic Kotlin rendering of a variable name.","The language specific expression that gets a value of the …","","","","","","","","","","A function handle that is capable of turning the variables …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A representation of the given literal for this type. N.B. …","","","","","","","","","","","","","","The language specific label used to reference this type. …","","","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Get the idiomatic Kotlin rendering of a class name (for …","","","Get the idiomatic Kotlin rendering of an individual enum …","","","","","","Get the idiomatic Kotlin rendering of a variable name.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The language specific expression that gets a value of the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","","","","","","","","","","","","","The language specific label used to reference this type. …","The language specific label used to reference this type. …","The language specific label used to reference this type. …","","","","","","","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","","","","Implement these in different code types, and call …","","","","","","","","","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","","","","","","The language specific expression that gets a value of the …","","","","","","","","","","","","The language specific label used to reference this type. …","The language specific label used to reference this type. …","The language specific label used to reference this type. …","","","","","The method call here will use the <code>create_transform</code> to …","","","The method call to merge the value with the defaults.","","","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","","","","","","","","","The language specific label used to reference this type. …","The language specific label used to reference this type. …","","","","","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","Get the idiomatic Swift rendering of a class name (for …","","Get the idiomatic Swift rendering of an individual enum …","Surrounds a property name with quotes. It is assumed that …","Get the idiomatic Swift rendering of a variable name.","The language specific expression that gets a value of the …","","","","","","","","","A function handle that is capable of turning the variables …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A representation of the given literal for this type. N.B. …","","","","","","","","","","","","","","The language specific label used to reference this type. …","","","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Get the idiomatic Swift rendering of a class name (for …","","","Get the idiomatic Swift rendering of an individual enum …","","","","","Get the idiomatic Swift rendering of a variable name.","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The language specific expression that gets a value of the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","","","","","","","","","","","","","The language specific label used to reference this type. …","The language specific label used to reference this type. …","The language specific label used to reference this type. …","","","","","","","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","","","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","A representation of the given literal for this type. N.B. …","","","","","The language specific expression that gets a value of the …","","","","","","","","","","","","The language specific label used to reference this type. …","The language specific label used to reference this type. …","The language specific label used to reference this type. …","","","","","The method call here will use the <code>create_transform</code> to …","","","The method call to merge the value with the defaults.","","","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","The name of the type as it’s represented in the <code>Variables</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Use this when recursively looking for files.","","","","","","","","","","","","","","","","","","","Collects the channel defaults of the feature manifest and …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Transforms a feature definition with unmerged defaults …","Merges two <code>serde_json::Value</code>s into one","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Retrieves all the Enum type definitions represented in the …","Retrieves all the feature definitions represented in the …","","Retrieves all the Object type definitions represented in …","Transforms a front-end field definition, a tuple of <code>String</code> …","Retrieves all the types represented in the Manifest","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An identifier derived from a <code>FilePath</code> of a top-level or …","","","","","","","","","","","","The <code>TypeRef</code> enum defines a reference to a type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is used to validate a new value for a …","","","","","","","","","","","","","","","","","Check if this parent can import this child.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","Load a manifest and all its imports, recursively if …","","","","","","","","","","","","","","","","","","","Utility class to abstract away the differences between …","A small enum for working with URLs and relative files","","","","","","Add a repo and version/tag/ref/location. <code>repo_id</code> is the …","Load a file containing mapping of repo names to <code>FilePath</code>s. …","","","","","","","","","","","","","","","","","","","","","","","","","","","Make a new path.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Appends a suffix to a path. If the <code>self</code> is a local file …","Joins a path to a string, to make a new path.","","","","This loads a text file from disk or the network.","","","","","Checks that the given string has a @organization/repo/ …","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,9,0,0,0,9,9,0,9,9,0,9,0,7,7,9,9,7,7,7,40,0,2,9,9,0,7,7,40,40,9,7,0,7,15,7,7,0,9,9,9,9,7,7,7,7,7,21,0,0,0,0,21,21,21,21,18,19,21,18,19,18,19,18,19,18,19,18,19,18,19,18,21,18,19,21,21,21,18,19,0,18,21,18,19,18,19,18,19,18,19,21,21,18,19,21,18,19,21,18,19,18,19,0,0,0,0,0,32,31,32,31,0,31,31,0,31,32,31,32,32,32,0,32,0,32,0,31,32,32,32,31,0,32,32,32,31,32,32,32,32,0,32,0,32,32,0,31,32,32,31,32,31,32,31,0,0,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,0,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,45,44,0,0,0,0,0,0,0,0,0,0,46,46,47,46,47,46,47,47,47,47,47,47,46,47,46,47,47,46,47,46,47,46,47,46,47,47,47,46,47,46,47,46,47,46,46,46,46,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,0,53,128,53,54,128,53,54,53,54,54,54,54,54,54,54,128,53,54,53,54,54,54,128,53,54,53,54,53,54,53,54,0,53,54,54,54,128,53,54,128,53,54,128,53,54,53,53,53,53,53,0,0,0,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,56,57,58,0,0,0,59,60,61,59,60,61,59,60,61,59,60,59,60,61,59,60,61,59,60,61,60,59,61,59,60,61,60,59,60,61,0,60,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,59,60,61,60,59,60,61,59,60,61,59,60,61,59,60,61,0,0,0,0,63,62,63,62,0,62,62,0,62,63,62,63,63,63,0,63,0,0,62,63,63,63,62,0,63,63,63,62,63,63,63,63,0,63,0,63,63,0,62,63,63,62,63,62,63,62,0,0,64,65,64,65,64,65,64,65,64,65,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,0,0,0,0,0,0,0,0,0,0,66,67,66,67,66,67,67,67,67,67,67,66,67,66,67,67,66,67,66,67,66,67,66,67,67,67,66,67,66,67,66,67,66,66,66,66,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,0,0,0,0,0,0,0,0,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,0,0,0,129,70,71,129,70,71,70,71,71,71,71,71,71,71,129,70,71,70,71,71,129,70,71,70,71,70,71,70,71,0,70,71,71,71,129,70,71,129,70,71,129,70,71,70,70,70,70,70,0,0,0,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,72,73,74,0,0,0,75,76,77,75,76,77,75,76,75,76,77,75,76,77,75,76,77,75,77,75,76,77,76,75,76,77,76,75,76,77,75,76,77,75,76,77,75,76,77,75,76,77,75,76,77,76,75,76,77,75,76,77,75,76,77,75,76,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,86,86,0,86,0,0,86,0,86,0,81,86,23,82,83,81,30,86,23,82,83,81,30,82,30,30,30,86,23,82,83,81,30,86,23,82,83,81,30,23,30,23,30,23,82,83,81,30,23,82,83,81,30,23,82,30,30,86,23,82,83,81,30,86,23,82,83,81,30,86,23,82,83,81,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,93,93,93,0,93,93,93,93,93,93,93,0,93,93,93,93,93,93,24,0,24,0,24,24,24,24,24,24,24,95,24,95,95,24,24,95,0,24,24,24,24,24,24,95,24,95,0,24,24,95,95,24,24,24,24,24,24,24,24,24,95,24,95,24,95,24,24,95,24,95,24,95,24,95,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,103,113,104,105,106,107,108,109,110,111,112,113,103,90,104,105,106,107,108,109,110,111,112,113,103,90,112,90,103,103,90,110,111,104,105,106,107,108,109,110,111,112,113,103,90,104,105,106,107,108,109,110,111,112,113,103,90,108,109,110,111,112,103,106,113,104,105,106,107,109,113,109,104,105,106,107,108,109,110,111,112,113,103,90,108,109,110,111,109,109,110,110,111,111,112,103,107,104,105,106,107,108,109,110,111,112,113,103,90,104,104,105,105,106,106,107,107,108,109,110,111,112,113,113,103,103,90,90,103,103,103,103,103,103,103,103,103,104,105,106,107,108,109,110,111,112,113,103,90,109,109,103,90,110,109,109,109,109,109,108,111,112,109,104,105,106,107,108,109,110,111,112,113,103,90,109,109,90,104,105,106,107,108,109,110,111,112,113,103,90,104,105,106,107,108,109,110,111,112,113,103,90,104,105,106,107,108,109,110,111,112,113,103,90,104,105,106,107,108,109,110,111,112,113,103,90,103,90,106,113,105,103,6,6,6,6,0,6,116,116,0,0,0,116,0,6,116,6,0,115,0,6,0,6,0,115,6,0,6,116,0,0,0,0,52,22,22,131,39,39,116,6,115,22,39,48,117,114,55,38,52,116,6,115,22,39,48,117,114,55,38,52,22,116,6,115,22,39,48,117,114,55,38,52,116,6,115,22,39,48,117,114,55,38,52,115,22,115,22,39,48,114,55,38,38,22,39,6,115,22,39,48,117,114,55,38,39,48,114,55,38,39,48,117,114,55,38,22,116,6,115,22,39,48,117,114,55,38,116,116,6,6,115,115,22,22,39,39,48,48,117,117,114,114,55,55,38,38,116,22,52,52,22,22,22,22,55,131,6,22,39,48,55,38,52,116,6,6,115,115,22,39,48,117,114,55,38,52,116,6,115,22,39,48,117,114,55,38,52,116,22,22,116,6,115,116,6,115,22,52,22,116,6,115,22,39,48,117,114,55,38,52,22,22,22,22,22,22,22,39,48,114,55,38,39,48,117,114,55,38,22,39,114,55,52,22,115,39,55,39,55,22,6,115,22,39,48,117,114,55,38,116,6,115,22,39,48,117,114,55,38,52,6,115,116,116,116,116,116,6,115,115,22,39,48,117,114,55,38,52,116,6,115,22,39,48,117,114,55,38,52,38,38,116,6,115,22,39,48,117,114,55,38,52,22,22,22,22,22,22,22,22,22,22,22,22,48,48,117,0,126,126,126,0,0,126,126,126,126,126,126,0,126,126,126,126,0,126,126,0,126,0,126,126,126,126,0,0,0,0,0,0,0,0,0,0,0,88,88,0,87,87,87,80,88,87,80,88,87,87,80,87,88,80,88,87,80,88,87,87,87,80,87,80,87,87,87,87,87,88,88,87,80,88,88,87,80,88,87,0,88,87,87,88,87,87,80,87,80,80,87,87,80,88,87,88,80,88,87,87,80,88,87,80,88,87],"f":[0,0,0,0,0,0,0,[[],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[2,3],4],[[2,3],[[5,[4]]]],[[]],[[]],[2,[[5,[4]]]],[[2,3,3],[[5,[4]]]],[2,4],[2,[[5,[4]]]],0,[6,[[8,[7]]]],[[9,10],11],[[]],0,[2,[[5,[4]]]],[2,[[5,[[12,[4]]]]]],[2,[[5,[[12,[4]]]]]],[2,[[5,[4]]]],[[]],[13,14],0,[[2,3,15,13],4],[[2,6,13,3],4],[2,[[5,[4]]]],[[2,3,3,3],4],0,[[],4],[[],16],[[],16],[[],17],[2,4],[[2,3,3],4],[2,[[5,[4]]]],[[2,3],[[5,[4]]]],[2,9],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[19,19],[[]],[[]],[[],18],[[],19],0,0,[20,[[16,[18]]]],[20,[[16,[19]]]],0,[[21,10],11],[[18,10],11],[[19,10],11],[[[8,[6]]],21],[[]],[6,21],[[]],[[]],[[22,23],[[16,[24]]]],0,[[]],[[]],[[]],0,0,[[18,25],16],[[19,25],16],[[]],[[]],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],0,0,[[22,26,26],[[29,[4,[28,[27]]]]]],0,[[22,30],[[16,[24]]]],0,0,[[]],[[]],[[]],[[]],0,[31,31],[[]],0,[[31,6],[[8,[7]]]],[32,[[12,[4]]]],[[],31],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],0,[[],[[5,[37]]]],0,[32,[[12,[38]]]],0,[[31,6],[[8,[7]]]],0,[[32,10],11],[[]],[[]],0,[32,[[12,[4]]]],[32,[[12,[4]]]],[[]],[[]],[32,[[12,[39]]]],[32,[[12,[[8,[40]]]]]],[[],37],[22,32],0,0,0,[[32,[0,[34,41]]],42],[[],43],0,[[]],[[],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],0,0,[[44,2,3],[[5,[4]]]],[[]],[[]],[[]],[[]],[[45,2,3,3],[[5,[4]]]],[[44,2,3,3],[[5,[4]]]],[[45,2],4],[[44,2],4],[[]],[[]],[[45,2],[[5,[[12,[4]]]]]],[[44,2],[[5,[[12,[4]]]]]],[[]],[[]],[37,14],[[45,13],14],[[44,13],14],[[45,2,3,15,13],4],[[44,2,3,15,13],4],[[45,2,3,3,3],4],[[44,2,3,3,3],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[45,2],4],[[44,2],4],[[45,2,3,3],4],[[44,2,3,3],4],[[45,2],[[5,[4]]]],[[44,2],[[5,[4]]]],[[45,2],9],[[44,2],9],[3,4],0,[3,4],[3,4],[3,4],[[7,2,3,3,3],4],[[7,2,3,3],4],[[7,2],[[5,[4]]]],0,0,[[46,2,3],[[5,[4]]]],[[]],[[]],[[]],[[]],[[46,2],[[5,[4]]]],[[47,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],[[47,10],11],[[]],[[]],0,[47,48],0,[[]],[[]],[[46,2,3,15,13],4],[[],37],[4,46],[[22,48],47],[[46,2,3,3,3],4],[[47,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[46,2],4],[[46,2,3,3],4],[[46,2],[[5,[4]]]],[[46,2],9],0,[[]],[[]],[[49,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],0,[[49,10],11],[[]],[[49,2],[[5,[[12,[4]]]]]],[49,39],0,[[]],[[49,2,6,13,3],4],[[],37],[[22,39],49],[[49,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],17],[3,[[16,[4,33]]]],[[3,37],[[16,[4,33]]]],[[[50,[6]]],[[16,[4,33]]]],[3,[[16,[4,33]]]],[[[50,[6]],15,[50,[13]],3],[[16,[4,33]]]],[[[50,[6]],3,3,3],[[16,[4,33]]]],[3,[[16,[4,33]]]],[[3,[50,[6]]],[[16,[4,33]]]],[[[50,[6]]],[[16,[4,33]]]],[3,[[16,[4,33]]]],0,[[]],[[]],[[51,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],[[51,10],11],[[]],[[51,2],[[5,[[12,[4]]]]]],[[51,2],[[5,[4]]]],0,[[]],[[51,2,6,13,3],4],[[],37],[52,51],[[51,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],17],0,0,0,[[53,2,3],[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,2],[[5,[4]]]],[[54,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],0,[[54,10],11],[[]],[[]],[[]],0,[[54,2],[[5,[[12,[4]]]]]],[54,55],0,[[]],[[]],[[]],[[53,2,3,15,13],4],[[54,2,6,13,3],4],[[53,2],[[5,[4]]]],[[],37],[4,53],[[22,55],54],[[22,3,15,2,6,13],4],[[53,2,3,3,3],4],[[54,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[53,2],4],[[53,2,3,3],4],[[53,2],[[5,[4]]]],[[53,2,3],[[5,[4]]]],[[53,2],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,2,3,15,13],4],[[57,2,3,15,13],4],[[58,2,3,15,13],4],[[56,2,3,3,3],4],[[57,2,3,3,3],4],[[58,2,3,3,3],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[56,2],4],[[57,2],4],[[58,2],4],[[56,2,3,3],4],[[57,2,3,3],4],[[58,2,3,3],4],[[56,2],[[5,[4]]]],[[57,2],[[5,[4]]]],[[58,2],[[5,[4]]]],[[56,2],9],[[57,2],9],[[58,2],9],0,0,0,[[59,2,3],[[5,[4]]]],[[60,2,3],[[5,[4]]]],[[61,2,3],[[5,[4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,2],[[5,[4]]]],[[60,2],[[5,[4]]]],[[59,2,3,3],[[5,[4]]]],[[60,2,3,3],[[5,[4]]]],[[61,2,3,3],[[5,[4]]]],[[59,2],4],[[60,2],4],[[61,2],4],[[]],[[]],[[]],[[60,2],[[5,[[12,[4]]]]]],0,0,[[]],[[]],[[]],0,[[59,2,3,15,13],4],[[60,2,3,15,13],4],[[61,2,3,15,13],4],[[[5,[4]],[5,[4]]],[[5,[4]]]],[[60,2],[[5,[4]]]],[6,59],[[6,6],60],[6,61],[[59,2,3,3,3],4],[[60,2,3,3,3],4],[[61,2,3,3,3],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[59,2],4],[[60,2],4],[[61,2],4],0,[[59,2,3,3],4],[[60,2,3,3],4],[[61,2,3,3],4],[[59,2],[[5,[4]]]],[[60,2],[[5,[4]]]],[[61,2],[[5,[4]]]],[[59,2,3],[[5,[4]]]],[[60,2,3],[[5,[4]]]],[[61,2,3],[[5,[4]]]],[[59,2],9],[[60,2],9],[[61,2],9],0,[[22,30],[[16,[24]]]],0,0,[[]],[[]],[[]],[[]],0,[62,62],[[]],0,[[62,6],[[8,[7]]]],[63,[[12,[4]]]],[[],62],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],0,[[],[[5,[37]]]],0,0,[[62,6],[[8,[7]]]],0,[[63,10],11],[[]],[[]],0,[63,[[12,[4]]]],[63,[[12,[4]]]],[[]],[[]],[63,[[12,[39]]]],[63,[[12,[[8,[40]]]]]],[[],37],[22,63],0,0,0,[[63,[0,[34,41]]],42],[[],43],0,[[]],[[],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],0,0,[[]],[[]],[[]],[[]],[[64,2,3,3],[[5,[4]]]],[[65,2,3,3],[[5,[4]]]],[[64,2],4],[[65,2],4],[[]],[[]],[[65,2],[[5,[[12,[4]]]]]],[[]],[[]],[[64,2,3,15,13],4],[[65,2,3,15,13],4],[[64,2,3,3,3],4],[[65,2,3,3,3],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[64,2],4],[[65,2],4],[[64,2,3,3],4],[[65,2,3,3],4],[[64,2],[[5,[4]]]],[[65,2],[[5,[4]]]],[[64,2],9],[[65,2],9],[3,4],0,[3,4],[3,4],[3,4],[[7,2,3,3,3],4],[[7,2,3,3],4],[[7,2],[[5,[4]]]],0,0,[[]],[[]],[[]],[[]],[[66,2],[[5,[4]]]],[[67,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],[[67,10],11],[[]],[[]],0,[67,48],0,[[]],[[]],[[66,2,3,15,13],4],[[],37],[4,66],[[22,48],67],[[66,2,3,3,3],4],[[67,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[66,2],4],[[66,2,3,3],4],[[66,2],[[5,[4]]]],[[66,2],9],0,[[]],[[]],[[68,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],0,[[68,10],11],[[]],[68,39],0,[[]],[[68,2,6,13,3],4],[[],37],[[22,39],68],[[68,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],17],[3,[[16,[4,33]]]],[[3,37],[[16,[4,33]]]],[[[50,[6]]],[[16,[4,33]]]],[3,[[16,[4,33]]]],[[[50,[6]],15,[50,[13]],3],[[16,[4,33]]]],[[[50,[6]],3,3,3],[[16,[4,33]]]],[3,[[16,[4,33]]]],[[[50,[6]]],[[16,[4,33]]]],[3,[[16,[4,33]]]],0,[[]],[[]],[[69,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],[[69,10],11],[[]],[[69,2],[[5,[[12,[4]]]]]],[[69,2],[[5,[4]]]],0,[[]],[[69,2,6,13,3],4],[[],37],[52,69],[[69,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],17],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[70,2],[[5,[4]]]],[[71,2],[[5,[4]]]],[[],[[16,[4,33]]]],[34,[[16,[33]]]],[35,[[16,[36]]]],[[],[[5,[37]]]],0,[[71,10],11],[[]],[[]],[[]],0,[71,55],0,[[]],[[]],[[]],[[70,2,3,15,13],4],[[71,2,6,13,3],4],[[70,2],[[5,[4]]]],[[],37],[4,70],[[22,55],71],[[22,15,2,6,13,3],4],[[70,2,3,3,3],4],[[71,[0,[34,41]]],42],[[],43],[[],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[70,2],4],[[70,2,3,3],4],[[70,2],[[5,[4]]]],[[70,2,3],[[5,[4]]]],[[70,2],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,2,3,15,13],4],[[73,2,3,15,13],4],[[74,2,3,15,13],4],[[72,2,3,3,3],4],[[73,2,3,3,3],4],[[74,2,3,3,3],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[72,2],4],[[73,2],4],[[74,2],4],[[72,2,3,3],4],[[73,2,3,3],4],[[74,2,3,3],4],[[72,2],[[5,[4]]]],[[73,2],[[5,[4]]]],[[74,2],[[5,[4]]]],[[72,2],9],[[73,2],9],[[74,2],9],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[75,2],[[5,[4]]]],[[76,2],[[5,[4]]]],[[75,2,3,3],[[5,[4]]]],[[76,2,3,3],[[5,[4]]]],[[77,2,3,3],[[5,[4]]]],[[75,2],4],[[76,2],4],[[77,2],4],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[75,2,3,15,13],4],[[76,2,3,15,13],4],[[77,2,3,15,13],4],[[76,2],[[5,[4]]]],[6,75],[[6,6],76],[6,77],[[75,2,3,3,3],4],[[76,2,3,3,3],4],[[77,2,3,3,3],4],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[75,2],4],[[76,2],4],[[77,2],4],0,[[75,2,3,3],4],[[76,2,3,3],4],[[77,2,3,3],4],[[75,2],[[5,[4]]]],[[76,2],[[5,[4]]]],[[77,2],[[5,[4]]]],[[75,2,3],[[5,[4]]]],[[76,2,3],[[5,[4]]]],[[77,2,3],[[5,[4]]]],[[75,2],9],[[76,2],9],[[77,2],9],0,0,[[78,79],[[1,[23]]]],[[78,79],[[1,[30]]]],[[78,79],[[1,[80]]]],[[78,79],[[1,[81]]]],[[78,79],[[1,[82]]]],[[78,79],[[1,[83]]]],[[84,79],1],[[37,78,79],[[1,[85]]]],[[84,79],[[1,[86]]]],[78,[[1,[4]]]],[86,1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[30,30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,[[80,37],[[16,[24]]]],[23,[[16,[24]]]],[82,[[16,[24]]]],[30,[[16,[24]]]],[[87,30,79],[[16,[24]]]],[[87,30,37],[[16,[24]]]],[[22,30],[[16,[24]]]],[[87,88,30],[[16,[24]]]],[[87,88,14,[5,[37]]],[[16,[22,24]]]],[[89,37,37],[[16,[24]]]],[[89,37],[[16,[24]]]],[[89,37],[[16,[24]]]],[81,[[16,[24]]]],[83,[[16,[24]]]],0,[[]],[[]],0,[[[91,[90]],[91,[4]],37],[[16,[[92,[4,13]],24]]]],[[93,39],[[16,[13,24]]]],[[93,6,13],[[16,[13,24]]]],[[93,37],[[16,[13,24]]]],[[93,6,13],[[16,[[5,[13]],24]]]],[[]],[[]],[[93,39,[5,[[12,[90]]]]],[[16,[24]]]],[[13,13],13],[[[29,[4,55]],[12,[4]],[5,[4]]],93],0,0,[[],16],[[],16],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[94,[4]]],4],[[24,10],11],[[24,10],11],[[95,10],11],[[95,10],11],[96,24],[95,24],[36,24],[97,24],[[]],[98,24],[99,24],[100,24],[33,24],[[]],[[]],[[]],[101],[101],[24,[[5,[102]]]],[[],4],[[],4],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[103,[[12,[4]]]],0,0,0,0,[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[103,103],[90,90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],108],[[],109],[[],110],[[],111],[[],112],[[],103],0,0,0,0,0,0,0,0,[109,109],[20,[[16,[104]]]],[20,[[16,[105]]]],[20,[[16,[106]]]],[20,[[16,[107]]]],[20,[[16,[108]]]],[20,[[16,[109]]]],[20,[[16,[110]]]],[20,[[16,[111]]]],[20,[[16,[112]]]],[20,[[16,[113]]]],[20,[[16,[103]]]],[20,[[16,[90]]]],0,[[109,109],14],[[110,110],14],[[111,111],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[[104,10],11],[[105,10],11],[[106,10],11],[[107,10],11],[[108,10],11],[[109,10],11],[[110,10],11],[[111,10],11],[[112,10],11],[[113,10],11],[[103,10],11],[[90,10],11],[114,104],[[]],[[]],[48,105],[38,106],[[]],[55,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,113],[[]],[22,103],[[]],[13,90],[103,[[29,[4,48]]]],[[103,93],[[16,[[29,[4,39]],24]]]],[[103,115,[5,[37]]],[[16,[22,24]]]],[103,[[29,[4,55]]]],[[103,4,106],38],[103,[[92,[4,6]]]],0,[103,[[12,[4]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[109,14],0,0,[90,[[5,[[12,[4]]]]]],0,[109,4],[109,4],[109,4],[109,4],[109,[[5,[4]]]],0,0,0,[109,4],[[104,25],16],[[105,25],16],[[106,25],16],[[107,25],16],[[108,25],16],[[109,25],16],[[110,25],16],[[111,25],16],[[112,25],16],[[113,25],16],[[103,25],16],[[90,25],16],[[109,116],14],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[52,109],0,0,[[],[[94,[6]]]],[39,14],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[116,116],[6,6],[115,115],[22,22],[39,39],[48,48],[117,117],[114,114],[55,55],[38,38],[52,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[115,115],118],[[22,39],[[16,[18,24]]]],[[],115],[[],22],[[],39],[[],48],[[],114],[[],55],[38,13],0,[22,13],[39,13],[20,[[16,[6]]]],[20,[[16,[115]]]],[20,[[16,[22]]]],[20,[[16,[39]]]],[20,[[16,[48]]]],[20,[[16,[117]]]],[20,[[16,[114]]]],[20,[[16,[55]]]],[20,[[16,[38]]]],[39,4],[48,4],[114,4],[55,4],[38,4],0,0,0,0,0,0,0,[[116,116],14],[[6,6],14],[[115,115],14],[[22,22],14],[[39,39],14],[[48,48],14],[[117,117],14],[[114,114],14],[[55,55],14],[[38,38],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[116,37],0,[52,[[12,[39]]]],0,[[22,37],[[5,[48]]]],[[22,37],5],[[22,115],[[5,[22]]]],[[22,37],[[5,[55]]]],[[55,37],38],[[[94,[6]]]],[[6,[94,[6]]]],[[22,[94,[6]]]],[[39,[94,[6]]]],[[48,[94,[6]]]],[[55,[94,[6]]]],[[38,[94,[6]]]],0,[[116,10],11],[[6,10],11],[[6,10],11],[[115,10],11],[[115,10],11],[[22,10],11],[[39,10],11],[[48,10],11],[[117,10],11],[[114,10],11],[[55,10],11],[[38,10],11],[[52,10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,[[1,[116]]]],[22,[[12,[4]]]],[[22,37],[[5,[39]]]],[[[0,[119,41]],120],121],[[[0,[119,41]],120],121],[[[0,[119,41]],120],121],[[116,122]],[[6,122]],[[115,122]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,123],[22,123],[22,123],[22,123],[22,123],[22,[[12,[52]]]],[22,123],[39,4],[48,4],[114,4],[55,4],[38,4],0,0,0,0,0,0,[[115,[5,[37]],[29,[4,39]],[29,[4,48]],[29,[4,55]],109],22],[[37,37,[12,[38]],14],39],[[37,37],114],[[37,37,[12,[38]]],55],[[115,22,[124,[4]]],52],0,[[115,115],[[5,[118]]]],[39,[[12,[38]]]],[55,[[12,[38]]]],0,0,[[22,[91,[38]]],[[16,[[29,[4,19]],24]]]],[[6,25],16],[[115,25],16],[[22,25],16],[[39,25],16],[[48,25],16],[[117,25],16],[[114,25],16],[[55,25],16],[[38,25],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],16],[4,[[1,[116]]]],[37,[[1,[116]]]],[125,[[1,[116]]]],[79,[[1,[116]]]],[[],16],[88,[[16,[115,24]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[38,6],0,[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[22,37,[12,[4]],6,13],[[16,[24]]]],[22,[[16,[24]]]],[[22,[94,[4]]],[[16,[24]]]],[[22,37,13],[[16,[39,24]]]],[[22,39],[[16,[24]]]],[[22,[94,[4]]],[[16,[24]]]],[22,[[16,[24]]]],[[22,116],[[16,[24]]]],[[22,[94,[4]]],[[16,[24]]]],[[22,37,38],[[16,[24]]]],[[22,39,[94,[4]]],[[16,[24]]]],[[37,6,[94,[4]],[94,[4]]],[[16,[24]]]],[48,[[12,[114]]]],0,0,0,[[]],[[]],[[126,88,[12,[112]]],[[16,[24]]]],[[22,22,37],[[16,[24]]]],[[22,22],[[16,[24]]]],[[126,88,[12,[112]],[92,[4,4]]],[[16,[24]]]],[[126,88,103,88,103],[[16,[24]]]],0,[[126,10],11],[[]],[[126,[5,[37]]],[[16,[22,24]]]],[[4,[5,[[92,[4,6]]]]],[[16,[6,24]]]],[[]],[[87,37],[[16,[103,24]]]],[[126,88,[5,[37]],[92,[115,22]]],[[16,[115,24]]]],[[126,88,[94,[115]]],[[16,[103,24]]]],[[112,112],[[16,[112,24]]]],[[126,[91,[112]],[91,[112]]],[[16,[[12,[112]],24]]]],[[126,88,103,88,103],[[16,[103,24]]]],[[[29,[4,27]],[29,[4,27]],37,37,88],[[16,[[29,[4,27]],24]]]],[[87,88],[[16,[126,24]]]],[4,[[16,[24]]]],0,[[],16],[[],16],[[],17],[[],4],[[],4],[[],4],[[4,37],4],0,[[],4],[[],4],0,0,0,0,0,0,0,[[87,37,37],[[16,[24]]]],[[87,88],[[16,[24]]]],[[87,88,37,37],[[16,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[87,79],0,0,[88,[[16,[88,24]]]],[80,80],[88,88],[87,87],[[]],[[]],[[]],0,[[87,127],85],0,0,[[],80],[[87,4],88],[87],[[87,127],[[16,[4,24]]]],0,[[87,37],[[16,[88,24]]]],[[88,10],11],[[88,10],11],[[87,10],11],[[]],[[]],[79,88],[[]],[[]],[[]],[[]],[79,14],[[88,37],[[16,[88,24]]]],[[87,88,37],[[16,[88,24]]]],[[87,37,37],[[5,[88]]]],[[79,37],[[16,[88,24]]]],[[85,[5,[85]],[29,[4,88]]],[[16,[87,24]]]],[[87,88],[[16,[4,24]]]],0,[[87,37,37],[[16,[88,24]]]],[37,5],0,[[87,37],[[16,[[5,[88]],24]]]],[87,79],[[]],[[]],[[]],[[],4],[[],16],[[],16],[80,[[16,[87]]]],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17]],"c":[],"p":[[6,"Result"],[8,"CodeOracle"],[8,"Display"],[3,"String"],[4,"Option"],[4,"TypeRef"],[8,"CodeType"],[3,"Box"],[4,"VariablesType"],[3,"Formatter"],[6,"Result"],[3,"Vec"],[4,"Value"],[15,"bool"],[8,"LiteralRenderer"],[4,"Result"],[3,"TypeId"],[3,"ExperimenterFeature"],[3,"ExperimenterFeatureProperty"],[8,"Deserializer"],[4,"ExperimentManifestPropType"],[3,"FeatureManifest"],[3,"GenerateExperimenterManifestCmd"],[4,"FMLError"],[8,"Serializer"],[8,"Fn"],[8,"Clone"],[8,"From"],[3,"BTreeMap"],[3,"GenerateStructCmd"],[3,"ConcreteCodeOracle"],[3,"FeatureManifestDeclaration"],[4,"Error"],[8,"Write"],[8,"Write"],[3,"Error"],[15,"str"],[3,"PropDef"],[3,"FeatureDef"],[8,"CodeDeclaration"],[8,"Sized"],[6,"Result"],[15,"usize"],[3,"ImageCodeType"],[3,"TextCodeType"],[3,"EnumCodeType"],[3,"EnumCodeDeclaration"],[3,"EnumDef"],[3,"FeatureCodeDeclaration"],[8,"Borrow"],[3,"ImportedModuleInitialization"],[3,"ImportedModule"],[3,"ObjectCodeType"],[3,"ObjectCodeDeclaration"],[3,"ObjectDef"],[3,"BooleanCodeType"],[3,"IntCodeType"],[3,"StringCodeType"],[3,"OptionalCodeType"],[3,"MapCodeType"],[3,"ListCodeType"],[3,"ConcreteCodeOracle"],[3,"FeatureManifestDeclaration"],[3,"TextCodeType"],[3,"ImageCodeType"],[3,"EnumCodeType"],[3,"EnumCodeDeclaration"],[3,"FeatureCodeDeclaration"],[3,"ImportedModuleInitialization"],[3,"ObjectCodeType"],[3,"ObjectCodeDeclaration"],[3,"BooleanCodeType"],[3,"IntCodeType"],[3,"StringCodeType"],[3,"OptionalCodeType"],[3,"MapCodeType"],[3,"ListCodeType"],[3,"ArgMatches"],[3,"Path"],[3,"LoaderConfig"],[3,"PrintChannelsCmd"],[3,"GenerateSingleFileManifestCmd"],[3,"ValidateCmd"],[8,"IntoIterator"],[3,"PathBuf"],[4,"CliCmd"],[3,"FileLoader"],[4,"FilePath"],[3,"Term"],[3,"DefaultBlock"],[15,"slice"],[3,"HashMap"],[3,"DefaultsMerger"],[3,"HashSet"],[4,"ClientError"],[3,"Error"],[3,"Error"],[4,"ParseError"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"ManifestFrontEnd"],[3,"EnumVariantBody"],[3,"EnumBody"],[3,"FieldBody"],[3,"ObjectBody"],[3,"Types"],[3,"AboutBlock"],[3,"SwiftAboutBlock"],[3,"KotlinAboutBlock"],[3,"ImportBlock"],[3,"FeatureBody"],[3,"VariantDef"],[4,"ModuleId"],[4,"TargetLanguage"],[3,"FromStringDef"],[4,"Ordering"],[8,"Hash"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[8,"Iterator"],[3,"BTreeSet"],[3,"OsStr"],[3,"Parser"],[3,"Url"],[3,"ObjectRuntime"],[3,"ObjectRuntime"],[13,"FeatureValidationError"],[8,"TypeFinder"]]},\
"nss":{"doc":"","t":"NNNNNDENNNNNGNALLLLLAAAFLLLLLLLLLLLLLLAAALLOALLLLLLLLLNNEFFLLLLFLLLLLLLFEDNNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFCFAAAAENNLLLLFLLFFLLLLLFFDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFF","n":["Base64Decode","CertificateIssuerError","CertificateSubjectError","CertificateValidityError","ConversionError","Error","ErrorKind","InputError","InternalError","NSSError","NSSInitFailure","PKIXError","Result","SSLError","aes","backtrace","borrow","borrow","borrow_mut","borrow_mut","cert","ec","ecdh","ensure_initialized","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","kind","pbkdf2","pk11","pkixc","provide","provide","scoped_ptr","secport","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Decrypt","Encrypt","Operation","aes_cbc_crypt","aes_gcm_crypt","borrow","borrow_mut","clone","clone_into","common_crypt","fmt","from","into","to_owned","try_from","try_into","type_id","extract_ec_public_key","Curve","EcKey","P256","P384","PrivateKey","PublicKey","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","convert_to_public_key","curve","curve","curve","deref","deref","deserialize","deserialize","eq","equivalent","export","fmt","fmt","from","from","from","from","from_bytes","from_coordinates","generate_keypair","get_field_len","import","into","into","into","into","new","private_key","private_value","public_key","serialize","serialize","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify","ecdh_agreement","HashAlgorithm","pbkdf2_key_derive","context","slot","sym_key","types","HashAlgorithm","SHA256","SHA384","borrow","borrow_mut","clone","clone_into","create_context_by_sym_key","fmt","from","hash_buf","hmac_sign","into","to_owned","try_from","try_into","type_id","generate_random","hkdf_expand","AlgorithmID","Certificate","Context","GenericObject","PrivateKey","PublicKey","Slot","SymKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","convert_to_public_key","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_code_signing_certificate_chain","secure_memcmp"],"q":[[0,"nss"],[54,"nss::aes"],[71,"nss::cert"],[72,"nss::ec"],[138,"nss::ecdh"],[139,"nss::pbkdf2"],[141,"nss::pk11"],[145,"nss::pk11::context"],[162,"nss::pk11::slot"],[163,"nss::pk11::sym_key"],[164,"nss::pk11::types"],[237,"nss::pkixc"],[238,"nss::secport"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","ECDSA verify operation","","","","","","","","","","","","","","","Safe wrapper around PK11_CreateContextBySymKey that …","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[5,5,5,5,5,0,0,5,5,5,5,5,0,5,0,1,5,1,5,1,0,0,0,0,5,5,1,1,5,5,5,1,1,1,1,5,1,1,0,0,0,5,1,0,0,5,5,1,5,1,5,1,5,1,17,17,0,0,0,17,17,17,17,0,17,17,17,17,17,17,17,0,0,0,23,23,0,0,25,26,23,24,25,26,23,24,23,24,23,24,25,25,26,24,25,26,23,24,23,23,25,23,24,25,26,23,24,26,24,0,23,25,25,26,23,24,24,24,25,24,23,24,26,23,24,25,26,23,24,25,26,23,24,25,26,23,24,26,0,0,0,0,0,0,0,0,33,33,33,33,33,33,0,33,33,0,0,33,33,33,33,33,0,0,0,0,0,0,0,0,0,0,35,27,28,37,38,36,39,40,35,27,28,37,38,36,39,40,27,35,27,28,37,38,36,39,40,35,27,28,37,38,36,39,40,35,27,28,37,38,36,39,40,35,27,28,37,38,36,39,40,35,27,28,37,38,36,39,40,35,27,28,37,38,36,39,40,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[5,6],7],[[5,6],7],[[1,6],7],[[1,6],7],[8,5],[9,5],[[]],[5,1],[9,1],[[]],[8,1],[[]],[[]],[1,5],0,0,0,[10],[10],0,0,[5,[[4,[11]]]],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,[[[16,[15]],[16,[15]],[16,[15]],17],[[19,[[18,[15]]]]]],[[[16,[15]],[16,[15]],[16,[15]],[16,[15]],17],[[19,[[18,[15]]]]]],[[]],[[]],[17,17],[[]],[[20,[16,[15]],[16,[15]],21,22,17],[[19,[[18,[15]]]]]],[[17,6],7],[[]],[[]],[[]],[[],13],[[],13],[[],14],[[[16,[15]]],[[19,[[18,[15]]]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,23],[24,24],[[]],[[]],[25,[[19,[26]]]],[25,23],[26,23],[24,23],[25,27],[26,28],[29,[[13,[23]]]],[29,[[13,[24]]]],[[23,23],30],[[],30],[25,[[19,[24]]]],[[23,6],7],[[24,6],7],[[]],[[]],[[]],[[]],[[23,[16,[15]]],[[19,[26]]]],[[23,[16,[15]],[16,[15]],[16,[15]]],[[19,[24]]]],[23,19],[23,31],[24,[[19,[25]]]],[[]],[[]],[[]],[[]],[[23,[16,[15]],[16,[15]]],24],[24,[[16,[15]]]],[25,[[19,[[18,[15]]]]]],[24,[[16,[15]]]],[[23,32],13],[[24,32],13],[26,[[19,[[18,[15]]]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[26,[16,[15]],[16,[15]],33],19],[[25,26],[[19,[[18,[15]]]]]],0,[[[16,[15]],[16,[15]],31,33,[16,[15]]],19],0,0,0,0,0,0,0,[[]],[[]],[33,33],[[]],[[20,34,35],[[19,[36]]]],[[33,6],7],[[]],[[33,[16,[15]]],[[19,[[18,[15]]]]]],[[33,[16,[15]],[16,[15]]],[[19,[[18,[15]]]]]],[[]],[[]],[[],13],[[],13],[[],14],[[[16,[15]]],19],[[33,[16,[15]],[16,[15]],21],[[19,[[18,[15]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,[[19,[28]]]],[35],[27],[28],[37],[38],[36],[39],[40],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[18,[[16,[15]]]],41,[16,[15]],42],19],[[[16,[15]],[16,[15]]],30]],"c":[],"p":[[3,"Error"],[3,"Backtrace"],[3,"Mutex"],[4,"Option"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[4,"DecodeError"],[3,"TryFromIntError"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"],[4,"Operation"],[3,"Vec"],[6,"Result"],[6,"CK_MECHANISM_TYPE"],[15,"usize"],[6,"SECItem"],[4,"Curve"],[3,"EcKey"],[3,"PrivateKey"],[3,"PublicKey"],[3,"PrivateKey"],[3,"PublicKey"],[8,"Deserializer"],[15,"bool"],[15,"u32"],[8,"Serializer"],[4,"HashAlgorithm"],[6,"CK_ATTRIBUTE_TYPE"],[3,"SymKey"],[3,"Context"],[3,"GenericObject"],[3,"Certificate"],[3,"Slot"],[3,"AlgorithmID"],[15,"u64"],[15,"str"]]},\
"nss_build_common":{"doc":"This shouldn’t exist, but does because if something isn…","t":"NEDNLLLLLLLLFFFLLLLLLLLLLFLLLLLLLLM","n":["Dynamic","LinkingKind","NoNssDir","Static","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","env","env_flag","env_str","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","link_nss","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","folded_libs"],"q":[[0,"nss_build_common"],[34,"nss_build_common::LinkingKind"]],"d":["","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[1,0,0,1,1,2,1,2,1,2,1,2,0,0,0,1,2,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,12],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[3,[[5,[4]]]],[3,6],[3,[[5,[7]]]],[[1,1],6],[[2,2],6],[[],6],[[],6],[[1,8],9],[[2,8],9],[[]],[[]],[[]],[[]],[[],[[10,[2]]]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],0],"c":[],"p":[[4,"LinkingKind"],[3,"NoNssDir"],[15,"str"],[3,"OsString"],[4,"Option"],[15,"bool"],[3,"String"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[13,"Dynamic"]]},\
"nss_sys":{"doc":"","t":"RGGFFFFRRRRRRRRRRRRRRRRRRRRRRRRRRDGGGGRGDRGGDGGRGGMMMMENNNRRNMMMMERGGRRRRRFFFGGEEGGFFFFFFFFFFFFFFFFFFFFFFNNNNNFFFNNNNNFDDFGGGGGGRFFFRGDNNFGDEGDGDGGDGDGDGDGDGDGDTGDFFFFFFGDEENNENNRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRNNFEMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMNMNMNMLLMLMNLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMNMMMMMMMMMNMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNMGMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["AES_BLOCK_SIZE","CERTCertDBHandle","CERTCertificate","CERT_DestroyCertificate","CERT_ExtractPublicKey","CERT_GetDefaultCertDB","CERT_NewTempCertificate","CKA_CLASS","CKA_EC_PARAMS","CKA_EC_POINT","CKA_ENCRYPT","CKA_ID","CKA_KEY_TYPE","CKA_PRIVATE","CKA_SENSITIVE","CKA_SIGN","CKA_TOKEN","CKA_VALUE","CKA_WRAP","CKD_NULL","CKK_EC","CKM_AES_CBC_PAD","CKM_AES_GCM","CKM_ECDH1_DERIVE","CKM_EC_KEY_PAIR_GEN","CKM_NSS","CKM_NSS_HKDF_SHA256","CKM_NSS_HKDF_SHA384","CKM_SHA256_HMAC","CKM_SHA384_HMAC","CKM_SHA512_HMAC","CKM_VENDOR_DEFINED","CKO_PRIVATE_KEY","CK_ATTRIBUTE","CK_ATTRIBUTE_TYPE","CK_BBOOL","CK_BYTE","CK_BYTE_PTR","CK_FALSE","CK_GCM_PARAMS","CK_GCM_PARAMS_V3","CK_INVALID_HANDLE","CK_KEY_TYPE","CK_MECHANISM_TYPE","CK_NSS_HKDFParams","CK_OBJECT_CLASS","CK_OBJECT_HANDLE","CK_TRUE","CK_ULONG","CK_VOID_PTR","DEREncodedParams","DSSKey","DSSpriviledge","DSSversion","ECPointEncoding","ECPoint_Uncompressed","ECPoint_Undefined","ECPoint_XOnly","EC_POINT_FORM_UNCOMPRESSED","HASH_LENGTH_MAX","INVALID_CERT_EXTENSION","KEAKey","KEApriviledge","KEAversion","KMID","KeyType","NSSCK_VENDOR_NSS","NSSInitContext","NSSInitParameters","NSS_INIT_FORCEOPEN","NSS_INIT_NOCERTDB","NSS_INIT_NOMODDB","NSS_INIT_OPTIMIZESPACE","NSS_INIT_READONLY","NSS_InitContext","NSS_SecureMemcmp","NSS_VersionCheck","PK11Context","PK11GenericObject","PK11ObjectType","PK11Origin","PK11SlotInfo","PK11SymKey","PK11_CreateContextBySymKey","PK11_CreateGenericObject","PK11_CreatePBEV2AlgorithmID","PK11_Decrypt","PK11_Derive","PK11_DestroyContext","PK11_DestroyGenericObject","PK11_DigestBegin","PK11_DigestFinal","PK11_DigestOp","PK11_Encrypt","PK11_ExtractKeyValue","PK11_FindKeyByKeyID","PK11_FreeSlot","PK11_FreeSymKey","PK11_GenerateKeyPair","PK11_GenerateRandom","PK11_GetInternalSlot","PK11_GetKeyData","PK11_HashBuf","PK11_ImportSymKey","PK11_MapSignKeyType","PK11_OriginDerive","PK11_OriginFortezzaHack","PK11_OriginGenerated","PK11_OriginNULL","PK11_OriginUnwrap","PK11_PBEKeyGen","PK11_PubDeriveWithKDF","PK11_ReadRawAttribute","PK11_TypeCert","PK11_TypeGeneric","PK11_TypePrivKey","PK11_TypePubKey","PK11_TypeSymKey","PK11_VerifyWithMechanism","PLArena","PLArenaPool","PORT_FreeArena","PRBool","PRErrorCode","PRInt32","PRIntn","PRUint32","PRUword","PR_FALSE","PR_GetError","PR_GetErrorText","PR_GetErrorTextLength","PR_TRUE","SECAlgorithmID","SECAlgorithmIDStr","SECFailure","SECFailure","SECITEM_FreeItem","SECItem","SECItemStr","SECItemType","SECKEYDHPublicKey","SECKEYDHPublicKeyStr","SECKEYDSAPublicKey","SECKEYDSAPublicKeyStr","SECKEYECParams","SECKEYECPublicKey","SECKEYECPublicKeyStr","SECKEYFortezzaPublicKey","SECKEYFortezzaPublicKeyStr","SECKEYKEAParams","SECKEYKEAParamsStr","SECKEYKEAPublicKey","SECKEYKEAPublicKeyStr","SECKEYPQGParams","SECKEYPQGParamsStr","SECKEYPrivateKey","SECKEYPrivateKeyStr","SECKEYPublicKey","SECKEYPublicKeyStr","SECKEYPublicKeyStr_u","SECKEYRSAPublicKey","SECKEYRSAPublicKeyStr","SECKEY_ConvertToPublicKey","SECKEY_CopyPublicKey","SECKEY_DestroyPrivateKey","SECKEY_DestroyPublicKey","SECOID_DestroyAlgorithmID","SECOID_FindOIDByTag","SECOidData","SECOidDataStr","SECOidTag","SECStatus","SECSuccess","SECSuccess","SECSupportExtenTag","SECWouldBlock","SECWouldBlock","SEC_ASN1_OBJECT_ID","SEC_OID_AES_128_CBC","SEC_OID_AES_128_ECB","SEC_OID_AES_128_GCM","SEC_OID_AES_128_KEY_WRAP","SEC_OID_AES_192_CBC","SEC_OID_AES_192_ECB","SEC_OID_AES_192_GCM","SEC_OID_AES_192_KEY_WRAP","SEC_OID_AES_256_CBC","SEC_OID_AES_256_ECB","SEC_OID_AES_256_GCM","SEC_OID_AES_256_KEY_WRAP","SEC_OID_ANSIX962_ECDSA_SHA1_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA224_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA256_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA384_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SHA512_SIGNATURE","SEC_OID_ANSIX962_ECDSA_SIGNATURE_RECOMMENDED_DIGEST","SEC_OID_ANSIX962_ECDSA_SIGNATURE_SPECIFIED_DIGEST","SEC_OID_ANSIX962_EC_C2ONB191V4","SEC_OID_ANSIX962_EC_C2ONB191V5","SEC_OID_ANSIX962_EC_C2ONB239V4","SEC_OID_ANSIX962_EC_C2ONB239V5","SEC_OID_ANSIX962_EC_C2PNB163V1","SEC_OID_ANSIX962_EC_C2PNB163V2","SEC_OID_ANSIX962_EC_C2PNB163V3","SEC_OID_ANSIX962_EC_C2PNB176V1","SEC_OID_ANSIX962_EC_C2PNB208W1","SEC_OID_ANSIX962_EC_C2PNB272W1","SEC_OID_ANSIX962_EC_C2PNB304W1","SEC_OID_ANSIX962_EC_C2PNB368W1","SEC_OID_ANSIX962_EC_C2TNB191V1","SEC_OID_ANSIX962_EC_C2TNB191V2","SEC_OID_ANSIX962_EC_C2TNB191V3","SEC_OID_ANSIX962_EC_C2TNB239V1","SEC_OID_ANSIX962_EC_C2TNB239V2","SEC_OID_ANSIX962_EC_C2TNB239V3","SEC_OID_ANSIX962_EC_C2TNB359V1","SEC_OID_ANSIX962_EC_C2TNB431R1","SEC_OID_ANSIX962_EC_PRIME192V1","SEC_OID_ANSIX962_EC_PRIME192V2","SEC_OID_ANSIX962_EC_PRIME192V3","SEC_OID_ANSIX962_EC_PRIME239V1","SEC_OID_ANSIX962_EC_PRIME239V2","SEC_OID_ANSIX962_EC_PRIME239V3","SEC_OID_ANSIX962_EC_PUBLIC_KEY","SEC_OID_ANSIX9_DSA_SIGNATURE","SEC_OID_ANSIX9_DSA_SIGNATURE_WITH_SHA1_DIGEST","SEC_OID_APPLY_SSL_POLICY","SEC_OID_AVA_COMMON_NAME","SEC_OID_AVA_COUNTRY_NAME","SEC_OID_AVA_DC","SEC_OID_AVA_DN_QUALIFIER","SEC_OID_AVA_GENERATION_QUALIFIER","SEC_OID_AVA_GIVEN_NAME","SEC_OID_AVA_HOUSE_IDENTIFIER","SEC_OID_AVA_INITIALS","SEC_OID_AVA_LOCALITY","SEC_OID_AVA_NAME","SEC_OID_AVA_ORGANIZATIONAL_UNIT_NAME","SEC_OID_AVA_ORGANIZATION_NAME","SEC_OID_AVA_POSTAL_ADDRESS","SEC_OID_AVA_POSTAL_CODE","SEC_OID_AVA_POST_OFFICE_BOX","SEC_OID_AVA_PSEUDONYM","SEC_OID_AVA_SERIAL_NUMBER","SEC_OID_AVA_STATE_OR_PROVINCE","SEC_OID_AVA_STREET_ADDRESS","SEC_OID_AVA_SURNAME","SEC_OID_AVA_TITLE","SEC_OID_BOGUS_DSA_SIGNATURE_WITH_SHA1_DIGEST","SEC_OID_BOGUS_KEY_USAGE","SEC_OID_BUSINESS_CATEGORY","SEC_OID_CAMELLIA_128_CBC","SEC_OID_CAMELLIA_192_CBC","SEC_OID_CAMELLIA_256_CBC","SEC_OID_CERT_RENEWAL_LOCATOR","SEC_OID_CHACHA20_POLY1305","SEC_OID_CMS_3DES_KEY_WRAP","SEC_OID_CMS_EPHEMERAL_STATIC_DIFFIE_HELLMAN","SEC_OID_CMS_RC2_KEY_WRAP","SEC_OID_CURVE25519","SEC_OID_DES_40_CBC","SEC_OID_DES_CBC","SEC_OID_DES_CFB","SEC_OID_DES_ECB","SEC_OID_DES_EDE","SEC_OID_DES_EDE3_CBC","SEC_OID_DES_MAC","SEC_OID_DES_OFB","SEC_OID_EV_INCORPORATION_COUNTRY","SEC_OID_EV_INCORPORATION_LOCALITY","SEC_OID_EV_INCORPORATION_STATE","SEC_OID_EXT_KEY_USAGE_CLIENT_AUTH","SEC_OID_EXT_KEY_USAGE_CODE_SIGN","SEC_OID_EXT_KEY_USAGE_EMAIL_PROTECT","SEC_OID_EXT_KEY_USAGE_IPSEC_END","SEC_OID_EXT_KEY_USAGE_IPSEC_IKE","SEC_OID_EXT_KEY_USAGE_IPSEC_TUNNEL","SEC_OID_EXT_KEY_USAGE_IPSEC_USER","SEC_OID_EXT_KEY_USAGE_SERVER_AUTH","SEC_OID_EXT_KEY_USAGE_TIME_STAMP","SEC_OID_FORTEZZA_SKIPJACK","SEC_OID_HMAC_MD5","SEC_OID_HMAC_SHA1","SEC_OID_HMAC_SHA224","SEC_OID_HMAC_SHA256","SEC_OID_HMAC_SHA384","SEC_OID_HMAC_SHA512","SEC_OID_IDEA_CBC","SEC_OID_IPSEC_IKE_END","SEC_OID_IPSEC_IKE_INTERMEDIATE","SEC_OID_ISO_SHA1_WITH_RSA_SIGNATURE","SEC_OID_ISO_SHA_WITH_RSA_SIGNATURE","SEC_OID_MD2","SEC_OID_MD4","SEC_OID_MD5","SEC_OID_MISSI_ALT_KEA","SEC_OID_MISSI_DSS","SEC_OID_MISSI_DSS_OLD","SEC_OID_MISSI_KEA","SEC_OID_MISSI_KEA_DSS","SEC_OID_MISSI_KEA_DSS_OLD","SEC_OID_MS_EXT_KEY_USAGE_CTL_SIGNING","SEC_OID_MS_SMIME_ENCRYPTION_KEY_PREFERENCE","SEC_OID_NETSCAPE_AOLSCREENNAME","SEC_OID_NETSCAPE_NICKNAME","SEC_OID_NETSCAPE_RECOVERY_REQUEST","SEC_OID_NETSCAPE_SMIME_KEA","SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA224_DIGEST","SEC_OID_NIST_DSA_SIGNATURE_WITH_SHA256_DIGEST","SEC_OID_NS_CERT_EXT_BASE_URL","SEC_OID_NS_CERT_EXT_CA_CERT_URL","SEC_OID_NS_CERT_EXT_CA_CRL_URL","SEC_OID_NS_CERT_EXT_CA_POLICY_URL","SEC_OID_NS_CERT_EXT_CA_REVOCATION_URL","SEC_OID_NS_CERT_EXT_CERT_RENEWAL_TIME","SEC_OID_NS_CERT_EXT_CERT_RENEWAL_URL","SEC_OID_NS_CERT_EXT_CERT_TYPE","SEC_OID_NS_CERT_EXT_COMMENT","SEC_OID_NS_CERT_EXT_ENTITY_LOGO","SEC_OID_NS_CERT_EXT_HOMEPAGE_URL","SEC_OID_NS_CERT_EXT_ISSUER_LOGO","SEC_OID_NS_CERT_EXT_LOST_PASSWORD_URL","SEC_OID_NS_CERT_EXT_NETSCAPE_OK","SEC_OID_NS_CERT_EXT_REVOCATION_URL","SEC_OID_NS_CERT_EXT_SCOPE_OF_USE","SEC_OID_NS_CERT_EXT_SSL_SERVER_NAME","SEC_OID_NS_CERT_EXT_SUBJECT_LOGO","SEC_OID_NS_CERT_EXT_USER_PICTURE","SEC_OID_NS_KEY_USAGE_GOVT_APPROVED","SEC_OID_NS_TYPE_CERT_SEQUENCE","SEC_OID_NS_TYPE_GIF","SEC_OID_NS_TYPE_HTML","SEC_OID_NS_TYPE_JPEG","SEC_OID_NS_TYPE_URL","SEC_OID_NULL_CIPHER","SEC_OID_OCSP_RESPONDER","SEC_OID_PKCS12","SEC_OID_PKCS12_BAG_IDS","SEC_OID_PKCS12_CERT_AND_CRL_BAG_ID","SEC_OID_PKCS12_CERT_BAG_IDS","SEC_OID_PKCS12_ENVELOPING_IDS","SEC_OID_PKCS12_ESPVK_IDS","SEC_OID_PKCS12_KEY_BAG_ID","SEC_OID_PKCS12_MODE_IDS","SEC_OID_PKCS12_OIDS","SEC_OID_PKCS12_PBE_IDS","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_128_BIT_RC4","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_40_BIT_RC4","SEC_OID_PKCS12_PBE_WITH_SHA1_AND_TRIPLE_DES_CBC","SEC_OID_PKCS12_PKCS8_KEY_SHROUDING","SEC_OID_PKCS12_PKCS8_SHROUDED_KEY_BAG_ID","SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_128_BIT_RC4","SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_40_BIT_RC4","SEC_OID_PKCS12_RSA_ENCRYPTION_WITH_TRIPLE_DES","SEC_OID_PKCS12_RSA_SIGNATURE_WITH_SHA1_DIGEST","SEC_OID_PKCS12_SAFE_CONTENTS_ID","SEC_OID_PKCS12_SDSI_CERT_BAG","SEC_OID_PKCS12_SECRET_BAG_ID","SEC_OID_PKCS12_SIGNATURE_IDS","SEC_OID_PKCS12_V1_CERT_BAG_ID","SEC_OID_PKCS12_V1_CRL_BAG_ID","SEC_OID_PKCS12_V1_KEY_BAG_ID","SEC_OID_PKCS12_V1_PKCS8_SHROUDED_KEY_BAG_ID","SEC_OID_PKCS12_V1_SAFE_CONTENTS_BAG_ID","SEC_OID_PKCS12_V1_SECRET_BAG_ID","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC2_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_128_BIT_RC4","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_2KEY_TRIPLE_DES_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_3KEY_TRIPLE_DES_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC2_CBC","SEC_OID_PKCS12_V2_PBE_WITH_SHA1_AND_40_BIT_RC4","SEC_OID_PKCS12_X509_CERT_CRL_BAG","SEC_OID_PKCS1_MD2_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_MD4_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_MD5_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_MGF1","SEC_OID_PKCS1_PSPECIFIED","SEC_OID_PKCS1_RSA_ENCRYPTION","SEC_OID_PKCS1_RSA_OAEP_ENCRYPTION","SEC_OID_PKCS1_RSA_PSS_SIGNATURE","SEC_OID_PKCS1_SHA1_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA224_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA256_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA384_WITH_RSA_ENCRYPTION","SEC_OID_PKCS1_SHA512_WITH_RSA_ENCRYPTION","SEC_OID_PKCS5_PBES2","SEC_OID_PKCS5_PBE_WITH_MD2_AND_DES_CBC","SEC_OID_PKCS5_PBE_WITH_MD5_AND_DES_CBC","SEC_OID_PKCS5_PBE_WITH_SHA1_AND_DES_CBC","SEC_OID_PKCS5_PBKDF2","SEC_OID_PKCS5_PBMAC1","SEC_OID_PKCS7","SEC_OID_PKCS7_DATA","SEC_OID_PKCS7_DIGESTED_DATA","SEC_OID_PKCS7_ENCRYPTED_DATA","SEC_OID_PKCS7_ENVELOPED_DATA","SEC_OID_PKCS7_SIGNED_DATA","SEC_OID_PKCS7_SIGNED_ENVELOPED_DATA","SEC_OID_PKCS9_CHALLENGE_PASSWORD","SEC_OID_PKCS9_CONTENT_TYPE","SEC_OID_PKCS9_COUNTER_SIGNATURE","SEC_OID_PKCS9_EMAIL_ADDRESS","SEC_OID_PKCS9_EXTENDED_CERTIFICATE_ATTRIBUTES","SEC_OID_PKCS9_EXTENSION_REQUEST","SEC_OID_PKCS9_FRIENDLY_NAME","SEC_OID_PKCS9_LOCAL_KEY_ID","SEC_OID_PKCS9_MESSAGE_DIGEST","SEC_OID_PKCS9_SDSI_CERT","SEC_OID_PKCS9_SIGNING_TIME","SEC_OID_PKCS9_SMIME_CAPABILITIES","SEC_OID_PKCS9_UNSTRUCTURED_ADDRESS","SEC_OID_PKCS9_UNSTRUCTURED_NAME","SEC_OID_PKCS9_X509_CERT","SEC_OID_PKCS9_X509_CRL","SEC_OID_PKIX_CA_ISSUERS","SEC_OID_PKIX_CA_REPOSITORY","SEC_OID_PKIX_CPS_POINTER_QUALIFIER","SEC_OID_PKIX_OCSP","SEC_OID_PKIX_OCSP_ARCHIVE_CUTOFF","SEC_OID_PKIX_OCSP_BASIC_RESPONSE","SEC_OID_PKIX_OCSP_CRL","SEC_OID_PKIX_OCSP_NONCE","SEC_OID_PKIX_OCSP_NO_CHECK","SEC_OID_PKIX_OCSP_RESPONSE","SEC_OID_PKIX_OCSP_SERVICE_LOCATOR","SEC_OID_PKIX_REGCTRL_AUTHENTICATOR","SEC_OID_PKIX_REGCTRL_OLD_CERT_ID","SEC_OID_PKIX_REGCTRL_PKIPUBINFO","SEC_OID_PKIX_REGCTRL_PKI_ARCH_OPTIONS","SEC_OID_PKIX_REGCTRL_PROTOCOL_ENC_KEY","SEC_OID_PKIX_REGCTRL_REGTOKEN","SEC_OID_PKIX_REGINFO_CERT_REQUEST","SEC_OID_PKIX_REGINFO_UTF8_PAIRS","SEC_OID_PKIX_TIMESTAMPING","SEC_OID_PKIX_USER_NOTICE_QUALIFIER","SEC_OID_RC2_40_CBC","SEC_OID_RC2_CBC","SEC_OID_RC4","SEC_OID_RC4_40","SEC_OID_RC4_56","SEC_OID_RC5_CBC_PAD","SEC_OID_RFC1274_MAIL","SEC_OID_RFC1274_UID","SEC_OID_SDN702_DSA_SIGNATURE","SEC_OID_SECG_EC_SECP112R1","SEC_OID_SECG_EC_SECP112R2","SEC_OID_SECG_EC_SECP128R1","SEC_OID_SECG_EC_SECP128R2","SEC_OID_SECG_EC_SECP160K1","SEC_OID_SECG_EC_SECP160R1","SEC_OID_SECG_EC_SECP160R2","SEC_OID_SECG_EC_SECP192K1","SEC_OID_SECG_EC_SECP224K1","SEC_OID_SECG_EC_SECP224R1","SEC_OID_SECG_EC_SECP256K1","SEC_OID_SECG_EC_SECP256R1","SEC_OID_SECG_EC_SECP384R1","SEC_OID_SECG_EC_SECP521R1","SEC_OID_SECG_EC_SECT113R1","SEC_OID_SECG_EC_SECT113R2","SEC_OID_SECG_EC_SECT131R1","SEC_OID_SECG_EC_SECT131R2","SEC_OID_SECG_EC_SECT163K1","SEC_OID_SECG_EC_SECT163R1","SEC_OID_SECG_EC_SECT163R2","SEC_OID_SECG_EC_SECT193R1","SEC_OID_SECG_EC_SECT193R2","SEC_OID_SECG_EC_SECT233K1","SEC_OID_SECG_EC_SECT233R1","SEC_OID_SECG_EC_SECT239K1","SEC_OID_SECG_EC_SECT283K1","SEC_OID_SECG_EC_SECT283R1","SEC_OID_SECG_EC_SECT409K1","SEC_OID_SECG_EC_SECT409R1","SEC_OID_SECG_EC_SECT571K1","SEC_OID_SECG_EC_SECT571R1","SEC_OID_SEED_CBC","SEC_OID_SHA1","SEC_OID_SHA224","SEC_OID_SHA256","SEC_OID_SHA384","SEC_OID_SHA512","SEC_OID_SMIME_ENCRYPTION_KEY_PREFERENCE","SEC_OID_TLS13_KEA_ANY","SEC_OID_TLS_DHE_CUSTOM","SEC_OID_TLS_DHE_DSS","SEC_OID_TLS_DHE_DSS_EXPORT","SEC_OID_TLS_DHE_PSK","SEC_OID_TLS_DHE_RSA","SEC_OID_TLS_DHE_RSA_EXPORT","SEC_OID_TLS_DH_ANON","SEC_OID_TLS_DH_ANON_EXPORT","SEC_OID_TLS_DH_DSS","SEC_OID_TLS_DH_DSS_EXPORT","SEC_OID_TLS_DH_RSA","SEC_OID_TLS_DH_RSA_EXPORT","SEC_OID_TLS_ECDHE_ECDSA","SEC_OID_TLS_ECDHE_PSK","SEC_OID_TLS_ECDHE_RSA","SEC_OID_TLS_ECDH_ANON","SEC_OID_TLS_ECDH_ECDSA","SEC_OID_TLS_ECDH_RSA","SEC_OID_TLS_FFDHE_2048","SEC_OID_TLS_FFDHE_3072","SEC_OID_TLS_FFDHE_4096","SEC_OID_TLS_FFDHE_6144","SEC_OID_TLS_FFDHE_8192","SEC_OID_TLS_RSA","SEC_OID_TLS_RSA_EXPORT","SEC_OID_TOTAL","SEC_OID_UNKNOWN","SEC_OID_VERISIGN_USER_NOTICES","SEC_OID_X500_RSA_ENCRYPTION","SEC_OID_X509_ANY_EXT_KEY_USAGE","SEC_OID_X509_ANY_POLICY","SEC_OID_X509_AUTH_INFO_ACCESS","SEC_OID_X509_AUTH_KEY_ID","SEC_OID_X509_BASIC_CONSTRAINTS","SEC_OID_X509_CERTIFICATE_POLICIES","SEC_OID_X509_CERT_ISSUER","SEC_OID_X509_CRL_DIST_POINTS","SEC_OID_X509_CRL_NUMBER","SEC_OID_X509_DELTA_CRL_INDICATOR","SEC_OID_X509_EXT_KEY_USAGE","SEC_OID_X509_FRESHEST_CRL","SEC_OID_X509_HOLD_INSTRUCTION_CODE","SEC_OID_X509_INHIBIT_ANY_POLICY","SEC_OID_X509_INVALID_DATE","SEC_OID_X509_ISSUER_ALT_NAME","SEC_OID_X509_ISSUING_DISTRIBUTION_POINT","SEC_OID_X509_KEY_USAGE","SEC_OID_X509_NAME_CONSTRAINTS","SEC_OID_X509_POLICY_CONSTRAINTS","SEC_OID_X509_POLICY_MAPPINGS","SEC_OID_X509_PRIVATE_KEY_USAGE_PERIOD","SEC_OID_X509_REASON_CODE","SEC_OID_X509_SUBJECT_ALT_NAME","SEC_OID_X509_SUBJECT_DIRECTORY_ATTR","SEC_OID_X509_SUBJECT_INFO_ACCESS","SEC_OID_X509_SUBJECT_KEY_ID","SEC_OID_X942_DIFFIE_HELMAN_KEY","SHA256_LENGTH","SHA384_LENGTH","SUPPORTED_CERT_EXTENSION","UNSUPPORTED_CERT_EXTENSION","VerifyCodeSigningCertificateChain","_SECStatus","algorithm","arena","arena","arena","arena","arena","arena","arenasize","avail","bExpand","bExtract","base","base","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clearance","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","current","data","desc","dh","dhKey","dsa","dsaKey","ec","ecKey","encoding","eq","equivalent","first","fmt","fortezza","fortezzaKey","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","kea","keaKey","keaParams","keyType","keyType","len","limit","mask","mechanism","modulus","next","nullKey","offset","oid","pAAD","pInfo","pIv","pSalt","pValue","parameters","params","params","params","pkcs11ID","pkcs11ID","pkcs11IsTemp","pkcs11Slot","pkcs11Slot","prime","prime","publicExponent","publicValue","publicValue","publicValue","publicValue","rsa","rsaKey","rsaOaepKey","rsaPssKey","siAsciiNameString","siAsciiString","siBMPString","siBuffer","siCipherDataBuffer","siClearDataBuffer","siDERCertBuffer","siDERNameBuffer","siDEROID","siEncodedCertBuffer","siEncodedNameBuffer","siGeneralizedTime","siUTCTime","siUTF8String","siUnsignedInteger","siVisibleString","size","size_t","staticflags","subPrime","supportedExtension","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","ulAADLen","ulInfoLen","ulIvBits","ulIvLen","ulSaltLen","ulTagBits","ulValueLen","wincx"],"q":[[0,"nss_sys"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,7,7,7,0,9,9,9,0,0,22,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,0,0,0,24,24,24,24,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,0,16,16,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,22,22,0,0,14,26,27,1,3,4,6,12,11,28,28,3,4,11,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,7,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,12,13,15,29,30,29,30,29,30,8,16,16,12,13,29,30,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,6,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,29,30,7,26,27,13,11,12,15,1,11,30,15,15,31,28,31,28,10,14,2,5,7,26,27,27,26,27,3,4,1,2,4,5,8,29,30,30,30,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,8,0,27,3,15,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,10,13,26,29,27,30,31,28,32,23,24,22,25,1,2,3,4,5,6,7,8,9,10,11,12,13,16,14,15,26,31,28,31,31,28,31,10,27],"fc":[],"p":[[3,"SECKEYRSAPublicKeyStr"],[3,"SECKEYDSAPublicKeyStr"],[3,"SECKEYPQGParamsStr"],[3,"SECKEYDHPublicKeyStr"],[3,"SECKEYKEAPublicKeyStr"],[3,"SECKEYKEAParamsStr"],[3,"SECKEYFortezzaPublicKeyStr"],[3,"SECKEYECPublicKeyStr"],[4,"ECPointEncoding"],[3,"CK_ATTRIBUTE"],[3,"PLArena"],[3,"PLArenaPool"],[3,"SECItemStr"],[3,"SECAlgorithmIDStr"],[3,"SECOidDataStr"],[4,"_SECStatus"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[4,"SECSupportExtenTag"],[4,"PK11Origin"],[4,"PK11ObjectType"],[4,"SECOidTag"],[3,"SECKEYPublicKeyStr"],[3,"SECKEYPrivateKeyStr"],[3,"CK_NSS_HKDFParams"],[19,"SECKEYPublicKeyStr_u"],[4,"KeyType"],[3,"CK_GCM_PARAMS_V3"],[4,"SECItemType"]]},\
"places":{"doc":"","t":"CCCCCACAAAAACAAAAAAAFAAADDNENLLLLLLFLLMLLLLLLLLFLLLMLMMLMLLLLLLLLLMFMLLLNNCENNCDDNNFLLLLLLLLLLLLLLLLLLLMLLLLLLLMLLLMFMFMMLLFFMLLLLLLLLLLLLMLLLERDNNNDLLLLLLLLLLLMLLLLLLLLFLLLLLMLLLLFLLLLLLLLLLLLLLLLLLLLLNCNNNNNNEENLLLLLLLLLLALLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLDRRRRLLLLLLLLLLLLLLLLLLNEDDNDNDNDNDLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLMMMMMMMMMMMMLMMMMMLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLCCDCLLLLALLLLLLLLLLDDRDDDLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGNNENENNNNNNNNENNENNNNNNNNNNNNNNNENGNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMCNCGGCGCCDSEDCCCCCDDCGGGNENNCDDNCCDNDNDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMMLLLLLLMLLLLLLLLLMLLLLLLLLLLLCLLLMLLLLLLLMLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLMLLLLLLLLLLLLLRDMLLFLLLMMMMLLMMLMMMLLLMMMMMMMMMMLLLLMMMLNNELLLLLLLLFFFLLLLLLRCDLLLLLLLALLLLLLLLLLLALLLLLLLRRDRLLLLMLLLLLLLLLLLLLLDDLLLLLLLLMLLLLLLLLLLLMMLLLLMLLMLLLLLLMMMLLACADDDFLLLLLLLLLFLLLLLLLLLLLLLMMMFLALMLLLLLLLLLLLLFFFFACFNNDSNNNNSSESSSDSSSSLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLMLMLLMMLLLLMMLLLLLLLLLLLLLLMLMMLLLDMLLLLLLLLLMMMMLMMMLLLLMMLLLLLLLLLLDDDDRRRALLLLLLLLLLLLMMLFLLLFLLLLLMLLLLLLLMLMAALLLLMMMMLMMMFFFFLMMAMLLLLLLLLLLLLLLLMMFMMMLLLLNNNEEDNNDDEDNNNNNNNNNNRNDDEDELLAFLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLFMMMLLLFFLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLFLLLLLLLLLLLLLAMMMLMMMFMMMMLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMMMLLLLLLLLLLLLLMMMMMMMMMMFNDDNEDDDNLLLLLLLLLLLLMMLLLLLLLLLMMMLLLFFFFLLLLLLLLLLLLLLMMMLLLLLLLMMMLMMMLMMMFFMMLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMMNDENENDNDNLLLLLLLLLLMLMMMLLLFLLLLLLLLLLLLLMMMFLLLLLMMMLLMMLLLLLLLLLLLLLLLMLLLLLMMMFFFFFFFFFFFFFFFFFAFFFFFFDDFFFLLLLLLLLFFFLLLLLLMLLMMMLLLLLLLMMMMLLEDDDDNNFLLLLLLLLLLLLLLLLLLLLLMFFFFMMLLLLLLLLLMLLLLLFFFFLLLLLMMMFMMMMMMMMLLLLLLMLLLLLLLLLLLLLLLMMMMMMLLLLLNNNELLLLLLLLLFFLLFFFLLLLFFLNNENNNNDNNNNNNNENNGEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ConnectionType","PageInfo","PlacesApi","PlacesDb","RowId","api","apply_observation","bookmark_sync","db","error","ffi","frecency","get_registered_sync_engine","hash","history_sync","import","match_impl","observation","storage","types","apply_observation","history","matcher","places_api","AddablePlaceInfo","AddableVisit","Permanent","RedirectSourceType","Temporary","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","can_add_url","clone","clone_into","date","eq","equivalent","fmt","fmt","fmt","from","from","from","insert","into","into","into","is_local","partial_cmp","referrer","title","to_owned","transition","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","visit_uri","visits","vzip","vzip","vzip","Bookmark","Keyword","MatchBehavior","MatchReason","Origin","PreviousUse","SearchBehavior","SearchParams","SearchResult","Tags","Url","accept_result","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","fmt","frecency","from","from","from","from_adaptive_row","from_origin_row","from_suggestion_row","from_url_row","icon_url","into","into","into","limit","match_url","reasons","search_frecent","search_string","search_string","serialize","serialize","split_after_host_and_port","split_after_prefix","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","url","vzip","vzip","vzip","ConnectionType","GLOBAL_STATE_META_KEY","PlacesApi","ReadOnly","ReadWrite","Sync","SyncState","bookmarks_reset","bookmarks_sync","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close_connection","disk_cached_state","do_sync_one","eq","equivalent","fmt","from","from","from","from_primitive","get_registered_sync_engine","get_sync_connection","history_sync","into","into","into","mem_cached_state","new","new_connection","new_memory","open_connection","places_api_new","register_with_sync_manager","reset_bookmarks","reset_history","rusqlite_flags","sync","sync_bookmarks","sync_history","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wipe_bookmarks","Bookmark","BookmarksSyncEngine","Folder","Livemark","Query","Replace","Reupload","Separator","SyncedBookmarkKind","SyncedBookmarkValidity","Valid","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","engine","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from_u8","from_u8","get_hash","get_hash","hash","hash","into","into","partial_cmp","partial_cmp","record","to_owned","to_owned","to_sql","to_sql","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BookmarksSyncEngine","COLLECTION_NAME","COLLECTION_SYNCID_META_KEY","GLOBAL_SYNCID_META_KEY","LAST_SYNC_META_KEY","apply","borrow","borrow_mut","collection_name","from","get_collection_request","get_sync_assoc","into","new","reset","set_uploaded","stage_incoming","sync_finished","try_from","try_into","type_id","vzip","wipe","Bookmark","BookmarkItemRecord","BookmarkRecord","BookmarkRecordId","Folder","FolderRecord","Livemark","LivemarkRecord","Query","QueryRecord","Separator","SeparatorRecord","as_guid","as_payload_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","date_added","date_added","date_added","date_added","date_added","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","feed_url","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_payload_id","get_hash","has_dupe","has_dupe","has_dupe","has_dupe","has_dupe","hash","into","into","into","into","into","into","into","into_payload_id","keyword","parent_record_id","parent_record_id","parent_record_id","parent_record_id","parent_record_id","parent_title","parent_title","parent_title","parent_title","parent_title","position","record_id","record_id","record_id","record_id","record_id","record_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","site_url","tag_folder_name","tags","title","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","unknown_fields","url","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GlobalChangeCounterTracker","PlacesDb","PlacesTransaction","SharedPlacesDb","borrow","borrow_mut","commit","conn","db","deref","from","into","maybe_commit","rollback","should_commit","try_from","try_into","type_id","vzip","GLOBAL_BOOKMARK_CHANGE_COUNTERS","GlobalChangeCounterTracker","MAX_VARIABLE_NUMBER","PlacesDb","PlacesInitializer","SharedPlacesDb","api_id","as_ref","begin_interrupt_scope","begin_interrupt_scope","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","changed","conn","conn_type","db","deref","deref","deref","drop","finish","fmt","from","from","from","from","from","global_bookmark_change_tracker","init","into","into","into","into","into","new","new","new_interrupt_handle","open","prepare","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upgrade_from","vzip","vzip","vzip","vzip","vzip","ApiResult","CannotUpdateRoot","ConnectionAlreadyOpen","Corruption","Corruption","Error","IllegalChange","IllegalDatabasePath","InterruptedError","InvalidBookmarkOperation","InvalidChildGuid","InvalidConnectionType","InvalidGuid","InvalidLocalRoots","InvalidMetadataObservation","InvalidMetadataObservation","InvalidParent","InvalidPlaceInfo","InvalidPlaceInfo","InvalidSyncedRoots","InvalidTag","IoError","JsonError","MergeError","MismatchedBookmarkType","MissingBookmarkKind","NoParent","NoSuchGuid","NoSuchUrl","NoUrl","NonRootWithoutParent","OpenDatabaseError","OperationInterrupted","PlacesApiError","PlacesConnectionBusy","Result","SqlError","SyncAdapterError","UnexpectedPlacesException","UnknownBookmarkItem","UnsupportedDatabaseVersion","UnsupportedSyncedBookmarkKind","UnsupportedSyncedBookmarkValidity","UrlParseError","UrlParseFailed","UrlTooLong","Utf8Error","ViewTimeTooLong","WrongApiForClose","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_error_handling","into","into","into","into","into","provide","provide","provide","provide","provide","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","reason","reason","reason","reason","reason","reason","ApiResult","Bookmark","BookmarkData","BookmarkFolder","BookmarkItem","BookmarkPosition","BookmarkSeparator","BookmarkUpdateInfo","DocumentType","Dummy","EARLIEST","FrecencyThresholdOption","Guid","HistoryHighlight","HistoryHighlightWeights","HistoryMetadata","HistoryMetadataObservation","HistoryMigrationResult","HistoryVisitInfo","HistoryVisitInfosWithBound","InsertableBookmark","InsertableBookmarkFolder","InsertableBookmarkItem","InsertableBookmarkSeparator","Keyword","MatchReason","None","Origin","PlacesApiError","PlacesConnection","PlacesTimestamp","PreviousUse","Result","RunMaintenanceMetrics","SearchResult","SkipOneTimePages","SqlInterruptHandle","Tags","TopFrecentSiteInfo","Url","UrlMatch","accept_result","apply_observation","as_bytes","as_millis","as_millis_i64","as_ref","as_ref","as_ref","as_ref","as_str","as_str","begin_interrupt_scope","bookmarks_delete","bookmarks_delete_everything","bookmarks_get_all_with_url","bookmarks_get_by_guid","bookmarks_get_recent","bookmarks_get_tree","bookmarks_get_url_for_keyword","bookmarks_insert","bookmarks_search","bookmarks_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bound","cannot_be_a_base","checked_add","checked_sub","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column_result","column_result","default","default","delete_everything_history","delete_visit","delete_visits_between","delete_visits_for","deref","deserialize","deserialize","deserialize","deserialize_internal","domain","duration_since","empty","encode_hex","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragment","frecency","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_directory_path","from_file_path","from_slice","from_str","from_string","from_vec","get_hash","get_hash","get_hash","get_history_highlights","get_history_metadata_between","get_history_metadata_since","get_latest_history_metadata_for_url","get_top_frecent_site_infos","get_visit_count","get_visit_infos","get_visit_page","get_visit_page_with_bound","get_visited","get_visited_urls_in_range","has_authority","has_host","hash","hash","hash","host","host_str","index","index","index","index","infos","interrupt","into","into","into","into","into","into","into","into","into","into","into","into","into_resettable","into_resettable","into_string","into_string","is_hidden","is_remote","is_valid_for_places","is_valid_for_sync_server","is_valid_places_byte","join","make_relative","match_url","md","measure_with","metadata_delete","metadata_delete_older_than","new","new","new","new_interrupt_handle","note_history_metadata_observation","now","offset","options","origin","parse","parse_with_params","partial_cmp","partial_cmp","partial_cmp","password","path","path_segments","path_segments_mut","places_api_new","places_history_import_from_ios","port","port_or_known_default","preview_image_url","prune_destructively","query","query_autocomplete","query_history_metadata","query_pairs","query_pairs_mut","random","reasons","run_maintenance_checkpoint","run_maintenance_optimize","run_maintenance_prune","run_maintenance_vacuum","scheme","serialize","serialize","serialize","serialize_internal","set_fragment","set_host","set_ip_host","set_password","set_path","set_port","set_query","set_scheme","set_username","socket_addrs","timestamp","title","title","title","to_file_path","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","to_sql","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","url","username","utf16char_indices","utf8char_indices","visit_type","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_local_history","DEFAULT_FRECENCY_SETTINGS","FrecencySettings","bookmark_visit_bonus","borrow","borrow_mut","calculate_frecency","clone","clone_into","default","default_bucket_weight","default_visit_bonus","download_visit_bonus","embed_visit_bonus","eq","equivalent","first_bucket_cutoff_days","first_bucket_weight","fmt","fourth_bucket_cutoff_days","fourth_bucket_weight","framed_link_visit_bonus","from","get_transition_bonus","into","link_visit_bonus","num_visits","permanent_redirect_visit_bonus","redirect_source_visit_bonus","reload_visit_bonus","second_bucket_cutoff_days","second_bucket_weight","temporary_redirect_visit_bonus","third_bucket_cutoff_days","third_bucket_weight","to_owned","try_from","try_into","type_id","typed_visit_bonus","unvisited_bookmark_bonus","unvisited_typed_bonus","vzip","Hi","Lo","PrefixMode","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash_string","hash_url","hash_url_prefix","into","to_owned","try_from","try_into","type_id","vzip","HISTORY_TTL","HistorySyncEngine","ServerVisitTimestamp","borrow","borrow_mut","clone","clone_into","cmp","default","deserialize","engine","eq","equivalent","fmt","fmt","from","from","from","get_hash","hash","into","partial_cmp","record","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","COLLECTION_SYNCID_META_KEY","GLOBAL_SYNCID_META_KEY","HistorySyncEngine","LAST_SYNC_META_KEY","apply","borrow","borrow_mut","collection_name","db","from","get_collection_request","get_sync_assoc","into","new","reset","set_uploaded","stage_incoming","sync_finished","try_from","try_into","type_id","vzip","wipe","HistoryRecord","HistoryRecordVisit","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","date","default","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hist_uri","id","into","into","serialize","serialize","title","to_owned","to_owned","transition","try_from","try_from","try_into","try_into","type_id","type_id","unknown_fields","unknown_fields","visits","vzip","vzip","common","import_ios_history","ios","ExecuteOnDrop","HistoryMigrationResult","NOW","attached_database","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","define_history_migration_functions","deref","drop","eq","equivalent","execute_now","fmt","from","from","from","into","into","into","new","num_failed","num_succeeded","num_total","select_count","serialize","sql_fns","to_owned","total_duration","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","sanitize_float_timestamp","sanitize_integer_timestamp","sanitize_utf8","validate_url","history","import_history","import","Anywhere","AnywhereUnmodified","AutocompleteMatch","BOOKMARK","Beginning","BeginningCaseSensitive","Boundary","BoundaryAnywhere","HISTORY","JAVASCRIPT","MatchBehavior","OPENPAGE","RESTRICT","SEARCHES","SearchBehavior","TAG","TITLE","TYPED","URL","all","any","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","bookmarked","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","column_result","column_result","complement","contains","default","difference","empty","eq","eq","equivalent","equivalent","extend","find_in_string","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get_hash","hash","insert","intersection","intersects","into","into","into","invoke","is_all","is_empty","match_behavior","not","open_page_count","partial_cmp","remove","search_behavior","search_str","set","sub","sub_assign","symmetric_difference","tags","title_str","to_owned","to_owned","to_sql","to_sql","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","typed","union","url_str","visit_count","vzip","vzip","vzip","VisitObservation","at","borrow","borrow_mut","clone","clone_into","fmt","from","get_is_hidden","get_redirect_frecency_boost","into","is_error","is_permanent_redirect_source","is_redirect_source","is_remote","new","preview_image_url","referrer","title","to_owned","try_from","try_into","type_id","url","visit_type","vzip","with_at","with_is_error","with_is_permanent_redirect_source","with_is_redirect_source","with_is_remote","with_preview_image_url","with_referrer","with_title","with_visit_type","FetchedPageInfo","PageInfo","RowId","RunMaintenanceMetrics","TAG_LENGTH_MAX","TITLE_LENGTH_MAX","URL_LENGTH_MAX","bookmarks","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","column_result","db_size_after","db_size_before","default","delete_pending_temp_tables","deserialize","eq","equivalent","fetch_page_info","fmt","fmt","fmt","fmt","fmt","frecency","from","from","from","from","from_row","from_row","get_hash","guid","hash","hidden","history","history_metadata","into","into","into","into","last_visit_date_local","last_visit_date_remote","last_visit_id","page","partial_cmp","preview_image_url","pruned_visits","row_id","run_maintenance_checkpoint","run_maintenance_optimize","run_maintenance_prune","run_maintenance_vacuum","serialize","sync_change_counter","sync_status","tags","title","to_owned","to_sql","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","typed","unknown_fields","update_all_frecencies_at_once","url","visit_count_local","visit_count_remote","vzip","vzip","vzip","vzip","Append","Bookmark","Bookmark","BookmarkPosition","BookmarkRootGuid","BookmarkUpdateInfo","Folder","Folder","InsertableBookmark","InsertableFolder","InsertableItem","InsertableSeparator","Menu","Mobile","None","Parent","Position","Root","Separator","Separator","Specific","Toolbar","USER_CONTENT_ROOTS","Unfiled","UpdatableBookmark","UpdatableFolder","UpdatableItem","UpdatableSeparator","UpdateTreeLocation","as_guid","as_str","bookmark_sync","bookmarks_get_url_for_keyword","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_bookmark_roots","date_added","date_added","date_added","default","default","default","delete_bookmark","delete_everything","eq","eq","eq","eq","eq","equivalent","equivalent","fetch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_guid","get_hash","guid","guid","guid","guid","guid","hash","insert_bookmark","into","into","into","into","into","into","into","into","into","into","into","into","into_updatable","json_tree","last_modified","last_modified","last_modified","location","location","location","location","maybe_truncate_title","parent_guid","parent_guid","parent_guid","parent_guid","partial_cmp","position","position","position","position","title","title","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_bookmark","update_bookmark_from_info","url","url","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","well_known","pos","b","f","s","b","f","s","guid","pos","pos","create_synced_bookmark_roots","Bookmark","BookmarkData","Folder","Folder","Item","RECENT_BOOKMARKS_QUERY","SEARCH_QUERY","Separator","Separator","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","child_guids","child_nodes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","date_added","date_added","date_added","date_added","default","deref","deref","fetch_bookmark","fetch_bookmarks_by_url","fetch_tree","fetch_tree_with_depth","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","guid","guid","guid","guid","into","into","into","into","into","into","last_modified","last_modified","last_modified","last_modified","parent_guid","parent_guid","parent_guid","parent_guid","position","position","position","position","recent_bookmarks","search_bookmarks","title","title","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","b","f","s","Bookmark","BookmarkNode","BookmarkTreeNode","Deepest","FetchDepth","Folder","FolderNode","Separator","SeparatorNode","Specific","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","created_modified","date_added","date_added","date_added","default","default","deserialize","fetch_tree","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","guid","guid","guid","guid","insert_tree","into","into","into","into","into","last_modified","last_modified","last_modified","node_type","serialize","title","title","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","b","f","s","apply_observation","apply_observation_direct","delete_everything","delete_place_visit_at_time","delete_place_visit_at_time_by_href","delete_visits_between","delete_visits_between_in_tx","delete_visits_for","frecency_stale_at","get_top_frecent_site_infos","get_visit_count","get_visit_infos","get_visit_page","get_visit_page_with_bound","get_visited","get_visited_into","get_visited_urls","history_sync","href_to_guid","prune_destructively","prune_older_visits","update_frecency","url_to_guid","wipe_local","FetchedVisit","FetchedVisitPage","apply_synced_deletion","apply_synced_reconciliation","apply_synced_visits","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fetch_outgoing","fetch_visits","finish_outgoing","fmt","fmt","from","from","from_row","from_row","guid","into","into","is_local","row_id","title","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unknown_fields","url","visit_date","visit_type","vzip","vzip","DocumentType","HistoryHighlight","HistoryHighlightWeights","HistoryMetadata","HistoryMetadataObservation","Media","Regular","apply_metadata_observation","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","column_result","created_at","delete_all_metadata_for_page","delete_between","delete_metadata","delete_older_than","document_type","document_type","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","frequency","from","from","from","from","from","get_between","get_highlights","get_latest_for_url","get_since","into","into","into","into","into","place_id","preview_image_url","preview_image_url","query","referrer_url","referrer_url","score","search_term","search_term","title","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","total_view_time","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","updated_at","url","url","url","view_time","view_time","vzip","vzip","vzip","vzip","vzip","Invalid","Normalized","Original","ValidatedTag","borrow","borrow_mut","clone","clone_into","ensure_valid","eq","equivalent","fmt","from","get_tags_for_url","get_urls_with_tag","into","is_original","remove_all_tags_from_url","remove_tag","tag_url","to_owned","try_from","try_into","type_id","untag_url","validate_tag","vzip","Bookmark","Bookmark","BookmarkType","Download","Embed","Folder","FramedLink","InvalidVisitType","Link","New","Normal","RedirectPermanent","RedirectTemporary","Reload","Separator","SyncStatus","Typed","Unknown","UnknownFields","VisitTransition","VisitTransitionSet","all","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","column_result","column_result","complement","contains","default","deserialize","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","for_specific","from","from","from","from","from","from_iter","from_primitive","from_u16","from_u8","from_u8","from_u8_with_valid_url","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","insert","into","into","into","into","into","into_iter","into_u16","is_empty","len","new","partial_cmp","partial_cmp","partial_cmp","provide","remove","serialize","serialize","single","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","to_sql","to_sql","to_sql","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"places"],[20,"places::api"],[24,"places::api::history"],[72,"places::api::matcher"],[142,"places::api::places_api"],[202,"places::bookmark_sync"],[256,"places::bookmark_sync::engine"],[279,"places::bookmark_sync::record"],[460,"places::db"],[479,"places::db::db"],[548,"places::error"],[671,"places::error::PlacesApiError"],[677,"places::ffi"],[1033,"places::frecency"],[1075,"places::hash"],[1095,"places::history_sync"],[1125,"places::history_sync::engine"],[1148,"places::history_sync::record"],[1191,"places::import"],[1194,"places::import::common"],[1241,"places::import::common::sql_fns"],[1245,"places::import::ios"],[1247,"places::import::ios::history"],[1248,"places::match_impl"],[1359,"places::observation"],[1394,"places::storage"],[1486,"places::storage::bookmarks"],[1727,"places::storage::bookmarks::BookmarkPosition"],[1728,"places::storage::bookmarks::InsertableItem"],[1731,"places::storage::bookmarks::UpdatableItem"],[1734,"places::storage::bookmarks::UpdateTreeLocation"],[1737,"places::storage::bookmarks::bookmark_sync"],[1738,"places::storage::bookmarks::fetch"],[1848,"places::storage::bookmarks::fetch::Item"],[1851,"places::storage::bookmarks::json_tree"],[1930,"places::storage::bookmarks::json_tree::BookmarkTreeNode"],[1933,"places::storage::history"],[1957,"places::storage::history::history_sync"],[1998,"places::storage::history_metadata"],[2103,"places::storage::tags"],[2130,"places::types"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The match reason specifies why an autocomplete search …","","","","","","","","Records an accepted autocomplete match, recording the …","","","","","","","","","","","","","","","","","","","","A frecency score for this match.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Default search behaviors from Desktop: HISTORY, BOOKMARK, …","","","","The favicon URL.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","A list of reasons why this matched.","Synchronously queries all providers for autocomplete …","","The search string for this match.","","","","","The title of the autocompleted value, to show in the UI. …","","","","","","","","","","","","","The URL to open when the user confirms a match. This is …","","","","","","The entry-point to the places API. This object gives …","","","","","","","","","","","","","","","Close a connection to the database. If the connection is …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new, or fetch an already open, PlacesApi backed …","","Create a new, or fetch an already open, memory-based …","Open a connection to the database.","For uniffi we need to expose our <code>Arc</code> returning constructor …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Synced item kinds. These are stored in …","Synced item validity states. These are stored in …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","Erases all local items. Unlike <code>reset</code>, this keeps all …","","","","A bookmark record ID. Bookmark record IDs are the same as …","","","","","","","","","Returns a reference to the GUID for this record ID.","Returns a reference to the record payload ID. This is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Creates a bookmark record ID from a Sync record payload ID.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the record payload ID. This is the owned version of","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","High level transaction type which “does the right thing…","","","","Consumes and commits a PlacesTransaction transaction.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","For transactions on sync connnections: Checks to see if we …","Consumes and attempst to roll back a PlacesTransaction. …","Returns <code>true</code> if the current transaction should be …","","","","","","An object that can tell you whether a bookmark changing …","","","","PlacesDB that’s behind a Mutex so it can be shared …","","","","","Begin the “correct” transaction type for this …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an object that can tell you whether any changes …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Error enum used internally","","","","Attempt to create/update/delete a bookmark item in an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Thrown when providing a guid to a create or update function","","","","","Thrown for invalid URLs","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","In desktop sync, bookmarks are clamped to Jan 23, 1993 …","","This is a type intended to be used to represent the guids …","","","","","","","","","","","","","","","","","","","","","","","","Interrupt operations that use SQL","","","A parsed URL record.","","","Add an observation to the database.","Get the data backing this <code>Guid</code> as a <code>&amp;[u8]</code>.","","","","","","","Get the data backing this <code>Guid</code> as a <code>&amp;str</code>.","Return the serialization of this URL.","Begin an interrupt scope that will be interrupted by this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return whether this URL is a cannot-be-a-base URL, meaning …","","","","","","","","","","","","","","","","","","","Create a default guid by calling <code>Guid::empty()</code>","","","","","","","","","Serialize with Serde using the internal representation of …","If this URL has a host and it is a domain name (not an IP …","Returns None if <code>other</code> is later than <code>self</code> (Duration may not …","Create an empty guid. Usable as a constant.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return this URL’s fragment identifier, if any.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a directory name as <code>std::path::Path</code> into an URL in …","Convert a file name as <code>std::path::Path</code> into an URL in the …","Convert <code>b</code> into a <code>Guid</code>.","","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>v</code> to a <code>Guid</code>, consuming it.","","","","","","","","","","","","","","","Return whether the URL has an ‘authority’, which can …","Equivalent to <code>url.host().is_some()</code>.","","","","Return the parsed representation of the host for this URL. …","Return the string representation of the host (domain or IP …","","","","","","Interrupt all interrupt scopes created by this handle","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …","Return the serialization of this URL.","","","Returns true for Guids that are valid places guids, and …","Returns true for Guids that are deemed valid by the sync …","Returns true if the byte <code>b</code> is a valid base64url byte.","Parse a string as an URL, with this URL as the base URL.","Creates a relative URL if possible, with this URL as the …","","","","","","","Create a guid from a <code>str</code>.","","","","","","Return a default <code>ParseOptions</code> that can fully configure the …","Return the origin of this URL (…","Parse an absolute URL from a string.","Parse an absolute URL from a string and add params to its …","","","","Return the password for this URL, if any, as a …","Return the path for this URL, as a percent-encoded ASCII …","Unless this URL is cannot-be-a-base, return an iterator of …","Return an object with methods to manipulate this URL’s …","","","Return the port number for this URL, if any.","Return the port number for this URL, or the default port …","","","Return this URL’s query string, if any, as a …","","","Parse the URL’s query string, if any, as …","Manipulate this URL’s query string, viewed as a sequence …","Create a random guid (of 12 base64url characters). …","","","","","","Return the scheme of this URL, lower-cased, as an ASCII …","","","","Serialize with Serde using the internal representation of …","Change this URL’s fragment identifier.","Change this URL’s host.","Change this URL’s host to the given IP address.","Change this URL’s password.","Change this URL’s path.","Change this URL’s port number.","Change this URL’s query string.","Change this URL’s scheme.","Change this URL’s username.","Resolve a URL’s host and port number to <code>SocketAddr</code>.","","","","","Assuming the URL is in the <code>file</code> scheme or similar, convert …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the username for this URL (typically the empty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Equivalent to <code>&quot;prefix_hi&quot;</code> in mozilla::places::HashURL","Equivalent to <code>&quot;prefix_lo&quot;</code> in mozilla::places::HashURL","","","","","","","","","Returns the argument unchanged.","This should return identical results to <code>mozilla::HashString</code>…","This should be identical to the “real” …","This should be identical to the “real” …","Calls <code>U::from(self)</code>.","","","","","","","","Visit timestamps on the server are <em>microseconds</em> since the …","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","We use/abuse the mirror to perform our import, but need to …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","This import is used for iOS users migrating from <code>browser.db</code>…","","Match anywhere in each searchable term without doing any …","","Search through bookmarks.","Match only the beginning of each search term.","Match only the beginning of each search term using a case …","Match on word boundaries in each searchable term.","Match first on word boundaries, and if we do not get …","Search through history.","Search for javascript: urls","","Search for open pages (currently not meaningfully …","Use intersection between history, typed, bookmark, tag and …","Include search suggestions from the currently selected …","","Search through tags.","Search through the title of pages.","Search for typed pages","Search the URL of pages.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","An “observation” based model for updating history. You …","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","From …","","","","","","","","","","","","","","","","","Delete all items in the temp tables we use for staging …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Run maintenance on the places DB (checkpoint step)","Run maintenance on the places DB (optimize step)","Run maintenance on the places DB (prune step)","Run maintenance on the places DB (vacuum step)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Special GUIDs associated with bookmark roots. It’s …","We don’t require bookmark type for updates on the other …","","","Structures which can be used to insert a bookmark, folder …","","","","","","","","","","","","","","","","Structures which can be used to update a bookmark, folder …","","","","Support for modifying bookmarks, including changing the …","","","","Get the URL of the bookmark matching a keyword","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete the specified bookmark. Returns true if a bookmark …","Erases all bookmarks and resets all Sync metadata.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The functions exposed over the FFI use the same type for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets up the syncable roots. All items in …","","Structs we return when reading bookmarks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This is similar to fetch_tree, but does not recursively …","","Call fetch_tree_with_depth with FetchDepth::Deepest. This …","Call fetch_tree with a depth parameter and convert the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the tree starting at the specified guid. Returns a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the RowId of a new visit in moz_historyvisits, or …","Returns the RowId of a new visit in moz_historyvisits, or …","","","","Delete all visits in a date range.","","Deletes all visits for a page given its GUID, creating …","Indicates if and when a URL’s frecency was marked as …","","","","","","","Low level api used to implement both get_visited and the …","Get the set of urls that were visited between <code>start</code> and <code>end</code>…","","Returns the GUID for the specified Url String, or None if …","","","","Returns the GUID for the specified Url, or None if it doesn…","","","","","","Apply history visit from sync. This assumes they have all …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Delete all metadata for the specified place id.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The tag is invalid.","The tag is valid, but normalized to remove leading and …","The original tag is valid.","The validity of a tag.","","","","","Returns the tag string if the tag is valid or normalized, …","","","","Returns the argument unchanged.","Retrieves a list of tags for the specified URL.","Retrieves a list of URLs which have the specified tag.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the original tag is valid; <code>false</code> if it’s …","Remove all tags from the specified URL.","Remove the specified tag from all URLs.","Tags the specified URL.","","","","","Remove the specified tag from the specified URL.","Checks the validity of the specified tag.","","","","Bookmark types.","","","","","","","","","","","","","Re SyncStatus - note that:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,6,7,10,6,7,10,6,0,6,6,10,6,6,7,10,6,7,10,6,0,7,10,6,10,6,10,7,6,10,7,10,6,7,10,6,7,10,6,7,0,7,7,10,6,18,18,0,0,18,18,0,0,0,18,18,0,17,18,19,17,18,19,17,18,19,17,18,19,18,19,18,19,17,18,19,19,17,18,19,19,19,19,19,19,17,18,19,17,0,19,0,17,19,18,19,0,0,19,17,18,19,17,18,19,17,18,19,17,18,19,19,17,18,19,0,0,0,27,27,27,0,24,24,200,24,27,200,24,27,27,27,24,200,24,27,27,27,200,24,27,27,0,24,24,200,24,27,200,24,24,24,24,0,24,24,24,27,24,24,24,27,200,24,27,200,24,27,200,24,27,200,24,27,24,42,0,42,42,42,43,43,42,0,0,43,42,43,42,43,42,43,42,43,42,43,0,42,43,42,43,42,43,42,42,43,42,43,42,43,42,43,42,43,42,43,0,42,43,42,43,42,43,42,43,42,43,42,43,0,0,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,68,0,0,0,68,0,68,0,68,0,68,0,62,62,62,63,64,65,66,67,68,62,63,64,65,66,67,68,65,62,63,64,65,66,67,68,62,63,64,65,66,67,68,63,64,65,66,67,62,63,64,65,66,67,68,62,63,64,65,66,67,68,62,63,64,65,66,67,68,66,62,63,64,65,66,67,68,62,62,63,64,65,66,67,68,68,68,68,68,68,62,62,63,64,65,66,67,62,62,63,64,65,66,67,68,62,63,63,64,65,66,67,63,64,65,66,67,67,68,63,64,65,66,67,62,63,64,65,66,67,68,66,64,63,63,64,65,66,62,63,64,65,66,67,68,62,63,64,65,66,67,68,62,63,64,65,66,67,68,62,63,64,65,66,67,68,68,63,64,65,66,67,63,64,62,63,64,65,66,67,68,0,0,0,0,71,71,71,71,0,71,71,71,71,71,71,71,71,71,71,0,0,0,0,0,0,1,34,34,1,1,82,34,76,78,1,82,34,76,78,1,76,1,1,1,34,78,1,1,82,1,82,34,76,78,1,1,82,82,34,76,78,1,34,76,1,1,82,82,34,76,78,1,82,34,76,78,1,82,34,76,78,1,82,82,34,76,78,1,0,88,87,0,87,0,88,87,87,86,88,87,88,89,0,87,88,0,87,89,88,87,87,87,88,87,89,88,88,88,89,87,86,0,86,0,87,87,86,86,87,87,87,87,86,88,87,90,87,86,87,88,89,90,86,87,88,89,90,86,86,87,87,88,88,89,89,90,90,86,87,87,87,87,87,87,87,87,87,87,87,87,87,88,89,90,87,86,87,88,89,90,86,87,88,89,90,87,86,87,88,89,90,86,87,88,89,90,86,87,88,89,90,86,87,88,89,90,86,87,88,89,90,201,202,203,204,205,206,0,123,0,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,0,0,0,0,0,0,123,0,127,123,0,0,0,123,0,0,0,127,0,123,0,0,123,37,37,60,104,104,60,60,4,37,60,4,74,37,37,37,37,37,37,37,37,37,37,104,74,60,4,37,128,127,122,123,207,111,112,104,74,60,4,37,128,127,122,123,207,111,112,112,4,104,104,104,60,4,111,112,104,60,4,111,112,104,60,4,104,60,104,60,37,37,37,37,60,104,60,4,4,4,104,60,60,60,104,60,60,60,60,60,60,60,60,60,4,111,112,104,60,4,111,112,104,104,74,60,60,4,4,4,122,104,104,104,104,74,60,60,60,60,60,60,60,60,4,37,128,127,122,122,123,123,207,111,112,4,4,60,4,60,60,104,60,4,37,37,37,37,37,37,37,37,37,37,37,4,4,104,60,4,4,4,4,4,4,4,112,74,104,74,60,4,37,128,127,122,123,207,111,112,60,4,60,4,111,111,60,60,60,4,4,37,207,60,37,37,74,60,37,37,37,104,112,4,4,4,4,104,60,4,4,4,4,4,0,37,4,4,111,37,4,37,37,4,4,60,122,37,37,37,37,4,104,60,4,4,4,4,4,4,4,4,4,4,4,4,111,128,122,111,4,104,60,4,111,112,104,60,104,60,4,104,74,60,4,4,37,128,127,122,123,207,111,112,104,74,60,4,37,128,127,122,123,207,111,112,104,74,60,4,37,128,127,122,123,207,111,112,128,122,111,4,4,4,111,104,74,60,4,37,128,127,122,123,207,111,112,37,0,0,155,155,155,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,156,156,0,156,156,156,156,156,156,156,156,0,0,0,156,156,156,156,156,156,0,0,0,121,121,121,121,121,121,121,0,121,121,121,121,121,121,121,121,121,121,121,0,121,121,121,121,121,121,121,0,0,0,0,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,0,0,159,160,159,160,159,160,159,160,159,159,159,160,159,160,159,160,159,160,159,160,160,160,159,160,159,160,160,159,160,159,159,160,159,160,159,160,159,160,160,159,160,0,0,0,0,0,0,0,161,162,143,161,162,143,143,143,143,0,162,161,143,143,161,143,161,162,143,161,162,143,161,143,143,143,0,143,0,143,143,161,162,143,161,162,143,161,162,143,161,162,143,0,0,0,0,0,0,0,165,165,0,164,165,165,165,165,164,164,0,164,164,164,0,164,164,164,164,164,164,164,164,164,164,164,164,164,167,167,165,164,167,165,164,165,164,165,164,164,165,164,164,164,164,164,164,165,164,165,164,164,0,165,164,164,164,164,164,167,165,164,164,164,164,164,164,164,164,164,164,167,165,164,167,164,164,167,164,167,164,164,167,167,164,164,164,164,167,167,165,164,165,164,164,167,165,164,167,165,164,167,165,164,167,164,167,167,167,165,164,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,169,171,170,148,169,171,170,148,169,169,169,169,148,148,169,0,169,169,169,0,169,169,171,170,148,171,169,171,170,148,171,170,169,171,169,171,0,0,169,171,170,148,171,171,170,170,169,171,148,171,0,0,0,0,169,171,171,0,171,169,169,169,169,171,170,148,169,171,170,148,169,171,170,148,171,171,0,171,171,171,169,171,170,148,172,176,181,0,0,0,176,181,0,0,0,0,118,118,177,177,177,118,176,181,172,118,0,118,0,0,0,0,0,118,118,0,0,118,172,173,174,175,176,177,178,179,180,181,109,118,172,173,174,175,176,177,178,179,180,181,109,175,118,172,173,174,175,176,177,178,179,180,181,109,118,172,173,174,175,176,177,178,179,180,181,109,0,173,174,175,177,178,180,0,0,118,118,118,118,109,118,109,0,118,172,173,174,175,176,177,178,179,180,181,109,118,172,173,174,175,176,176,176,176,176,177,178,179,180,181,181,181,181,109,118,118,118,173,174,175,109,118,0,118,172,173,174,175,176,177,178,179,180,181,109,109,0,173,174,175,181,178,179,180,0,173,174,175,109,118,173,174,175,109,173,175,178,180,109,118,172,173,174,175,176,177,178,179,180,181,109,118,172,173,174,175,176,177,178,179,180,181,109,118,172,173,174,175,176,177,178,179,180,181,109,118,172,173,174,175,176,177,178,179,180,181,109,0,0,173,178,109,118,172,173,174,175,176,177,178,179,180,181,109,118,208,209,210,211,212,213,214,215,216,215,0,187,0,0,187,0,0,0,0,187,184,185,186,187,188,189,184,185,186,187,188,189,186,186,184,185,186,187,184,185,186,187,187,184,185,186,186,188,189,0,0,0,0,184,185,186,187,184,185,186,187,187,187,187,188,189,187,184,185,186,184,185,186,187,188,189,187,184,185,186,187,184,185,186,187,184,185,186,0,0,184,186,184,185,186,187,184,185,186,187,188,189,184,185,186,187,188,189,184,185,186,187,188,189,184,184,185,186,187,188,189,217,218,219,182,0,0,190,0,182,0,182,0,190,190,193,191,192,182,190,193,191,192,182,192,182,193,191,192,191,192,182,0,193,191,192,182,190,193,191,192,182,182,182,182,182,193,191,192,0,190,193,191,192,182,193,191,192,182,182,193,192,190,193,191,192,182,190,193,191,192,182,190,193,191,192,182,193,190,193,191,192,182,220,221,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,195,194,195,194,194,194,194,0,0,0,194,195,194,195,194,195,195,194,195,194,195,195,194,194,195,194,195,194,195,195,195,194,194,194,195,0,0,0,0,0,196,196,0,196,124,125,137,126,196,124,125,137,126,196,124,125,137,126,196,124,125,137,126,196,126,0,0,0,0,137,126,196,137,126,196,137,126,196,137,126,124,196,124,125,137,126,0,0,0,0,196,124,125,137,126,125,125,126,0,137,126,125,137,126,125,137,126,196,124,125,137,126,196,126,196,124,125,137,126,196,124,125,137,126,196,124,125,137,126,126,125,137,126,124,137,196,124,125,137,126,197,197,197,0,197,197,197,197,197,197,197,197,197,0,0,197,197,0,0,0,197,197,197,197,0,0,197,15,183,0,15,15,183,15,0,15,199,199,15,15,15,183,0,15,199,0,0,0,129,129,198,15,183,199,129,198,15,183,199,129,198,15,183,199,129,198,15,183,199,198,183,199,183,199,129,129,129,15,129,129,198,15,183,199,129,198,15,183,199,129,129,198,198,15,183,199,129,129,198,15,183,199,129,15,129,183,199,183,129,15,183,199,129,15,183,199,129,129,198,15,183,199,129,129,129,129,129,198,183,199,198,129,15,183,129,129,198,15,183,199,129,15,183,199,198,129,129,198,15,15,183,199,129,198,15,183,199,129,198,15,183,199,129,198,15,183,199],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[4,[[3,[5]]]],[6,6],[[]],0,[[6,6],5],[[],5],[[7,8],9],[[10,8],9],[[6,8],9],[[]],[[]],[[]],[[1,7],3],[[]],[[]],[[]],0,[[6,6],[[12,[11]]]],0,0,[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],0,[[1,4,[12,[4]],15,[12,[6]],5],3],0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[1,16,4],3],[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[18,18],5],[[19,19],5],[[],5],[[],5],[[17,8],9],[[18,8],9],[[19,8],9],0,[[]],[[]],[[]],[20,[[3,[19]]]],[20,[[3,[19]]]],[20,[[3,[19]]]],[20,[[3,[19]]]],0,[[]],[[]],[[]],0,[[1,[21,[16]]],[[3,[[12,[4]]]]]],0,[[1,17],[[3,[[22,[19]]]]]],0,0,[[18,23],13],[[19,23],13],[16],[16],0,[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],0,0,0,0,0,0,0,[24,25],[[24,26,26,26,4],[[25,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[[]],[[24,1],3],0,[[24,16,28],[[3,[29]]]],[[27,27],5],[[],5],[[27,8],9],[[]],[[]],[[]],[30,[[12,[27]]]],[31,[[12,[[33,[32]]]]]],[24,[[3,[[35,[34]]]]]],[[24,26,26,26,4],[[25,[26]]]],[[]],[[]],[[]],0,[[[21,[36]]],[[3,[[35,[24]]]]]],[[24,27],[[25,[[35,[37]]]]]],[16,[[3,[[35,[24]]]]]],[[24,27],[[3,[1]]]],[[[21,[36]]],[[25,[[35,[24]]]]]],[[[35,[24]]]],[24,3],[24,25],[27,38],[[24,39,40],[[3,[41]]]],[[24,39,40],[[3,[29]]]],[[24,39,40],[[3,[29]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[24,3],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[42,42],[43,43],[[]],[[]],[[42,42],11],[[43,43],11],0,[[42,42],5],[[43,43],5],[[],5],[[],5],[[42,8],9],[[43,8],9],[44,42],[[]],[[]],[30,[[3,[42]]]],[30,[[3,[43]]]],[[[0,[45,46]],47],48],[[[0,[45,46]],47],48],[[42,49]],[[43,49]],[[]],[[]],[[42,42],[[12,[11]]]],[[43,43],[[12,[11]]]],0,[[]],[[]],[42,[[51,[50]]]],[43,[[51,[50]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[]],[[]],0,0,0,0,0,[[52,53,54],[[56,[[22,[55]]]]]],[[]],[[]],[52,57],[[]],[[52,53],[[56,[[12,[58]]]]]],[52,[[56,[59]]]],[[]],[[[35,[34]]],[[3,[52]]]],[[52,59],56],[[52,53,[22,[60]]],56],[[52,[22,[61]],54],56],[52,56],[[],13],[[],13],[[],14],[[]],[52,56],0,0,0,0,0,0,0,0,0,0,0,0,[62,60],[62,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[69,[[13,[62]]]],[69,[[13,[63]]]],[69,[[13,[64]]]],[69,[[13,[65]]]],[69,[[13,[66]]]],[69,[[13,[67]]]],[69,[[13,[68]]]],[[62,62],5],[[63,63],5],[[64,64],5],[[65,65],5],[[66,66],5],[[67,67],5],[[68,68],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[62,8],9],[[63,8],9],[[64,8],9],[[65,8],9],[[66,8],9],[[67,8],9],[[68,8],9],[60,62],[[]],[[]],[[]],[[]],[[]],[[]],[65,68],[[]],[67,68],[64,68],[66,68],[63,68],[60,62],[[[0,[45,46]],47],48],0,0,0,0,0,[[62,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,60],0,0,0,0,0,0,0,0,0,0,0,0,[68,62],0,0,0,0,0,[[62,23],13],[[63,23],13],[[64,23],13],[[65,23],13],[[66,23],13],[[67,23],13],[[68,23],13],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[68,70],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[71,3],[71,72],0,[71,72],[[]],[[]],[71,3],[71,3],[71,5],[[],13],[[],13],[[],14],[[]],0,0,0,0,0,0,[1,73],[34,74],[34,[[3,[75]]]],[1,[[3,[75]]]],[1,[[3,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,5],[1,72],[1,27],0,[34,[[77,[1]]]],[78,[[81,[[80,[73,79]]]]]],[1,72],[1],[[82,72],83],[[1,8],9],[[]],[[]],[[]],[[]],[[]],[1,76],[[82,84],83],[[]],[[]],[[]],[[]],[[]],[1,34],[73,76],[1,[[35,[74]]]],[[[21,[36]],27,73,[35,[77]]],[[3,[1]]]],[[82,72,5],83],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[82,84,85],83],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[86,8],9],[[86,8],9],[[87,8],9],[[87,8],9],[[88,8],9],[[88,8],9],[[89,8],9],[[89,8],9],[[90,8],9],[[90,8],9],[[]],[91,87],[[]],[92,87],[90,87],[93,87],[94,87],[95,87],[96,87],[97,87],[88,87],[98,87],[99,87],[89,87],[[]],[[]],[[]],[87,100],[[]],[[]],[[]],[[]],[[]],[101],[101],[101],[101],[101],[87,[[12,[102]]]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[37,26,26],25],[[37,2],25],[60,[[103,[30]]]],[104,48],[104,105],[60,16],[60,[[103,[30]]]],[4,16],[37,74],[60,16],[4,16],[74,[[13,[75,91]]]],[[37,60],[[25,[5]]]],[37,25],[[37,26],[[25,[[22,[106]]]]]],[[37,60,5],[[25,[[12,[106]]]]]],[[37,107],[[25,[[22,[106]]]]]],[[37,60],[[25,[[12,[106]]]]]],[[37,26],[[25,[[12,[4]]]]]],[[37,108],[[25,[60]]]],[[37,26,107],[[25,[[22,[106]]]]]],[[37,109],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,5],[[104,110],[[12,[104]]]],[[104,110],[[12,[104]]]],[104,104],[60,60],[4,4],[111,111],[112,112],[[]],[[]],[[]],[[]],[[]],[[104,104],11],[[60,60],11],[[4,4],11],[113,[[13,[104,114]]]],[113,[[13,[60,114]]]],[[],104],[[],60],[37,25],[[37,26,104],25],[[37,104,104],25],[[37,26],25],[60,16],[69,[[13,[104]]]],[69,[[13,[60]]]],[69,[[13,[4]]]],[69,[[13,[4]]]],[4,[[12,[16]]]],[[104,104],[[12,[110]]]],[[],60],[[],[[116,[115]]]],[[],[[116,[115]]]],[[104,104],5],[[60,60],5],[[60,16],5],[[60,[103,[30]]],5],[[60,16],5],[[60,[22,[30,117]]],5],[[60,[103,[30]]],5],[[60,118],5],[[60,26],5],[[60,118],5],[[4,4],5],[[111,111],5],[[112,112],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[104,8],[[13,[119]]]],[[104,8],[[13,[119]]]],[[74,8],[[13,[119]]]],[[60,8],[[13,[119]]]],[[60,8],[[13,[119]]]],[[4,8],[[13,[119]]]],[[4,8],[[13,[119]]]],[4,[[12,[16]]]],0,[[]],[48,104],[120,104],[121,104],[[]],[118,60],[[]],[26,60],[16,60],[16,60],[[[22,[30,117]]],60],[[[103,[30]]],60],[62,60],[[]],[[]],[[]],[[]],[19,122],[[]],[18,123],[[]],[[]],[[]],[[]],[[[21,[36]]],[[13,[4]]]],[[[21,[36]]],[[13,[4]]]],[[[103,[30]]],60],[16,[[13,[4,99]]]],[26,60],[[[22,[30,117]]],60],[[[0,[45,46]],47],48],[[[0,[45,46]],47],48],[[[0,[45,46]],47],48],[[37,124,107],[[25,[[22,[125]]]]]],[[37,104,104],[[25,[[22,[126]]]]]],[[37,104],[[25,[[22,[126]]]]]],[[37,4],[[25,[[12,[126]]]]]],[[37,107,127],[[25,[[22,[128]]]]]],[[37,129],[[25,[105]]]],[[37,104,104,129],[[25,[[22,[111]]]]]],[[37,105,105,129],[[25,[[22,[111]]]]]],[[37,105,105,105,129],[[25,[112]]]],[[37,[22,[26]]],[[25,[[22,[5]]]]]],[[37,104,104,5],[[25,[[22,[4]]]]]],[4,5],[4,5],[[104,49]],[[60,49]],[[4,49]],[4,[[12,[[130,[16]]]]]],[4,[[12,[16]]]],[[4,[132,[131]]],16],[[4,[133,[131]]],16],[[4,[134,[131]]],16],[[4,135],16],0,[74],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[136,[26]]]],[[],[[136,[26]]]],[60,26],[4,26],0,0,[60,5],[60,5],[30,5],[[4,16],[[13,[4,99]]]],[[4,4],[[12,[26]]]],[[37,26],[[25,[[12,[4]]]]]],0,[[],73],[[37,4,[12,[4]],[12,[26]]],25],[[37,104],25],[72,74],[16,60],[1,37],[37,[[35,[74]]]],[[37,137],25],[[],104],0,[[],138],[4,139],[16,[[13,[4,99]]]],[[16,140],[[13,[4,99]]]],[[104,104],[[12,[11]]]],[[60,60],[[12,[11]]]],[[4,4],[[12,[11]]]],[4,[[12,[16]]]],[4,16],[4,[[12,[[141,[115]]]]]],[4,[[13,[142]]]],0,[[37,26,105],[[25,[143]]]],[4,[[12,[144]]]],[4,[[12,[144]]]],0,[37,25],[4,[[12,[16]]]],[[37,26,107],[[25,[[22,[122]]]]]],[[37,26,107],[[25,[[22,[126]]]]]],[4,145],[4,[[147,[146]]]],[[],60],0,[37,25],[37,25],[[37,85],[[25,[148]]]],[37,25],[4,16],[[104,23],13],[[60,23],13],[[4,23],13],[[4,23],13],[[4,[12,[16]]]],[[4,[12,[16]]],[[13,[99]]]],[[4,149],13],[[4,[12,[16]]],13],[[4,16]],[[4,[12,[144]]],13],[[4,[12,[16]]]],[[4,16],13],[[4,16],13],[[4,150],[[13,[[22,[151,117]],97]]]],0,0,0,0,[4,[[13,[152]]]],[[]],[[]],[[]],[[]],[[]],[104,[[13,[50,93]]]],[60,[[13,[50,93]]]],[[],26],[[],26],[[],26],[[],13],[[],13],[[],13],[16,[[13,[4]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,[4,16],[[],153],[[],154],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[37,25],0,0,0,[[]],[[]],[[72,155,105,[12,[5]]],[[3,[107]]]],[155,155],[[]],[[],155],0,0,0,0,[[155,155],5],[[],5],0,0,[[155,8],9],0,0,0,[[]],[[155,[12,[15]],5,5],107],[[]],0,0,0,0,0,0,0,0,0,0,[[]],[[],13],[[],13],[[],14],0,0,0,[[]],0,0,0,[[]],[[]],[156,156],[[]],[[156,156],5],[[],5],[[156,8],9],[[]],[16,85],[16,48],[[16,156],48],[[]],[[]],[[],13],[[],13],[[],14],[[]],0,0,0,[[]],[[]],[121,121],[[]],[[121,121],11],[[],121],[69,[[13,[121]]]],0,[[121,121],5],[[],5],[[121,8],9],[[121,8],9],[[]],[104,121],[120,121],[[[0,[45,46]],47],48],[[121,49]],[[]],[[121,121],[[12,[11]]]],0,[[121,23],13],[[]],[[],26],[[],13],[[],13],[[],14],[[]],0,0,0,0,[[157,53,54],[[56,[[22,[55]]]]]],[[]],[[]],[157,[[158,[16]]]],0,[[]],[[157,53],[[56,[[12,[58]]]]]],[157,[[56,[59]]]],[[]],[[[35,[34]]],[[3,[157]]]],[[157,59],56],[[157,53,[22,[60]]],56],[[157,[22,[61]],54],56],[157,56],[[],13],[[],13],[[],14],[[]],[157,56],0,0,[[]],[[]],[[]],[[]],[159,159],[160,160],[[]],[[]],0,[[],159],[69,[[13,[159]]]],[69,[[13,[160]]]],[[159,159],5],[[160,160],5],[[],5],[[],5],[[159,8],9],[[160,8],9],[[]],[[]],0,0,[[]],[[]],[[159,23],13],[[160,23],13],0,[[]],[[]],0,[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,[[]],[[]],0,0,0,0,0,0,[[1,4,16],[[3,[161]]]],[[]],[[]],[[]],[[]],[[]],[[]],[143,143],[[]],[[],143],[72,3],[162,104],[161],[[143,143],5],[[],5],[161,3],[[143,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[1,26],161],0,0,0,[[1,16],[[3,[85]]]],[[143,23],13],0,[[]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[]],[[]],[[]],[163,[[51,[104]]]],[163,[[51,[104]]]],[163,[[51,[[12,[26]]]]]],[163,[[51,[[12,[26]]]]]],0,0,[[1,[21,[36]],105],[[3,[143]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],164],[[],164],[[164,164],164],[[164,164]],[[164,164],164],[[164,164]],[164,85],[[164,164],164],[[164,164]],0,[[]],[[]],[[]],[[]],[[]],[[]],[165,165],[164,164],[[]],[[]],[[164,164],11],[113,[[166,[165]]]],[113,[[166,[164]]]],[164,164],[[164,164],5],[[],164],[[164,164],164],[[],164],[[165,165],5],[[164,164],5],[[],5],[[],5],[[164,140]],[[16,16,5],5],[[165,8],9],[[164,8],9],[[164,8],9],[[164,8],9],[[164,8],9],[[164,8],9],[[]],[[]],[[]],[85,[[12,[164]]]],[85,164],[85,164],[140,164],[[[0,[45,46]],47],48],[[164,49]],[[164,164]],[[164,164],164],[[164,164],5],[[]],[[]],[[]],[167,5],[164,5],[164,5],0,[164,164],0,[[164,164],[[12,[11]]]],[[164,164]],0,0,[[164,164,5]],[[164,164],164],[[164,164]],[[164,164],164],0,0,[[]],[[]],[165,[[51,[50]]]],[164,[[51,[50]]]],[[164,164]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],0,[[164,164],164],0,0,[[]],[[]],[[]],0,0,[[]],[[]],[2,2],[[]],[[2,8],9],[[]],[2,5],[2,5],[[]],0,0,0,0,[4,2],0,0,0,[[]],[[],13],[[],13],[[],14],0,0,[[]],[[2,[168,[[12,[104]]]]],2],[[2,[168,[[12,[5]]]]],2],[[2,[168,[[12,[5]]]]],2],[[2,[168,[[12,[5]]]]],2],[[2,[168,[[12,[5]]]]],2],[[2,[168,[[12,[4]]]]],2],[[2,[168,[[12,[4]]]]],2],[[2,[168,[[12,[26]]]]],2],[[2,[168,[[12,[15]]]]],2],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[169,169],[[]],[[169,169],11],[113,[[166,[169]]]],0,0,[[],169],[1,3],[69,[[13,[169]]]],[[169,169],5],[[],5],[[1,4],[[3,[[12,[170]]]]]],[[169,8],9],[[169,8],9],[[171,8],9],[[170,8],9],[[148,8],9],0,[[]],[[]],[[]],[[]],[20,[[3,[171]]]],[20,[[3,[170]]]],[[[0,[45,46]],47],48],0,[[169,49]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[169,169],[[12,[11]]]],0,0,0,[1,3],[1,3],[[1,85],[[3,[148]]]],[1,3],[[169,23],13],0,0,0,0,[[]],[169,[[51,[50]]]],[[],26],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],0,0,[[1,75],3],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[118,60],[118,16],0,[[1,16],[[3,[[12,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[118,118],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[109,109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[72,51],0,0,0,[[],177],[[],178],[[],180],[[1,60],[[3,[5]]]],[1,3],[[118,60],5],[[118,118],5],[[118,60],5],[[118,16],5],[[109,109],5],[[],5],[[],5],0,[[118,8],9],[[172,8],9],[[173,8],9],[[174,8],9],[[175,8],9],[[176,8],9],[[177,8],9],[[178,8],9],[[179,8],9],[[180,8],9],[[181,8],9],[[109,8],9],[[]],[[]],[[]],[[]],[[]],[173,176],[[]],[182,176],[174,176],[175,176],[[]],[[]],[[]],[[]],[178,181],[179,181],[[]],[180,181],[[]],[60,[[12,[118]]]],[[[0,[45,46]],47],48],[118,60],0,0,0,0,[[118,49]],[[1,176],[[3,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[109,183],3],0,0,0,0,[181,177],0,0,0,[[[12,[16]]],[[12,[16]]]],0,0,0,0,[[118,118],[[12,[11]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[1,60,181],3],[[1,109],3],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,[[12,[118]]]],0,0,0,0,0,0,0,0,0,0,[72,51],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[184,184],[185,185],[186,186],[187,187],[[]],[[]],[[]],[[]],[187,104],0,0,0,[[],186],[188,26],[189,26],[[1,60,5],[[3,[[12,[187]]]]]],[[1,4],[[3,[[22,[184]]]]]],[[1,60],[[3,[[12,[187]]]]]],[[1,60,190],[[3,[[12,[187]]]]]],[[184,8],9],[[185,8],9],[[186,8],9],[[187,8],9],[[]],[[]],[[]],[185,187],[186,187],[184,187],[[]],[[]],[[]],[187,60],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[187,104],0,0,0,[187,[[12,[60]]]],0,0,0,[187,85],0,0,0,[[1,85],[[3,[[22,[184]]]]]],[[1,16,85],[[3,[[22,[184]]]]]],0,0,[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[182],0,0,0,[[],191],[[],192],[69,[[13,[182]]]],[[1,60,190],[[3,[12]]]],[[193,8],9],[[191,8],9],[[192,8],9],[[182,8],9],[[]],[[]],[[]],[[]],[191,182],[[]],[192,182],[193,182],[182,60],0,0,0,[[1,192],3],[[]],[[]],[[]],[[]],[[]],0,0,0,[182,183],[[182,23],13],0,0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[1,2],[[3,[[12,[169]]]]]],[[1,2],[[3,[[12,[169]]]]]],[1,3],[[1,4,104],3],[[1,16,104],3],[[1,104,104],3],[[1,104,104],3],[[1,60],3],[[1,4],[[3,[[12,[104]]]]]],[[1,107,105],[[3,[[22,[128]]]]]],[[1,129],[[3,[105]]]],[[1,104,104,129],[[3,[[22,[111]]]]]],[[1,105,105,129],[[3,[[22,[111]]]]]],[[1,105,105,105,129],[[3,[112]]]],[[1,140],[[3,[[22,[5]]]]]],[[1,103,[103,[5]]],3],[[1,104,104,5],[[3,[[22,[26]]]]]],0,[[1,16],[[3,[[12,[60]]]]]],[1,3],[1,3],[[1,169,[12,[5]]],3],[[1,4],[[3,[[12,[60]]]]]],[1,3],0,0,[[1,60],3],[[1,60],3],[[1,60,4,[12,[26]],[103,[159]],70],3],[[]],[[]],[[]],[[]],[194,194],[[]],[[194,194],5],[[],5],[[1,73,73],[[3,[[22,[55]]]]]],[[1,4,73],[[3,[12]]]],[1,3],[[194,8],9],[[195,8],9],[[]],[[]],[20,[[3,[194]]]],[20,[[3,[195]]]],0,[[]],[[]],0,0,0,[[]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[1,137],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[196,196],[124,124],[125,125],[137,137],[126,126],[[]],[[]],[[]],[[]],[[]],[113,[[166,[196]]]],0,[[1,169],3],[[1,105,105],3],[[1,4,[12,[4]],[12,[16]]],3],[[1,105],3],0,0,[[196,196],5],[[137,137],5],[[126,126],5],[[],5],[[],5],[[],5],[[196,8],9],[[137,8],9],[[126,8],9],0,[[]],[[]],[[]],[[]],[[]],[[1,105,105],[[3,[[22,[126]]]]]],[[1,124,107],[[3,[[22,[125]]]]]],[[1,4],[[3,[[12,[126]]]]]],[[1,105],[[3,[[22,[126]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[1,16,107],[[3,[[22,[126]]]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[196,[[51,[50]]]],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[197,197],[[]],[197,[[3,[16]]]],[[197,197],5],[[],5],[[197,8],9],[[]],[[1,4],[[3,[[22,[26]]]]]],[[1,16],[[3,[[22,[4]]]]]],[[]],[197,5],[[1,4],3],[[1,16],3],[[1,4,16],3],[[]],[[],13],[[],13],[[],14],[[1,4,16],3],[16,197],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],129],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,129],[198,198],[15,15],[183,183],[199,199],[[]],[[]],[[]],[[]],[[]],[[198,198],11],[[183,183],11],[[199,199],11],[113,[[166,[183]]]],[113,[[166,[199]]]],[129,129],[[129,15],5],[[],129],[69,[[13,[15]]]],[[],129],[[129,129],5],[[198,198],5],[[15,15],5],[[183,183],5],[[199,199],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[129,140]],[[129,8],9],[[198,8],9],[[198,8],9],[[15,8],9],[[183,8],9],[[199,8],9],[[[103,[15]]],129],[[]],[[]],[[]],[[]],[[]],[140,129],[30,[[12,[15]]]],[144,[[13,[129,198]]]],[30,[[12,[183]]]],[30,199],[[30,150],183],[[[0,[45,46]],47],48],[[[0,[45,46]],47],48],[[[0,[45,46]],47],48],[[[0,[45,46]],47],48],[[129,49]],[[15,49]],[[183,49]],[[199,49]],[[129,15]],[[]],[[]],[[]],[[]],[[]],0,[129,144],[129,5],[129,73],[[],129],[[198,198],[[12,[11]]]],[[183,183],[[12,[11]]]],[[199,199],[[12,[11]]]],[101],[[129,15]],[[15,23],13],[[183,23],13],[15,129],[[]],[[]],[[]],[[]],[[]],[129,[[51,[50]]]],[15,[[51,[50]]]],[183,[[51,[50]]]],[199,[[51,[50]]]],[[],26],[[],13],[144,[[13,[129,198]]]],[[],13],[30,[[13,[15]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[]],[[]],[[]],[[]],[[]]],"c":[898],"p":[[3,"PlacesDb"],[3,"VisitObservation"],[6,"Result"],[3,"Url"],[15,"bool"],[4,"RedirectSourceType"],[3,"AddablePlaceInfo"],[3,"Formatter"],[6,"Result"],[3,"AddableVisit"],[4,"Ordering"],[4,"Option"],[4,"Result"],[3,"TypeId"],[4,"VisitTransition"],[15,"str"],[3,"SearchParams"],[4,"MatchReason"],[3,"SearchResult"],[3,"Row"],[8,"AsRef"],[3,"Vec"],[8,"Serializer"],[3,"PlacesApi"],[6,"ApiResult"],[3,"String"],[4,"ConnectionType"],[8,"FnOnce"],[3,"SyncTelemetryPing"],[15,"u8"],[4,"SyncEngineId"],[8,"SyncEngine"],[3,"Box"],[3,"SharedPlacesDb"],[3,"Arc"],[3,"Path"],[3,"PlacesConnection"],[3,"OpenFlags"],[3,"Sync15StorageClientInit"],[3,"KeyBundle"],[3,"SyncResult"],[4,"SyncedBookmarkKind"],[4,"SyncedBookmarkValidity"],[4,"Kind"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"ToSqlOutput"],[6,"Result"],[3,"BookmarksSyncEngine"],[3,"ServerTimestamp"],[3,"Engine"],[3,"OutgoingBso"],[6,"Result"],[6,"CollectionName"],[3,"CollectionRequest"],[4,"EngineSyncAssociation"],[3,"Guid"],[3,"IncomingBso"],[3,"BookmarkRecordId"],[3,"BookmarkRecord"],[3,"QueryRecord"],[3,"FolderRecord"],[3,"LivemarkRecord"],[3,"SeparatorRecord"],[4,"BookmarkItemRecord"],[8,"Deserializer"],[6,"UnknownFields"],[3,"PlacesTransaction"],[3,"Connection"],[15,"usize"],[3,"SqlInterruptHandle"],[3,"SqlInterruptScope"],[3,"GlobalChangeCounterTracker"],[6,"Mutex"],[3,"GLOBAL_BOOKMARK_CHANGE_COUNTERS"],[3,"AtomicI64"],[3,"HashMap"],[3,"RwLock"],[3,"PlacesInitializer"],[6,"Result"],[3,"Transaction"],[15,"u32"],[4,"PlacesApiError"],[4,"Error"],[4,"InvalidPlaceInfo"],[4,"Corruption"],[4,"InvalidMetadataObservation"],[3,"Interrupted"],[3,"Error"],[4,"Error"],[3,"Utf8Error"],[3,"Error"],[4,"Error"],[3,"Error"],[4,"Error"],[4,"ParseError"],[3,"ErrorHandling"],[3,"Demand"],[8,"Error"],[15,"slice"],[3,"PlacesTimestamp"],[15,"i64"],[6,"BookmarkItem"],[15,"i32"],[6,"InsertableBookmarkItem"],[3,"BookmarkUpdateInfo"],[3,"Duration"],[3,"HistoryVisitInfo"],[3,"HistoryVisitInfosWithBound"],[4,"ValueRef"],[4,"FromSqlError"],[15,"char"],[8,"FromIterator"],[3,"Global"],[4,"BookmarkRootGuid"],[3,"Error"],[3,"SystemTime"],[3,"ServerVisitTimestamp"],[3,"SearchResult"],[4,"MatchReason"],[3,"HistoryHighlightWeights"],[3,"HistoryHighlight"],[3,"HistoryMetadata"],[4,"FrecencyThresholdOption"],[3,"TopFrecentSiteInfo"],[3,"VisitTransitionSet"],[4,"Host"],[4,"Position"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"RangeFull"],[4,"Resettable"],[3,"HistoryMetadataObservation"],[3,"ParseOptions"],[4,"Origin"],[8,"IntoIterator"],[3,"Split"],[3,"PathSegmentsMut"],[3,"HistoryMigrationResult"],[15,"u16"],[3,"Parse"],[3,"UrlQuery"],[3,"Serializer"],[3,"RunMaintenanceMetrics"],[4,"IpAddr"],[8,"Fn"],[4,"SocketAddr"],[3,"PathBuf"],[3,"Utf16CharDecoder"],[3,"Utf8CharDecoder"],[3,"FrecencySettings"],[4,"PrefixMode"],[3,"HistorySyncEngine"],[4,"Cow"],[3,"HistoryRecordVisit"],[3,"HistoryRecord"],[3,"ExecuteOnDrop"],[3,"NOW"],[3,"Context"],[3,"SearchBehavior"],[4,"MatchBehavior"],[6,"FromSqlResult"],[3,"AutocompleteMatch"],[8,"Into"],[3,"RowId"],[3,"FetchedPageInfo"],[3,"PageInfo"],[4,"BookmarkPosition"],[3,"InsertableBookmark"],[3,"InsertableSeparator"],[3,"InsertableFolder"],[4,"InsertableItem"],[4,"UpdateTreeLocation"],[3,"UpdatableBookmark"],[3,"UpdatableSeparator"],[3,"UpdatableFolder"],[4,"UpdatableItem"],[4,"BookmarkTreeNode"],[4,"BookmarkType"],[3,"BookmarkData"],[3,"Separator"],[3,"Folder"],[4,"Item"],[3,"SEARCH_QUERY"],[3,"RECENT_BOOKMARKS_QUERY"],[4,"FetchDepth"],[3,"SeparatorNode"],[3,"FolderNode"],[3,"BookmarkNode"],[3,"FetchedVisit"],[3,"FetchedVisitPage"],[4,"DocumentType"],[4,"ValidatedTag"],[3,"InvalidVisitType"],[4,"SyncStatus"],[3,"SyncState"],[13,"UnexpectedPlacesException"],[13,"UrlParseFailed"],[13,"PlacesConnectionBusy"],[13,"OperationInterrupted"],[13,"UnknownBookmarkItem"],[13,"InvalidBookmarkOperation"],[3,"Dummy"],[13,"Specific"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Parent"],[13,"Position"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"],[13,"Bookmark"],[13,"Folder"],[13,"Separator"]]},\
"protobuf_gen":{"doc":"","t":"DLLLMLLLFMLLL","n":["ProtobufOpts","borrow","borrow_mut","deserialize","dir","fmt","from","into","main","out_dir","try_from","try_into","type_id"],"q":[[0,"protobuf_gen"]],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,2,2,2,2,2,2,2,0,2,2,2,2],"f":[0,[[]],[[]],[1,[[3,[2]]]],0,[[2,4],5],[[]],[[]],[[]],0,[[],3],[[],3],[[],6]],"c":[],"p":[[8,"Deserializer"],[3,"ProtobufOpts"],[4,"Result"],[3,"Formatter"],[6,"Result"],[3,"TypeId"]]},\
"push":{"doc":"Rust Push Component","t":"NNGNENNNNNNNNNDNEDEEDDNNNNNDDNNNNMLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLMLMLLLLLLLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLM","n":["Adm","AlreadyRegisteredError","ApiResult","Apns","BridgeType","CommunicationError","CommunicationServerError","CryptoError","Fcm","GeneralError","Http","Https","InternalError","JSONDeserializeError","KeyInfo","OpenDatabaseError","PushApiError","PushConfiguration","PushError","PushHttpProtocol","PushManager","PushSubscriptionChanged","RecordNotFoundError","RecordNotFoundError","RequestError","StorageError","StorageSqlError","SubscriptionInfo","SubscriptionResponse","TranscodingError","UAIDNotRecognizedError","UAIDNotRecognizedError","UrlParseError","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridge_type","channel_id","channel_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","database_path","decrypt","default","endpoint","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_error_handling","get_subscription","http_protocol","into","into","into","into","into","into","into","into","into","into","keys","new","p256dh","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","provide","provide","scope","sender_id","server_host","source","subscribe","subscription_info","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe","unsubscribe_all","update","verify_connection","verify_connection_rate_limiter"],"q":[[0,"push"]],"d":["","Channel is already registered, generate new channelID","","","The types of supported native bridges.","A Client communication error","An error returned from the registration Server","","","An unspecified general error has occured","","","Internal Error","A failure deserializing json.","Key Information that can be used to encrypt payloads","Was unable to open the database","","","","","Object representing the PushManager used to manage …","An dictionary describing the push subscription that …","Record not found for the given chid","","Was unable to send request to server","An error with Storage","A failure to encode data to/from storage.","Subscription Information, the endpoint to send push …","The subscription response object returned from …","","The UAID was not recognized by the server","The UAID was not recognized by the server","A failure to parse a URL.","","","","","","","","","","","","","","","","","","","","","","bridge protocol (“fcm”)","","","","","","","","","","","","","","","","","","","","","","OS Path to the database","Decrypts a raw push message.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Retrieves an existing push subscription","http protocol (for mobile, bridged connections “https”)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new <code>PushManager</code> object, not subscribed to any …","","","","","","","","","","Sender/Application ID value","host name:port","","Subscribes to a new channel and gets the Subscription Info …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe from given channelID, ending that subscription …","Unsubscribe all channels for the user","Updates the Native OS push registration ID.","Verifies the connection state","Number of seconds between to rate limit the verify …"],"i":[1,17,0,1,0,17,17,17,1,17,3,3,16,17,0,17,0,0,0,0,0,0,16,17,17,17,17,0,0,17,16,17,17,4,9,1,2,3,16,17,4,5,6,7,9,1,2,3,16,17,4,5,6,7,2,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,3,4,5,6,2,9,3,5,1,3,4,5,6,1,3,4,5,6,1,1,2,3,3,16,16,17,17,4,5,6,7,9,1,2,3,16,17,17,17,17,17,17,17,17,17,4,5,6,7,3,17,9,2,9,1,2,3,16,17,4,5,6,7,5,9,4,1,3,4,5,6,16,17,7,2,2,17,9,6,1,2,3,4,5,6,7,1,3,16,17,9,1,2,3,16,17,4,5,6,7,9,1,2,3,16,17,4,5,6,7,9,1,2,3,16,17,4,5,6,7,9,9,9,9,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],0,[[9,[11,[10,10]]],[[12,[0]]]],[[],3],0,[[1,1],13],[[3,3],13],[[4,4],13],[[5,5],13],[[6,6],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[1,14],15],[[1,14],15],[[2,14],15],[[3,14],15],[[3,14],15],[[16,14],15],[[16,14],15],[[17,14],15],[[17,14],15],[[4,14],15],[[5,14],15],[[6,14],15],[[7,14],15],[[]],[[]],[[]],[[]],[[]],[18,17],[19,17],[[]],[20,17],[21,17],[22,17],[23,17],[24,17],[25,17],[[]],[[]],[[]],[[]],[26,[[27,[3]]]],[17,28],[[9,26],[[12,[[29,[6]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[2,[[12,[9]]]],0,[[1,1],[[29,[8]]]],[[3,3],[[29,[8]]]],[[4,4],[[29,[8]]]],[[5,5],[[29,[8]]]],[[6,6],[[29,[8]]]],[30],[30],0,0,0,[17,[[29,[31]]]],[[9,26,[29,[10]]],[[12,[6]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[],32],[[9,26],[[12,[13]]]],[9,12],[[9,26],12],[[9,13],[[12,[[33,[7]]]]]],0],"c":[],"p":[[4,"BridgeType"],[3,"PushConfiguration"],[4,"PushHttpProtocol"],[3,"KeyInfo"],[3,"SubscriptionInfo"],[3,"SubscriptionResponse"],[3,"PushSubscriptionChanged"],[4,"Ordering"],[3,"PushManager"],[3,"String"],[3,"HashMap"],[6,"ApiResult"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"PushApiError"],[4,"PushError"],[6,"Error"],[3,"Error"],[4,"Error"],[4,"ParseError"],[4,"Error"],[4,"DecodeError"],[4,"Error"],[4,"Error"],[15,"str"],[4,"Result"],[3,"ErrorHandling"],[4,"Option"],[3,"Demand"],[8,"Error"],[3,"TypeId"],[3,"Vec"]]},\
"rc_crypto":{"doc":"","t":"NNNNNNDENNNGNNNAALLLLLAAACAFLLLLLLLLLLLCAALLLALLAALLLLLLLLLHHDDHDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLDEHHDDGDDINNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFEDNNLLLLLLFLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLFFFDDDLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLFFENNLLLLFLLLLLLLFHHDDLLLLLLLLLLLLLLLLLL","n":["CertificateChainError","CertificateContentError","CertificateIssuerError","CertificateSubjectError","CertificateValidityError","ConversionError","Error","ErrorKind","InternalError","NSSError","PEMFormatError","Result","RootHashFormatError","SignatureContentError","SignatureMismatchError","aead","agreement","backtrace","borrow","borrow","borrow_mut","borrow_mut","constant_time","contentsignature","digest","ece","ece_crypto","ensure_initialized","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hawk","hkdf","hmac","into","into","kind","pbkdf2","provide","provide","rand","signature","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AES_128_GCM","AES_256_GCM","Aad","Algorithm","LEGACY_SYNC_AES_256_CBC_HMAC_SHA256","Nonce","OpeningKey","SealingKey","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","empty","from","from","from","from","from","from","into","into","into","into","into","key_len","new","new","nonce_len","open","seal","tag_len","try_assume_unique_for_key","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Algorithm","Curve","ECDH_P256","ECDH_P384","EcKey","Ephemeral","EphemeralKeyPair","InputKeyMaterial","KeyPair","Lifetime","P256","P384","PrivateKey","PublicKey","Static","UnparsedPublicKey","_tests_only_dangerously_convert_to_ephemeral","agree","agree_static","algorithm","algorithm","algorithm","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone_into","clone_into","compute_public_key","curve","derive","deserialize","deserialize","eq","eq","equivalent","equivalent","export","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_coordinates","from_private_key","generate","get_field_len","import","into","into","into","into","into","into","into","into","into","into","new","new","private_key","private_key","public_key","public_key","serialize","serialize","split","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_slices_are_equal","verify","Algorithm","Digest","SHA256","SHA384","algorithm","as_ref","borrow","borrow_mut","clone","clone_into","digest","encode_hex","encode_hex_upper","from","into","measure_with","to_owned","try_from","try_into","type_id","RcCryptoLocalKeyPair","RcCryptoRemotePublicKey","as_any","as_any","as_raw","borrow","borrow","borrow_mut","borrow_mut","from","from","from_raw","from_raw_components","generate_random","into","into","pub_as_raw","raw_components","try_from","try_from","try_into","try_into","type_id","type_id","expand","extract","extract_and_expand","Signature","SigningKey","VerificationKey","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","digest_algorithm","digest_algorithm","encode_hex","encode_hex_upper","from","from","from","into","into","into","measure_with","new","new","sign","sign","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","verify_with_own_key","HashAlgorithm","SHA256","SHA384","borrow","borrow_mut","clone","clone_into","derive","fmt","from","into","to_owned","try_from","try_into","type_id","fill","ECDSA_P256_SHA256","ECDSA_P384_SHA384","UnparsedPublicKey","VerificationAlgorithm","algorithm","borrow","borrow","borrow_mut","borrow_mut","bytes","from","from","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","verify"],"q":[[0,"rc_crypto"],[59,"rc_crypto::aead"],[114,"rc_crypto::agreement"],[241,"rc_crypto::constant_time"],[242,"rc_crypto::contentsignature"],[243,"rc_crypto::digest"],[263,"rc_crypto::ece_crypto"],[287,"rc_crypto::hkdf"],[290,"rc_crypto::hmac"],[329,"rc_crypto::pbkdf2"],[344,"rc_crypto::rand"],[345,"rc_crypto::signature"]],"d":["","","","","","","","","","","","","","","","This crate provides all the cryptographic primitives …","","","","","","","","","","","","Only required to be called if you intend to use this …","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","AES-128 in GCM mode with 128-bit tags and 96 bit nonces.","AES-256 in GCM mode with 128-bit tags and 96 bit nonces.","The additional authenticated data (AAD) for an opening or …","","AES-256 in CBC mode with HMAC-SHA256 tags and 128 bit …","The nonce for an opening or sealing operation. This is a …","","","The key’s AEAD algorithm.","The key’s AEAD algorithm.","","","","","","","","","","","Construct an empty <code>Aad</code>.","Construct the <code>Aad</code> by borrowing a contiguous sequence of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The length of the key.","Create a new opening key.","Create a new sealing key.","The length of the nonces.","","","The length of a tag.","","","","","","","","","","","","","","","","","A key agreement algorithm.","","","","","The key may be used at most once.","","The result of a key agreement operation, to be fed into a …","A key pair for key agreement.","How many times the key may be used.","","","A private key for key agreement.","A public key for key agreement.","The key may be used more than once.","An unparsed public key for key agreement.","The whole point of having <code>Ephemeral</code> and <code>Static</code> lifetimes …","Ephemeral agreement. This consumes <code>self</code>, ensuring that the …","Static agreement. This borrows <code>self</code>, allowing the private …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>kdf</code> with the raw key material and then returns what …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Generate a new key pair for the given algorithm.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The private key.","","The public key.","","","","Split the key pair apart.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Ok(())</code> if <code>a == b</code> and <code>Error</code> otherwise. The …","Verify that the signature matches the input data.","","A calculated digest value.","","","","","","","","","Returns the digest of data using the given digest …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A calculated signature value. This is a type-safe wrappper …","A key to use for HMAC signing.","A key to use for HMAC authentication.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Calculate the HMAC of <code>data</code> using <code>key</code>.","","","","","","","","","","","","Calculate the HMAC of <code>data</code> using <code>key</code> and verify it …","Equivalent to <code>verify</code> but allows the consumer to pass a …","","","","","","","","Extend passwords using pbkdf2, based on the following rfc …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Fill a buffer with cryptographically secure pseudo-random …","","","An unparsed public key for signature operations.","A signature verification algorithm.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[5,5,5,5,5,5,0,0,5,5,5,0,5,5,5,0,0,1,5,1,5,1,0,0,0,0,0,0,5,5,1,1,5,5,5,1,1,1,1,0,0,0,5,1,1,0,5,1,0,0,5,5,1,5,1,5,1,5,1,0,0,0,0,0,0,0,0,15,17,18,23,15,17,16,18,23,15,17,16,18,18,18,23,15,17,16,18,23,15,17,16,16,15,17,16,0,0,16,23,18,23,15,17,16,18,23,15,17,16,18,23,15,17,16,0,0,0,0,0,0,0,0,0,0,33,33,0,0,0,0,26,26,26,31,29,26,27,25,39,31,29,26,30,33,32,34,27,25,39,31,29,26,30,33,32,34,29,33,34,33,34,26,34,30,33,34,33,32,33,32,26,33,34,27,25,39,39,31,29,26,30,33,32,34,34,39,39,33,26,27,25,39,31,29,26,30,33,32,34,29,34,39,34,39,34,33,34,39,31,33,34,27,25,39,31,29,26,30,33,32,34,27,25,39,31,29,26,30,33,32,34,27,25,39,31,29,26,30,33,32,34,0,0,0,0,45,45,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,44,0,0,48,50,50,48,50,48,50,48,50,50,48,48,48,50,48,48,48,50,48,50,48,50,0,0,0,0,0,0,54,53,55,54,53,55,54,54,54,53,55,54,54,53,55,54,53,55,54,54,53,55,0,53,54,53,55,54,53,55,54,53,55,54,0,0,0,45,45,45,45,45,45,0,45,45,45,45,45,45,45,0,0,0,0,0,57,58,57,58,57,57,58,57,58,57,57,58,57,58,57,58,57,57],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[5,6],7],[[5,6],7],[[1,6],7],[[1,6],7],[[]],[8,5],[9,5],[[]],[8,1],[9,1],[5,1],0,0,0,[[]],[[]],[1,5],0,[10],[10],0,0,[5,[[4,[11]]]],[[],12],[[],12],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],0,0,0,0,0,0,0,0,[15,16],[17,16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[[20,[19]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,21],[[16,[20,[19]]],[[22,[15]]]],[[16,[20,[19]]],[[22,[17]]]],[16,21],[[15,23,18,[20,[19]]],[[22,[[24,[19]]]]]],[[17,23,18,[20,[19]]],[[22,[[24,[19]]]]]],[16,21],[[16,[20,[19]]],[[22,[23]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[26,[25]]],[[26,[27]]]],[[[26,[28]],29],[[22,[30]]]],[[[26,[25]],29],[[22,[30]]]],[31,32],[29,32],[[[26,[28]]],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,[[20,[19]]]],[33,33],[34,34],[[]],[[]],[[[26,[28]]],[[22,[31]]]],[34,33],[[30,35]],[36,[[13,[33]]]],[36,[[13,[34]]]],[[33,33],37],[[32,32],37],[[],37],[[],37],[[[26,[25]]],[[22,[34]]]],[[33,6],[[13,[38]]]],[[34,6],[[13,[38]]]],[[]],[[]],[[[26,[25]]],[[22,[[39,[25]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,[20,[19]],[20,[19]],[20,[19]]],[[13,[34,9]]]],[[[26,[28]]],[[22,[[39,[28]]]]]],[32,[[22,[[39,[28]]]]]],[33,40],[34,[[22,[[26,[25]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[32,[20,[19]]],29],[[33,[20,[19]],[20,[19]]],34],[[[39,[28]]],[[26,[28]]]],[34,[[20,[19]]]],[[[39,[28]]],31],[34,[[20,[19]]]],[[33,41],13],[[34,41],13],[[[39,[28]]]],[31,[[22,[[24,[19]]]]]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[[20,[19]],[20,[19]]],22],[[[20,[19]],[20,[19]],[20,[19]],42,43,43],22],0,0,0,0,[44,45],[44,[[20,[19]]]],[[]],[[]],[44,44],[[]],[[45,[20,[19]]],[[22,[44]]]],[[],[[47,[46]]]],[[],[[47,[46]]]],[[]],[[]],[[],21],[[]],[[],13],[[],13],[[],14],0,0,[48,49],[50,49],[50,[[13,[[24,[19]],51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[19]]],[[13,[50,51]]]],[52,[[13,[48,51]]]],[[],[[13,[48,51]]]],[[]],[[]],[48,[[13,[[24,[19]],51]]]],[48,[[13,[52,51]]]],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[53,[20,[19]],[20,[19]]],22],[[53,[20,[19]]],[[22,[53]]]],[[53,[20,[19]],[20,[19]],[20,[19]]],22],0,0,0,[54,[[20,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[54,54],[[]],[53,45],[55,45],[[],[[47,[46]]]],[[],[[47,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[45,[20,[19]]],53],[[45,[20,[19]]],55],[[53,[20,[19]]],[[22,[54]]]],[[53,[20,[19]]],[[13,[[24,[19]],56]]]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[],14],[[55,[20,[19]],[20,[19]]],22],[[53,[20,[19]],[20,[19]]],22],0,0,0,[[]],[[]],[45,45],[[]],[[[20,[19]],[20,[19]],40,45,[20,[19]]],22],[[45,6],[[13,[38]]]],[[]],[[]],[[]],[[],13],[[],13],[[],14],[[[20,[19]]],22],0,0,0,0,[57,58],[[]],[[]],[[]],[[]],[57,[[20,[19]]]],[[]],[[]],[[]],[[]],[[58,[20,[19]]],57],[[],13],[[],13],[[],13],[[],13],[[],14],[[],14],[[57,[20,[19]],[20,[19]]],22]],"c":[],"p":[[3,"Error"],[3,"Backtrace"],[3,"Mutex"],[4,"Option"],[4,"ErrorKind"],[3,"Formatter"],[6,"Result"],[3,"TryFromIntError"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"OpeningKey"],[3,"Algorithm"],[3,"SealingKey"],[3,"Aad"],[15,"u8"],[15,"slice"],[15,"usize"],[6,"Result"],[3,"Nonce"],[3,"Vec"],[3,"Static"],[3,"PrivateKey"],[3,"Ephemeral"],[8,"Lifetime"],[3,"UnparsedPublicKey"],[3,"InputKeyMaterial"],[3,"PublicKey"],[3,"Algorithm"],[4,"Curve"],[3,"EcKey"],[8,"FnOnce"],[8,"Deserializer"],[15,"bool"],[3,"Error"],[3,"KeyPair"],[15,"u32"],[8,"Serializer"],[15,"u64"],[15,"str"],[3,"Digest"],[4,"HashAlgorithm"],[15,"char"],[8,"FromIterator"],[3,"RcCryptoLocalKeyPair"],[8,"Any"],[3,"RcCryptoRemotePublicKey"],[4,"Error"],[3,"EcKeyComponents"],[3,"SigningKey"],[3,"Signature"],[3,"VerificationKey"],[4,"CryptoError"],[3,"UnparsedPublicKey"],[3,"VerificationAlgorithm"]]},\
"rc_log_ffi":{"doc":"This crate allows users from the other side of the FFI to …","t":"NNNENNALLLLLLLLLLFFFFFLLLLDGDLLLLLLLLLLLLLLLLLLLLL","n":["DEBUG","ERROR","INFO","LogLevel","VERBOSE","WARN","android","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from","into","rc_log_adapter_create","rc_log_adapter_destroy","rc_log_adapter_destroy_string","rc_log_adapter_set_max_level","rc_log_adapter_test__log_msg","to_owned","try_from","try_into","type_id","LogAdapterState","LogCallback","LogSink","borrow","borrow","borrow_mut","borrow_mut","drop","enabled","ffi_default","flush","from","from","init","into","into","into_ffi_value","log","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"rc_log_ffi"],[26,"rc_log_ffi::android"]],"d":["","","","","","","This is the android backend for rc_log. It has a decent …","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Safety","Public destructor for strings managed by the other side of …","","","","","","","","Type of the log callback provided to us by java/swift. …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,8,14,8,14,8,14,8,14,8,14,8,8,14,8,14,8,14,8,14,8,14],"f":[0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[1,3],4],[5,1],[[]],[[]],[[6,7],8],[8],[9],[[10,7]],[11],[[]],[[],12],[[],12],[[],13],0,0,0,[[]],[[]],[[]],[[]],[8],[[14,15],2],[[],8],[14],[[]],[[]],[6,8],[[]],[[]],[8,8],[[14,16]],[[],12],[[],12],[[],12],[[],12],[[],13],[[],13]],"c":[],"p":[[4,"LogLevel"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Level"],[6,"LogCallback"],[3,"ExternError"],[3,"LogAdapterState"],[6,"c_char"],[15,"i32"],[3,"FfiStr"],[4,"Result"],[3,"TypeId"],[3,"LogSink"],[3,"Metadata"],[3,"Record"]]},\
"remote_settings":{"doc":"","t":"CCCDCCCCCCCLLAAMLALLLLLLLLNDDNDDDGEMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMLLMLLMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLDLLMLLMLLLMLLLLNNNNENNGNLLLLLLLLLLLLLLLL","n":["Attachment","Client","GetItemsOptions","RemoteSettings","RemoteSettingsConfig","RemoteSettingsError","RemoteSettingsRecord","RemoteSettingsResponse","Result","RsJsonObject","SortOrder","borrow","borrow_mut","client","config","config","download_attachment_to_path","error","from","get_records","get_records_since","into","new","try_from","try_into","type_id","Ascending","Attachment","Client","Descending","GetItemsOptions","RemoteSettingsRecord","RemoteSettingsResponse","RsJsonObject","SortOrder","attachment","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","deleted","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","field","fields","filename","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_attachment","get_attachment_raw","get_records","get_records_raw","get_records_raw_with_options","get_records_since","get_records_with_options","gt","has","has_not","hash","hash","id","into","into","into","into","into","into","iter_query_pairs","last_modified","last_modified","like","limit","location","lt","max","mimetype","min","new","new","not","records","size","sort","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","RemoteSettingsConfig","borrow","borrow_mut","bucket_name","clone","clone_into","collection_name","fmt","from","into","server_url","to_owned","try_from","try_into","type_id","AttachmentsUnsupportedError","BackoffError","FileError","JSONError","RemoteSettingsError","RequestError","ResponseError","Result","UrlParsingError","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id"],"q":[[0,"remote_settings"],[26,"remote_settings::client"],[144,"remote_settings::config"],[159,"remote_settings::error"]],"d":["","","","","","","","","","","","","","","This module defines the custom configurations that …","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Smaller values first.","Attachment metadata that can be optionally attached to a […","A simple HTTP client that can retrieve Remote Settings …","Larger values first.","Options for requests to endpoints that return multiple …","A parsed Remote Settings record. Records can contain …","Data structure representing the top-level response from …","","The order in which to return items.","","","","","","","","","","","","","","","","","","","","","","","","Sets an option to only return items whose <code>field</code> is an …","","","","","","","","Sets an option to only return items whose <code>field</code> is equal …","","","","","","Sets an option to only return the given <code>field</code> of each item.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Downloads an attachment from [attachment_location]. NOTE: …","Fetches a raw network Response for an attachment.","Fetches all records for a collection that can be found in …","Fetches all records for a collection that can be found in …","Fetches a raw network Response for records from this client…","Fetches all records that have been published since …","Fetches records from this client’s collection with the …","Sets an option to only return items whose <code>field</code> is …","Sets an option to only return items that have the given …","Sets an option to only return items that do not have the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator of (name, value) query pairs for these …","","","Sets an option to only return items whose <code>field</code> is a …","Sets the option to return at most <code>count</code> items.","","Sets an option to only return items whose <code>field</code> is …","Sets an option to only return items whose <code>field</code> is less …","","Sets an option to only return items whose <code>field</code> is greater …","Create a new Client with properties matching config.","Creates an empty option set.","Sets an option to only return items whose <code>field</code> is not …","","","Sets an option to return items in <code>order</code> for the given <code>field</code>…","","","","","","","","","","","","","","","","","","","","","","","","Custom configuration for the client. Currently includes …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","The server has asked the client to backoff.","","","","An error has occured while sending a request.","The server returned an error code or the response was …","","An error has occured while parsing an URL.","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,12,0,0,12,0,0,0,0,0,9,18,4,9,10,11,12,18,4,9,10,11,12,4,9,10,11,12,4,9,10,11,12,11,11,9,9,10,4,9,10,11,12,4,9,10,12,11,9,10,4,9,10,11,12,18,4,9,10,11,12,18,18,18,18,18,18,18,11,11,11,12,10,9,18,4,9,10,11,12,11,4,9,11,11,10,11,11,10,11,18,11,11,4,10,11,4,9,10,11,12,18,4,9,10,11,12,18,4,9,10,11,12,18,4,9,10,11,12,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,25,25,25,25,0,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25],"f":[0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[[1,2,2],3],0,[[]],[1,[[3,[4]]]],[[1,5],[[3,[4]]]],[[]],[6,[[3,[1]]]],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,4],[9,9],[10,10],[11,11],[12,12],[[]],[[]],[[]],[[]],[[]],[[11,[13,[2]],[13,[2]]],11],[[],11],0,[14,[[7,[9]]]],[14,[[7,[10]]]],[[4,4],15],[[9,9],15],[[10,10],15],[[11,[13,[2]],[13,[2]]],11],[[12,12],15],[[],15],[[],15],[[],15],[[],15],[[11,[13,[2]]],11],0,0,[[4,16],17],[[9,16],17],[[10,16],17],[[11,16],17],[[12,16],17],[[]],[[]],[[]],[[]],[[]],[[]],[[18,19],[[3,[[21,[20]]]]]],[[18,19],[[3,[22]]]],[18,[[3,[4]]]],[18,[[3,[22]]]],[[18,11],[[3,[22]]]],[[18,5],[[3,[4]]]],[[18,11],[[3,[4]]]],[[11,[13,[2]],[13,[2]]],11],[[11,[13,[2]]],11],[[11,[13,[2]]],11],[[12,23]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[11,24],0,0,[[11,[13,[2]],[13,[2]]],11],[[11,5],11],0,[[11,[13,[2]],[13,[2]]],11],[[11,[13,[2]],[13,[2]]],11],0,[[11,[13,[2]],[13,[2]]],11],[6,[[3,[18]]]],[[],11],[[11,[13,[2]],[13,[2]]],11],0,0,[[11,[13,[2]],12],11],[[]],[[]],[[]],[[]],[[]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],0,[[]],[[]],0,[6,6],[[]],0,[[6,16],17],[[]],[[]],0,[[]],[[],7],[[],7],[[],8],0,0,0,0,0,0,0,0,0,[[]],[[]],[[25,16],17],[[25,16],17],[[]],[26,25],[27,25],[28,25],[29,25],[[]],[30],[25,[[32,[31]]]],[[],2],[[],7],[[],7],[[],8]],"c":[],"p":[[3,"RemoteSettings"],[3,"String"],[6,"Result"],[3,"RemoteSettingsResponse"],[15,"u64"],[3,"RemoteSettingsConfig"],[4,"Result"],[3,"TypeId"],[3,"RemoteSettingsRecord"],[3,"Attachment"],[3,"GetItemsOptions"],[4,"SortOrder"],[8,"Into"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Client"],[15,"str"],[15,"u8"],[3,"Vec"],[3,"Response"],[8,"Hasher"],[8,"Iterator"],[4,"RemoteSettingsError"],[4,"Error"],[4,"ParseError"],[3,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"Option"]]},\
"restmail_client":{"doc":"","t":"FF","n":["clear_mailbox","find_email"],"q":[[0,"restmail_client"]],"d":["","For a given restmail email, find the first email that …"],"i":[0,0],"f":[[1,[[2,[0]]]],[[1,3,4],[[2,[5,0]]]]],"c":[],"p":[[15,"str"],[4,"Result"],[8,"Fn"],[15,"u8"],[4,"Value"]]},\
"sql_support":{"doc":"A crate with various sql/sqlcipher helpers.","t":"NDIEDNDLLLLLLLLLLLKLMAFLLLLFFFFFLLLLLLLLMLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLFFFFLLLMLLLLLLLLLLLLLLLLLLLLLLFFINSENSNGNLLLLLLLKLFFFFLLALLLLKDLLMLLLLLMLLLLL","n":["Cached","Conn","ConnExt","MaybeCached","RepeatDisplay","Uncached","UncheckedTransaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit","conn","conn","conn","debug_tools","default_max_variable_number","deref","deref","deref_mut","drop","each_chunk","each_chunk_mapped","each_sized_chunk","each_sized_chunk_mapped","escape_string_for_pragma","execute_all","execute_all","execute_cached","execute_cached","execute_one","execute_one","exists","exists","finished","fmt","fmt","from","from","from","from","from","from","get_db_size","get_db_size","into","into","into","into","new","open_database","prepare","prepare_maybe_cached","prepare_maybe_cached","query_one","query_one","query_row_and_then_cachable","query_row_and_then_cachable","query_rows_and_then","query_rows_and_then","query_rows_and_then_cached","query_rows_and_then_cached","query_rows_into","query_rows_into","query_rows_into_cached","query_rows_into_cached","repeat_display","repeat_multi_values","repeat_sql_values","repeat_sql_vars","rollback","set_pragma","set_pragma","started_at","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_query_one","try_query_one","try_query_row","try_query_row","type_id","type_id","type_id","type_id","unchecked_transaction","unchecked_transaction","unchecked_transaction_imm","unchecked_transaction_imm","define_debug_functions","print_query","ConnectionInitializer","Corrupt","END_VERSION","Error","IncompatibleVersion","NAME","RecoveryError","Result","SqlError","borrow","borrow_mut","finish","fmt","fmt","from","from","init","into","open_database","open_database_with_flags","open_memory_database","open_memory_database_with_flags","prepare","provide","test_utils","to_string","try_from","try_into","type_id","upgrade_from","MigratedDatabaseFile","borrow","borrow_mut","connection_initializer","from","into","new","new_with_flags","open","path","run_all_upgrades","try_from","try_into","type_id","upgrade_to"],"q":[[0,"sql_support"],[102,"sql_support::debug_tools"],[104,"sql_support::open_database"],[134,"sql_support::open_database::test_utils"]],"d":["","","This trait exists so that we can use these helpers on …","MaybeCached is a type that can be used to help abstract …","Helper type for printing repeated strings more …","","rusqlite, in an attempt to save us from ourselves, needs a …","","","","","","","","","","","Consumes and commits an unchecked transaction.","The method you need to implement to opt in to all of this.","","","","Returns SQLITE_LIMIT_VARIABLE_NUMBER as read from an …","","","","","Helper for the case where you have a <code>&amp;[impl ToSql]</code> of …","A version of <code>each_chunk</code> for the case when the conversion …","","Utility to help perform batched updates, inserts, queries, …","In PRAGMA foo=‘bar’, <code>&#39;bar&#39;</code> must be a constant string …","Execute all the provided statements.","Execute all the provided statements.","Equivalent to <code>Connection::execute</code> but caches the statement …","Equivalent to <code>Connection::execute</code> but caches the statement …","Execute a single statement.","Execute a single statement.","Return true if a query returns any rows","Return true if a query returns any rows","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Get the DB size in bytes","Get the DB size in bytes","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Begin a new unchecked transaction. Cannot be nested, but …","","","Get a cached or uncached statement based on a flag.","Get a cached or uncached statement based on a flag.","Execute a query that returns a single result column, and …","Execute a query that returns a single result column, and …","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> but …","Equivalent to <code>rusqlite::Connection::query_row_and_then</code> but …","Helper for when you’d like to get a <code>Vec&lt;T&gt;</code> of all the …","Helper for when you’d like to get a <code>Vec&lt;T&gt;</code> of all the …","Helper for when you’d like to get a <code>Vec&lt;T&gt;</code> of all the …","Helper for when you’d like to get a <code>Vec&lt;T&gt;</code> of all the …","Like <code>query_rows_and_then_cachable</code>, but works if you want a …","Like <code>query_rows_and_then_cachable</code>, but works if you want a …","Same as <code>query_rows_into</code>, but caches the stmt if possible.","Same as <code>query_rows_into</code>, but caches the stmt if possible.","Construct a RepeatDisplay that will repeatedly call <code>fmt_one</code>…","Returns a value that formats as <code>num_values</code> instances of …","Returns a value that formats as <code>count</code> instances of <code>(?)</code> …","Returns a value that formats as <code>count</code> instances of <code>?</code> …","Consumes and rolls back an unchecked transaction.","Set the value of the pragma on the main database. Returns …","Set the value of the pragma on the main database. Returns …","","","","","","","","","","","","Execute a query that returns 0 or 1 result columns, …","Execute a query that returns 0 or 1 result columns, …","Like <code>query_row_and_then_cachable</code> but returns None instead …","Like <code>query_row_and_then_cachable</code> but returns None instead …","","","","","Caveat: This won’t actually get used most of the time, …","Caveat: This won’t actually get used most of the time, …","Begin <code>unchecked_transaction</code> with …","Begin <code>unchecked_transaction</code> with …","You can call this function to add all sql functions …","Print the entire contents of an arbitrary query. A common …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[7,0,0,0,0,7,0,43,3,7,2,43,3,7,2,2,2,3,44,3,3,0,0,3,7,7,3,0,0,0,0,0,44,44,44,44,44,44,44,44,3,2,2,43,3,7,7,7,2,44,44,43,3,7,2,3,0,7,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,3,44,44,3,2,2,43,3,7,2,43,3,7,2,44,44,44,44,43,3,7,2,44,44,44,44,0,0,0,35,39,0,35,39,35,0,35,35,35,39,35,35,35,35,39,35,0,0,0,0,39,35,0,35,35,35,35,39,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[]],[3,4],[[],5],[3,5],0,0,[[],6],[3,5],[7,8],[7,8],[3],[[9,10],11],[[9,12,10],11],[[9,6,10],11],[[9,6,12,10],11],[13,14],[[[9,[13]]],4],[[[9,[13]]],4],[[13,15],[[4,[6]]]],[[13,15],[[4,[6]]]],[13,4],[13,4],[[13,15],[[4,[16]]]],[[13,15],[[4,[16]]]],0,[[[2,[12]],17],18],[[[2,[19]],17],18],[[]],[[]],[[]],[20,7],[8,7],[[]],[[],[[11,[21,22]]]],[[],[[11,[21,22]]]],[[]],[[]],[[]],[[]],[[5,23],[[4,[3]]]],0,[[5,13,16],[[4,[7]]]],[[13,16],[[4,[7]]]],[[13,16],[[4,[7]]]],[13,[[4,[24]]]],[13,[[4,[24]]]],[[25,13,15,26,16],[[11,[[27,[22]]]]]],[[25,13,15,26,16],[[11,[[27,[22]]]]]],[[25,13,15,10],[[11,[28,[27,[22]]]]]],[[25,13,15,10],[[11,[28,[27,[22]]]]]],[[25,13,15,10],[[11,[28,[27,[22]]]]]],[[25,13,15,10],[[11,[28,[27,[22]]]]]],[[25,13,15,10],[[11,[29,[27,[22]]]]]],[[25,13,15,10],[[11,[29,[27,[22]]]]]],[[25,13,15,10],[[11,[29,[27,[22]]]]]],[[25,13,15,10],[[11,[29,[27,[22]]]]]],[[6,13,12],[[2,[12]]]],[[6,6],30],[6,30],[6,30],[3,4],[[25,13,31],[[4,[25]]]],[[25,13,31],[[4,[25]]]],0,[[]],[[],14],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[25,13,15,16],[[4,[[32,[24]]]]]],[[25,13,15,16],[[4,[[32,[24]]]]]],[[25,13,15,26,16],[[11,[32,[27,[22]]]]]],[[25,13,15,26,16],[[11,[32,[27,[22]]]]]],[[],33],[[],33],[[],33],[[],33],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[[],[[4,[3]]]],[5,4],[[5,13],4],0,0,0,0,0,0,0,0,0,[[]],[[]],[5,34],[[35,17],18],[[35,17],18],[[]],[22,35],[36,34],[[]],[[[38,[37]],39],[[34,[5]]]],[[[38,[37]],40,39],[[34,[5]]]],[39,[[34,[5]]]],[[40,39],[[34,[5]]]],[[5,16],34],[41],0,[[],14],[[],11],[[],11],[[],33],[[36,21],34],0,[[]],[[]],0,[[]],[[]],[[39,13],[[42,[39]]]],[[39,13,40],[[42,[39]]]],[[[42,[39]]],5],0,[[[42,[39]]]],[[],11],[[],11],[[],33],[[[42,[39]],21]]],"c":[],"p":[[8,"Clone"],[3,"RepeatDisplay"],[3,"UncheckedTransaction"],[6,"Result"],[3,"Connection"],[15,"usize"],[4,"MaybeCached"],[3,"Statement"],[15,"slice"],[8,"FnMut"],[4,"Result"],[8,"Fn"],[15,"str"],[3,"String"],[8,"Params"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"CachedStatement"],[15,"u32"],[4,"Error"],[4,"TransactionBehavior"],[8,"FromSql"],[8,"Sized"],[8,"FnOnce"],[8,"From"],[3,"Vec"],[8,"FromIterator"],[8,"Display"],[8,"ToSql"],[4,"Option"],[3,"TypeId"],[6,"Result"],[4,"Error"],[3,"Transaction"],[3,"Path"],[8,"AsRef"],[8,"ConnectionInitializer"],[3,"OpenFlags"],[3,"Demand"],[3,"MigratedDatabaseFile"],[3,"Conn"],[8,"ConnExt"]]},\
"sync15":{"doc":"","t":"NNNNDNGNNESDEDNNNNDNNNNNDNGNDNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLAMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLMMLLLLLLLLMLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDDENDDDNLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLLLMMLLLLMMALLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLNNNNDNNNNEINEDDDDMLLLLLLLLLLLLLLLLLLLLLLLMLLMMLLLLKLKLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLKLKLMMLFFMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMMMMNEIEDNNNDNNKLLLLLLLLLLLLLLLMMMLLLLLLKLLLLLLLMLLLLLLLMLLLLLLLMKLLLLLLLLLLLLLLLLLLLLNDNIIDDNNNENNNNNEIENKKLLLLLLLLLLLLLLLLLLLLLLLLLMMKLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLKMLLLMLLLLLLLKKLMLLLMLMMLLLLLLLMKKKKKLLKKKKKLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKNDDDDNNDNEDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMM","n":["BackoffError","BadCleartextUtf8","BadKeyLength","Base64Decode","ClientData","ClientUpgradeRequired","CollectionName","CryptoError","Desktop","DeviceType","EPOCH","EncryptedPayload","Error","Guid","HawkError","HmacMismatch","Interrupted","JsonError","KeyBundle","MalformedUrl","MissingServerTimestamp","Mobile","RecordTooLargeError","RecordUploadFailed","RemoteClient","RequestError","Result","ServerBatchProblem","ServerTimestamp","SetupRace","SetupRequired","StorageHttpError","StorageResetError","StoreError","TV","Tablet","TokenserverHttpError","UnacceptableUrl","UnexpectedStatus","Unknown","VR","as_bytes","as_millis","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bso","ciphertext","client","clients_engine","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","column_result","decrypt","decrypt","decrypt_into","default","default","default","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_name","device_type","duration_since","empty","encode_hex","encode_hex_upper","encrypt_bytes_rand_iv","encrypt_bytes_with_iv","encrypt_rand_iv","encrypt_with_iv","encryption_key","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_base64","from_cleartext","from_cleartext_payload","from_float_seconds","from_ksync_base64","from_ksync_bytes","from_millis","from_slice","from_str","from_string","from_vec","fxa_device_id","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hmac","hmac_key","into","into","into","into","into","into","into","into","into_resettable","into_string","is_valid_for_places","is_valid_for_sync_server","is_valid_places_byte","iv","local_client_id","measure_with","new","new","new_random","partial_cmp","partial_cmp","provide","random","recent_clients","serialize","serialize","serialize","serialize","serialize","serialize","serialized_len","source","telemetry","to_b64_array","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_sql","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Content","IncomingBso","IncomingContent","IncomingEncryptedBso","IncomingEnvelope","IncomingKind","Malformed","OutgoingBso","OutgoingEncryptedBso","OutgoingEnvelope","Tombstone","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","content","default","deserialize","deserialize","deserialize","envelope","envelope","envelope","envelope","envelope","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_content","from_content_with_id","from_test_content","from_test_content_ts","id","id","into","into","into","into","into","into","into","into","into_content","into_content_with_fixup","into_decrypted","into_encrypted","kind","modified","new","new","new","new","new_test_tombstone","new_tombstone","payload","payload","serialize","serialize","serialize","serialized_payload_len","sortindex","sortindex","test_utils","to_owned","to_owned","to_test_incoming","to_test_incoming_t","to_test_incoming_ts","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AuthenticationError","BackedOff","Error","Interrupted","MemoryCachedState","NetworkError","Ok","OtherError","ServiceError","ServiceStatus","SetupStorageClient","Success","Sync15ClientResponse","Sync15StorageClient","Sync15StorageClientInit","SyncRequestInfo","SyncResult","access_token","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_sensitive_info","clone","clone","clone","clone_into","clone_into","clone_into","cmp","create_storage_error","declined","default","default","engine_results","engines_to_state_change","eq","eq","equivalent","equivalent","fetch_crypto_keys","fetch_crypto_keys","fetch_info_collections","fetch_info_collections","fetch_info_configuration","fetch_info_configuration","fetch_meta_global","fetch_meta_global","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_err","from_response","get_encrypted_records","get_hash","get_next_sync_after","hash","hashed_uid","into","into","into","into","into","into","into","is_user_action","key_id","new","new_post_queue","next_sync_after","note_client_refresh","partial_cmp","put_crypto_keys","put_crypto_keys","put_meta_global","put_meta_global","result","service_status","should_refresh_client","sync_multiple","sync_multiple_with_command_processor","telemetry","to_owned","to_owned","to_owned","tokenserver_url","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe_all_remote","wipe_all_remote","last_modified","record","route","status","Applied","Command","CommandProcessor","CommandStatus","Engine","Ignored","Reset","ResetAll","Settings","Unsupported","Wipe","apply_incoming_command","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","command_processor","device_name","device_type","eq","eq","eq","equivalent","equivalent","equivalent","fetch_outgoing_commands","fmt","fmt","fmt","from","from","from","from","fxa_device_id","get_client_data","get_hash","get_hash","get_hash","hash","hash","hash","interruptee","into","into","into","into","local_client_id","new","partial_cmp","recent_clients","settings","sync","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Addresses","ApplyResults","Bookmarks","BridgedEngine","BridgedEngineAdaptor","CollSyncIds","CollectionRequest","Connected","CreditCards","Disconnected","EngineSyncAssociation","History","Index","Newest","Oldest","Passwords","RequestOrder","SyncEngine","SyncEngineId","Tabs","apply","apply","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","coll","collection","collection_name","default","default","engine","ensure_current_sync_id","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","full","full","get_collection_request","get_hash","get_hash","get_sync_assoc","global","hash","hash","ids","ids","into","into","into","into","into","into","iter","last_sync","last_sync","limit","limit","name","new","new","newer","newer_than","num_reconciled","older","older_than","partial_cmp","partial_cmp","prepare_for_sync","prepare_for_sync","prepare_for_sync","prepare_for_sync","records","reset","reset","reset_sync_id","set_last_sync","set_last_sync","set_local_encryption_key","set_local_encryption_key","set_uploaded","set_uploaded","stage_incoming","store_incoming","sync_finished","sync_finished","sync_finished","sync_id","sync_started","sync_started","sync_started","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wipe","wipe","Auth","Engine","EngineIncoming","EngineOutgoing","Event","Http","Other","Problem","Shutdown","SyncFailure","SyncTelemetry","SyncTelemetryPing","Unexpected","Validation","applied","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","default","default","engine","event","extra","failed","failed","failure","failure","ffi_default","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_applied","get_failed","get_incoming","get_new_failed","get_reconciled","incoming","into","into","into","into","into","into","into","into","into","into_ffi_value","new","new","new","new","new","new","new_failed","outgoing","problem","reconciled","sent","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sync","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","validation","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_version","code","error","error","from"],"q":[[0,"sync15"],[258,"sync15::bso"],[390,"sync15::client"],[527,"sync15::client::Sync15ClientResponse"],[531,"sync15::clients_engine"],[613,"sync15::engine"],[781,"sync15::telemetry"],[925,"sync15::telemetry::SyncFailure"]],"d":["","","","","Argument to Store::prepare_for_sync. See comment there for …","","","","","Enumeration for the different types of device.","","A representation of an encrypted payload. Used as the …","","This is a type intended to be used to represent the guids …","","","","","","","","","","","Information about a remote client in the clients …","","","","Typesafe way to manage server timestamps without …","","","","Used for things like a node reassignment or an unexpected …","","","","","","","","","Get the data backing this <code>Guid</code> as a <code>&amp;[u8]</code>.","Get the milliseconds for the timestamp.","","","Get the data backing this <code>Guid</code> as a <code>&amp;str</code>.","","","","","","","","","","","","","","","","","","","A module for everything needed to be a “sync client” - …","The client engine is a crate::engine(Sync Engine) used to …","","","","","","","","","","","","","","","","","","Decrypt the provided ciphertext with the given iv, and …","","Create a default guid by calling <code>Guid::empty()</code>","","","","","","","","","","","","Returns None if <code>other</code> is later than <code>self</code> (Duration may not …","Create an empty guid. Usable as a constant.","","","Generate a random iv and encrypt with it. Return both the …","Encrypt using the provided IV.","","","","This module is used by crates which need to implement a “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Convert <code>b</code> into a <code>Guid</code>.","","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>v</code> to a <code>Guid</code>, consuming it.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …","Returns true for Guids that are valid places guids, and …","Returns true for Guids that are deemed valid by the sync …","Returns true if the byte <code>b</code> is a valid base64url byte.","","","","Create a guid from a <code>str</code>.","Construct a key bundle from the already-decoded encrypt …","","","","","Create a random guid (of 12 base64url characters). …","A hashmap of records in the <code>clients</code> collection. Key is the …","","","","","","","","","Manage recording sync telemetry. Assumes some external …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A good, live T.","IncomingBso’s can come from:","We also have the concept of “content”, which helps …","","An envelope for an incoming item. Envelopes carry all the …","The “kind” of incoming content after deserializing it.","Either not JSON, or can’t be made into a T.","","","An envelope for an outgoing item. This is conceptually …","A record that used to be a T but has been replaced with a …","","","","","","","","","","","","","","","","","","","","","Returns Some(content) if [self.kind] is …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an Outgoing record with an explicit envelope. Will …","Creates a outgoing record from some , which can be made …","When a test has an T and wants it as an IncomingBso","When a test has an T and wants it as an IncomingBso with a …","The ID of the record.","The ID of the record.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert an IncomingBso to an IncomingContent possibly …","Like into_content, but adds an additional fixup step where …","Decrypt a BSO, consuming it into a clear-text version.","","","","","","","Most consumers will use <code>self.from_content</code> and …","When a test wants a new incoming tombstone.","Creates a new tombstone record. Not all collections expect …","","","","","","","","","Utilities for tests to make IncomingBsos and Content from …","","","When a test has an OutgoingBso and wants it as an …","When a test has an OutgoingBso and wants it as an …","When a test has an OutgoingBso and wants it as an …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some external FxA action needs to be taken.","We declined to do anything for backoff or rate-limiting …","","We were interrupted.","Info we want callers to engine <em>in memory</em> for us so that …","Some general network issue.","Everything is fine.","Something else - you need to check the logs for more …","Some apparent issue with the servers.","The general status of sync - should probably be moved to …","A trait containing the methods required to run through the …","","A response from a GET request on a Sync15StorageClient, …","","","This is essentially a bag of information that the sync …","The result of a sync request. This too is from the “sync …","","","","","","","","","","","","","","","","","","","","","","","","","The set of declined engines, if we know them.","","","The result for each engine. Note that we expect the <code>String</code> …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","The result of the sync.","The general health.","","Sync multiple engines","Like <code>sync_multiple</code>, but specifies an optional command …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A command processor applies incoming commands like wipes …","Indicates if a command was applied successfully, ignored, …","","","Resets local sync state for a specific engine.","Resets local sync state for all engines.","Information about this device to include in its client …","","Erases all local data for a specific engine.","Applies a command sent to this client from another client. …","","","","","","","","","","","","","","","","","The name of this client. This should match the client’s …","The type of this client: mobile, tablet, desktop, or other.","","","","","","","Fetches commands to send to other clients. An error return …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The FxA device ID of this client, also used as this client…","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a new clients engine that delegates to the given …","","","","Syncs the clients collection. This works a little …","","","","","","","","","","","","","","","","","","","","","","","A BridgedEngine acts as a bridge between …","","","","Sync is connected, and has the following sync IDs.","","This store is disconnected (although it may be connected …","Defines how an engine is associated with a particular set …","","","","","","","A “sync engine” is a thing that knows how to sync. It…","The concrete <code>SyncEngine</code> implementations","","Applies all staged records, reconciling changes on both …","Apply the staged records, returning outgoing records. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ensures that the locally stored sync ID for this engine’…","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The engine is responsible for building a single collection …","","","Get persisted sync IDs. If they don’t match the global …","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns the last sync time, in milliseconds, for this …","","","","","","","","","The number of incoming records whose contents were merged …","","","","","Tells the tabs engine about recent FxA devices. A bit of a …","Tells the tabs engine about recent FxA devices. A bit of a …","Prepares the engine for syncing. The tabs engine currently …","Prepares the engine for syncing. The tabs engine currently …","List of records","Resets all local Sync state, including any change flags, …","Reset the engine (and associated store) without wiping …","Resets the sync ID for this engine’s collection, …","Sets the last sync time, in milliseconds. This is called …","","Tells the engine what the local encryption key is for the …","Tells the engine what the local encryption key is for the …","Indicates that the given record IDs were uploaded …","Indicates that the given record IDs were uploaded …","Stage some incoming records. This might be called multiple …","Stages a batch of incoming Sync records. This is called …","Indicates that all records have been uploaded. At this …","Called once the sync is finished. Not currently called if …","Called once the sync is finished. Not currently called if …","Returns the sync ID for this engine’s collection. This …","Indicates that the engine is about to start syncing. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Erases all local user data for this collection, and any …","","","One engine’s sync.","Incoming record for an engine’s sync","Outgoing record for an engine’s sync.","A generic “Event” - suitable for all kinds of pings …","","","","","A Sync failure.","A single sync. May have many engines, may have its own …","The Sync ping payload, as documented at …","","","Increment the value of <code>applied</code> by <code>n</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Increment the value of <code>failed</code> by <code>n</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the value of <code>applied</code>. Mostly useful for testing.","Get the value of <code>failed</code>. Mostly useful for testing.","","Get the value of <code>new_failed</code>. Mostly useful for testing.","Get the value of <code>reconciled</code>. Mostly useful for testing.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Increment the value of <code>new_failed</code> by <code>n</code>.","","","Increment the value of <code>reconciled</code> by <code>n</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[30,30,30,30,0,30,0,30,7,0,4,0,0,0,30,30,30,30,0,30,30,7,30,30,0,30,0,30,0,30,30,30,30,30,7,7,30,30,30,7,7,1,4,1,1,1,1,7,8,9,10,30,11,4,1,7,8,9,10,30,11,4,0,10,0,0,1,7,8,9,10,11,4,1,7,8,9,10,11,4,1,1,10,11,10,1,7,4,1,1,7,8,9,10,4,9,9,4,1,1,1,11,11,11,11,11,0,1,1,1,1,1,1,1,7,8,9,11,4,1,7,8,9,11,4,1,1,7,8,9,10,30,30,11,4,4,1,1,1,1,1,1,7,8,9,10,30,30,30,30,30,30,30,30,30,30,30,11,4,11,10,10,4,11,11,4,1,4,1,1,9,1,7,9,11,1,7,9,11,10,11,1,7,8,9,10,30,11,4,1,1,1,1,1,10,8,1,1,11,11,1,4,30,1,8,1,7,8,9,10,4,10,30,0,11,1,7,8,9,10,11,4,1,1,30,4,1,7,8,9,10,30,11,4,1,7,8,9,10,30,11,4,1,7,8,9,10,30,11,4,1,7,8,9,10,30,11,4,63,0,0,0,0,0,63,0,0,0,63,63,60,64,57,58,61,65,59,63,60,64,57,58,61,65,59,57,58,57,58,59,58,60,57,61,60,64,61,65,59,63,60,64,57,58,61,65,59,63,60,64,57,58,58,61,65,59,65,65,61,61,57,58,63,60,64,57,58,61,65,59,61,61,60,65,59,57,60,64,61,65,61,65,61,65,64,58,65,64,57,58,0,57,58,65,65,65,63,60,64,57,58,61,65,59,63,60,64,57,58,61,65,59,57,58,63,60,64,57,58,61,65,59,63,60,64,57,58,61,65,59,68,68,70,68,0,68,68,68,68,0,0,70,0,0,0,0,0,71,68,74,70,71,73,67,72,68,74,70,71,73,67,72,67,68,70,71,68,70,71,71,70,74,67,72,74,72,68,71,68,71,109,73,109,73,109,73,109,73,68,74,70,71,73,67,72,68,74,70,71,73,67,72,68,70,73,71,67,71,73,68,74,70,71,73,67,72,72,71,73,73,74,67,71,109,73,109,73,74,74,67,0,0,74,68,70,71,71,68,74,70,71,73,67,72,68,74,70,71,73,67,72,68,74,70,71,73,67,72,68,74,70,71,73,67,72,109,73,110,110,110,110,84,0,0,0,0,84,83,83,0,84,83,82,88,84,86,83,88,84,86,83,84,86,83,84,86,83,83,88,86,86,84,86,83,84,86,83,82,84,86,83,88,84,86,83,86,88,84,86,83,84,86,83,88,88,84,86,83,88,88,83,88,82,88,84,86,83,88,84,86,83,88,84,86,83,88,84,86,83,88,84,86,83,94,0,94,0,0,0,0,93,94,93,0,94,91,91,91,94,0,0,0,94,111,80,91,89,77,91,92,93,94,89,77,91,92,93,94,77,91,92,93,94,77,91,92,93,94,91,94,92,77,80,89,77,112,111,77,91,92,93,94,77,91,92,93,94,89,77,91,91,92,93,94,94,89,89,77,91,92,93,94,77,77,80,91,94,80,92,91,94,77,77,89,77,91,92,93,94,94,111,112,77,77,94,89,77,77,77,89,77,77,91,94,111,111,80,80,89,111,80,111,111,112,80,80,111,80,80,111,111,80,80,111,111,112,112,77,91,92,93,94,91,94,89,77,91,92,93,94,94,89,77,91,92,93,94,89,77,91,92,93,94,89,77,91,92,93,94,111,80,107,0,0,0,0,107,107,0,107,0,0,0,107,0,99,106,107,99,101,90,102,103,104,105,106,107,99,101,90,102,103,104,105,99,101,102,103,104,105,104,105,106,99,101,90,104,105,104,106,107,99,101,90,102,103,104,105,106,107,107,99,101,90,102,103,104,105,99,99,90,99,99,90,106,107,99,101,90,102,103,104,105,105,106,99,101,90,104,105,99,90,102,99,101,106,107,99,101,90,102,103,104,105,105,106,107,99,101,90,102,103,104,105,106,107,99,101,90,102,103,104,105,106,107,99,101,90,102,103,104,105,105,90,106,106,107,99,101,90,102,103,104,105,102,113,114,115,116],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[4,5],[1,[[3,[2]]]],[1,6],[1,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[1,1],[7,7],[8,8],[9,9],[10,10],[11,11],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],12],[13,[[15,[1,14]]]],[[10,11],[[17,[16]]]],[[11,6,6,6],[[17,[16]]]],[[10,11],[[17,[18]]]],[[],1],[[],7],[[],4],[1,6],[19,[[15,[1]]]],[19,[[15,[7]]]],[19,[[15,[8]]]],[19,[[15,[9]]]],[19,[[15,[10]]]],[19,[[15,[4]]]],0,0,[[4,4],[[21,[20]]]],[[],1],[[],[[23,[22]]]],[[],[[23,[22]]]],[[11,[3,[2]]],17],[[11,[3,[2]],[3,[2]]],17],[[11,6],17],[[11,6,[3,[2]]],17],[11,[[3,[2]]]],0,[[1,[3,[2]]],24],[[1,16],24],[[1,6],24],[[1,[3,[2]]],24],[[1,[26,[2,25]]],24],[[1,1],24],[[1,6],24],[[7,7],24],[[8,8],24],[[9,9],24],[[11,11],24],[[4,4],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[1,27],[[15,[28]]]],[[1,27],[[15,[28]]]],[[7,27],29],[[8,27],29],[[9,27],29],[[10,27],29],[[30,27],29],[[30,27],29],[[11,27],29],[[4,27],29],[[4,27],29],[[[3,[2]]],1],[16,1],[6,1],[6,1],[[[26,[2,25]]],1],[[]],[[]],[[]],[[]],[[]],[31,30],[32,30],[33,30],[34,30],[35,30],[36,30],[37,30],[38,30],[39,30],[40,30],[[]],[[]],[[]],[[6,6],[[17,[11]]]],[[11,16],[[17,[10]]]],[[11,41],[[17,[10]]]],[42,4],[6,[[17,[11]]]],[[[3,[2]]],[[17,[11]]]],[5,4],[[[3,[2]]],1],[6,[[15,[4]]]],[16,1],[[[26,[2,25]]],1],0,[[[0,[43,44]],45],46],[[[0,[43,44]],45],46],[[[0,[43,44]],45],46],[[[0,[43,44]],45],46],[[1,47]],[[7,47]],[[9,47]],[[11,47]],0,[11,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[48,[16]]]],[1,16],[1,24],[1,24],[2,24],0,0,[[],49],[6,1],[[[26,[2]],[26,[2]]],[[17,[11]]]],[[],[[17,[11]]]],[[1,1],[[21,[12]]]],[[4,4],[[21,[12]]]],[50],[[],1],0,[[1,51],15],[[7,51],15],[[8,51],15],[[9,51],15],[[10,51],15],[[4,51],15],[10,49],[30,[[21,[52]]]],0,[11,[[53,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[15,[54,55]]]],[[],16],[[],16],[[],16],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,57],[58,58],[[]],[[]],[59,21],[[],58],[19,[[15,[60]]]],[19,[[15,[57]]]],[19,[[15,[61]]]],0,0,0,0,0,[[[63,[62]],27],29],[[60,27],29],[[64,27],29],[[57,27],29],[[58,27],29],[[61,27],29],[[65,27],29],[[[59,[62]],27],29],[[]],[[]],[[]],[[]],[1,58],[[]],[[]],[[]],[[]],[[58,41],[[15,[65,34]]]],[41,[[15,[65,34]]]],[41,61],[[41,4],61],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,[[59,[18]]]],[[61,66],[[59,[18]]]],[[60,11],[[17,[61]]]],[[65,11],[[17,[64]]]],0,0,[[57,10],60],[[58,10],64],[[57,16],61],[[58,41],[[15,[65,34]]]],[1,61],[58,65],0,0,[[64,51],15],[[58,51],15],[[65,51],15],[64,49],0,0,0,[[]],[[]],[65,61],[65,18],[[65,4],61],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[67],[68,68],[[[70,[69]]],[[70,[69]]]],[71,71],[[]],[[]],[[]],[[71,71],12],[70,30],0,[[],67],[[],72],0,0,[[68,68],24],[[71,71],24],[[],24],[[],24],[[],[[17,[[70,[60]]]]]],[73,[[17,[[70,[60]]]]]],[[],[[17,[[70,[0]]]]]],[73,[[17,[[70,[0]]]]]],[[],[[17,[[70,[0]]]]]],[73,[[17,[[70,[0]]]]]],[[],[[17,[[70,[0]]]]]],[73,[[17,[[70,[0]]]]]],[[68,27],29],[[74,27],29],[[[70,[62]],27],29],[[71,27],29],[[73,27],29],[[67,27],29],[[72,27],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,68],[[75,[76,[0]]],[[17,[[70,[18]]]]]],[[73,77],[[17,[[70,[[26,[60]]]]]]]],[[[0,[43,44]],45],46],[67,[[21,[78]]]],[[71,47]],[73,[[17,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[71,[[17,[73]]]],0,0,[67],[[71,71],[[21,[12]]]],[[4,64],17],[[73,4,64],17],0,0,0,0,[67,24],[[[3,[80]],[21,[16]],67,71,11,81,[21,[72]]],74],[[[21,[82]],[3,[80]],[21,[16]],67,71,11,81,[21,[72]]],74],0,[[]],[[]],[[]],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[73,17],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[83,[[85,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[86,86],[83,83],[[]],[[]],[[]],[[83,83],12],0,0,0,[[84,84],24],[[86,86],24],[[83,83],24],[[],24],[[],24],[[],24],[[],[[85,[[87,[83]]]]]],[[84,27],29],[[86,27],29],[[83,27],29],[[]],[[]],[[]],[[]],0,[88,8],[[[0,[43,44]],45],46],[[[0,[43,44]],45],46],[[[0,[43,44]],45],46],[[84,47]],[[86,47]],[[83,47]],0,[[]],[[]],[[]],[[]],[88,16],[[82,81],88],[[83,83],[[21,[12]]]],0,[[],86],0,[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[85,[89]]]],[[4,90],[[85,[[26,[65]]]]]],[91,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],[91,91],[92,92],[93,93],[94,94],[[]],[[]],[[]],[[]],[[]],[[91,91],12],[[94,94],12],0,0,[[],79],[[],89],[[],77],[[],80],[6,[[85,[16]]]],[[77,77],24],[[91,91],24],[[92,92],24],[[93,93],24],[[94,94],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[89,27],29],[[77,27],29],[[91,27],29],[[91,27],29],[[92,27],29],[[93,27],29],[[94,27],29],[[94,27],29],[[[26,[65]]],89],[[]],[[]],[[]],[[]],[[]],[[]],[77,77],0,[4,[[85,[[21,[77]]]]]],[[[0,[43,44]],45],46],[[[0,[43,44]],45],46],[[],[[85,[93]]]],0,[[91,47]],[[94,47]],[[77,95],77],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],96],[[],[[85,[5]]]],[[],[[85,[5]]]],[[77,49,91],77],0,[94,6],[[[26,[65]],[97,[[21,[49]]]]],89],[79,77],0,[[77,4],77],0,0,[[77,4],77],[[91,91],[[21,[12]]]],[[94,94],[[21,[12]]]],[6,85],[6,85],[98,85],[98,85],0,[[],85],[93,85],[[],[[85,[16]]]],[5,85],[5,85],[6,85],[6,85],[[5,[3,[1]]],85],[[4,[26,[1]]],85],[[[26,[61]],90],85],[[[26,[61]]],85],[[],85],[[],85],[[],85],[[],[[85,[[21,[16]]]]]],[[],85],[[],85],[[],85],[[]],[[]],[[]],[[]],[[]],[[],16],[[],16],[[],15],[[],15],[[],15],[[],15],[[],15],[6,[[15,[94]]]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[]],[[]],[[]],[[]],[[]],[[]],[[],85],[[],85],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[99,100]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],99],[[],101],[[],102],[[],103],[[],104],[[],105],[[104,90]],[[105,106]],[[106,6,16],106],[[99,100]],[[101,49]],[[90,[97,[107]]]],[[104,107]],[[],108],[104],[[106,27],29],[[107,27],29],[[99,27],29],[[101,27],29],[[90,27],29],[[102,27],29],[[103,27],29],[[104,27],29],[[105,27],29],[[]],[30,107],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[99,100],[99,100],[90,[[21,[99]]]],[99,100],[99,100],[[90,99]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[105,108],[[6,6],106],[[],99],[[],101],[[[97,[16]]],90],[[],104],[[],105],[[99,100]],[[90,101]],[[102,6,49],102],[[99,100]],[[101,49]],[[106,51],15],[[107,51],15],[[99,51],15],[[101,51],15],[[90,51],15],[[102,51],15],[[103,51],15],[[104,51],15],[[105,51],15],[[105,104]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[],56],[[105,16]],[[90,102]],[[106,6],106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[100,102],0,0,0,0],"c":[],"p":[[3,"Guid"],[15,"u8"],[15,"slice"],[3,"ServerTimestamp"],[15,"i64"],[15,"str"],[4,"DeviceType"],[3,"ClientData"],[3,"RemoteClient"],[3,"EncryptedPayload"],[3,"KeyBundle"],[4,"Ordering"],[4,"ValueRef"],[4,"FromSqlError"],[4,"Result"],[3,"String"],[6,"Result"],[8,"Deserialize"],[8,"Deserializer"],[3,"Duration"],[4,"Option"],[15,"char"],[8,"FromIterator"],[15,"bool"],[3,"Global"],[3,"Vec"],[3,"Formatter"],[3,"Error"],[6,"Result"],[4,"Error"],[3,"Interrupted"],[3,"Error"],[3,"FromUtf8Error"],[3,"Error"],[3,"Error"],[4,"DecodeError"],[4,"Error"],[4,"ParseError"],[3,"UnexpectedStatus"],[4,"Error"],[8,"Serialize"],[15,"f64"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"Resettable"],[15,"usize"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[15,"array"],[4,"ToSqlOutput"],[4,"Error"],[3,"TypeId"],[3,"IncomingEnvelope"],[3,"OutgoingEnvelope"],[3,"IncomingContent"],[3,"IncomingEncryptedBso"],[3,"IncomingBso"],[8,"Debug"],[4,"IncomingKind"],[3,"OutgoingEncryptedBso"],[3,"OutgoingBso"],[8,"FnOnce"],[3,"MemoryCachedState"],[4,"ServiceStatus"],[8,"Clone"],[4,"Sync15ClientResponse"],[3,"Sync15StorageClientInit"],[3,"SyncRequestInfo"],[3,"Sync15StorageClient"],[3,"SyncResult"],[3,"Response"],[3,"Arc"],[3,"CollectionRequest"],[3,"SystemTime"],[6,"CollectionName"],[8,"SyncEngine"],[8,"Interruptee"],[8,"CommandProcessor"],[4,"Command"],[4,"CommandStatus"],[6,"Result"],[3,"Settings"],[3,"HashSet"],[3,"Engine"],[3,"ApplyResults"],[3,"Engine"],[4,"RequestOrder"],[3,"CollSyncIds"],[4,"EngineSyncAssociation"],[4,"SyncEngineId"],[8,"IntoIterator"],[8,"Iterator"],[8,"Into"],[8,"Fn"],[3,"EngineIncoming"],[15,"u32"],[3,"EngineOutgoing"],[3,"Validation"],[3,"Problem"],[3,"SyncTelemetry"],[3,"SyncTelemetryPing"],[3,"Event"],[4,"SyncFailure"],[6,"c_char"],[8,"SetupStorageClient"],[13,"Success"],[8,"BridgedEngine"],[8,"BridgedEngineAdaptor"],[13,"Http"],[13,"Other"],[13,"Unexpected"],[13,"Auth"]]},\
"sync_guid":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Guid","as_bytes","as_ref","as_ref","as_str","borrow","borrow_mut","clone","clone_into","cmp","column_result","default","deref","deserialize","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","from","from","from","from","from","from","from_slice","from_string","from_vec","get_hash","hash","into","into_string","is_valid_for_places","is_valid_for_sync_server","is_valid_places_byte","new","partial_cmp","random","serialize","to_owned","to_sql","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"sync_guid"]],"d":["This is a type intended to be used to represent the guids …","Get the data backing this <code>Guid</code> as a <code>&amp;[u8]</code>.","","","Get the data backing this <code>Guid</code> as a <code>&amp;str</code>.","","","","","","","Create a default guid by calling <code>Guid::empty()</code>","","","Create an empty guid. Usable as a constant.","","","","","","","","","","","","","Returns the argument unchanged.","","","","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>b</code> into a <code>Guid</code>.","Convert <code>v</code> to a <code>Guid</code>, consuming it.","","","Calls <code>U::from(self)</code>.","Convert this <code>Guid</code> into a <code>String</code>, consuming it in the …","Returns true for Guids that are valid places guids, and …","Returns true for Guids that are deemed valid by the sync …","Returns true if the byte <code>b</code> is a valid base64url byte.","Create a guid from a <code>str</code>.","","Create a random guid (of 12 base64url characters). …","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[2]]]],[1,[[3,[2]]]],[1,4],[1,4],[[]],[[]],[1,1],[[]],[[1,1],5],[6,[[7,[1]]]],[[],1],[1,4],[8,[[9,[1]]]],[[],1],[[1,[10,[2]]],11],[[1,[3,[2]]],11],[[1,[3,[2]]],11],[[1,4],11],[[1,1],11],[[1,4],11],[[1,12],11],[[],11],[[1,13],14],[[1,13],14],[4,1],[[[3,[2]]],1],[[]],[12,1],[[[10,[2]]],1],[4,1],[[[3,[2]]],1],[12,1],[[[10,[2]]],1],[[[0,[15,16]],17],18],[[1,19]],[[]],[1,12],[1,11],[1,11],[2,11],[4,1],[[1,1],[[20,[5]]]],[[],1],[[1,21],9],[[]],[1,[[23,[22]]]],[[],12],[[],9],[[],9],[[],24],[[]]],"c":[],"p":[[3,"Guid"],[15,"u8"],[15,"slice"],[15,"str"],[4,"Ordering"],[4,"ValueRef"],[6,"FromSqlResult"],[8,"Deserializer"],[4,"Result"],[3,"Vec"],[15,"bool"],[3,"String"],[3,"Formatter"],[6,"Result"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[4,"Option"],[8,"Serializer"],[4,"ToSqlOutput"],[6,"Result"],[3,"TypeId"]]},\
"sync_manager":{"doc":"","t":"NNNNNDENNNNNNCNNENNDECDEDNNNNNMLLLLLLLLLLLLLLLLLLMLLMFMMLLAMLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLMMMAMMMMMFFLMMFMMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMNNNNNGNENNNLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLL","n":["All","AuthError","BackedOff","Backgrounded","Desktop","DeviceSettings","DeviceType","EnabledChange","Mobile","NetworkError","Ok","OtherError","PreSleep","Result","Scheduled","ServiceError","ServiceStatus","Some","Startup","SyncAuthInfo","SyncEngineSelection","SyncManagerError","SyncParams","SyncReason","SyncResult","TV","Tablet","Unknown","User","VR","auth_info","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","declined","default","deserialize","device_settings","disconnect","enabled_changes","engines","eq","equivalent","error","failures","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","fxa_access_token","fxa_device_id","get_hash","hash","into","into","into","into","into","into","into","into","is_ok","kid","kind","local_encryption_keys","manager","name","next_sync_allowed_at","persisted_state","persisted_state","reason","reset","reset_all","serialize","status","successful","sync","sync_key","telemetry_json","to_owned","tokenserver_url","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wipe","engines","AnyhowError","InterruptedError","JsonError","LoginsError","PlacesError","Result","Sync15Error","SyncManagerError","UnknownEngine","UnsupportedFeature","UrlParseError","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","from","from","into","provide","source","to_string","try_from","try_into","type_id","vzip","SyncManager","borrow","borrow_mut","default","disconnect","from","get_available_engines","into","new","reset","reset_all","sync","try_from","try_into","type_id","vzip","wipe"],"q":[[0,"sync_manager"],[142,"sync_manager::SyncEngineSelection"],[143,"sync_manager::error"],[174,"sync_manager::manager"]],"d":["","","","","","","Enumeration for the different types of device.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Disconnect engines from sync, deleting/resetting the …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Perform a sync.  See SyncParams and SyncResult for details …","","","","",""],"i":[9,13,13,8,1,0,0,8,1,13,13,13,8,0,8,13,0,9,8,0,0,0,0,0,0,1,1,1,8,1,5,5,8,9,10,11,12,13,1,5,8,9,10,11,12,13,1,1,1,12,1,1,5,0,5,5,1,1,0,12,5,8,9,10,11,12,13,1,5,8,9,10,11,12,13,13,1,10,11,1,1,5,8,9,10,11,12,13,1,13,10,11,5,0,11,12,5,12,5,0,0,1,12,12,0,10,12,1,10,5,8,9,10,11,12,13,1,5,8,9,10,11,12,13,1,5,8,9,10,11,12,13,1,5,8,9,10,11,12,13,1,0,39,25,25,25,25,25,0,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,[[],1],[2,[[3,[1]]]],0,[[]],0,0,[[1,1],4],[[],4],0,0,[[5,6],7],[[8,6],7],[[9,6],7],[[10,6],7],[[11,6],7],[[12,6],7],[[13,6],7],[[1,6],[[3,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,13],[[]],0,0,[[[0,[16,17]],18],19],[[1,20]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,4],0,0,0,0,0,0,0,0,0,[21,22],[[],22],[[1,23],3],0,0,[5,[[22,[12]]]],0,0,[[]],0,[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,22],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[25,6],7],[[25,6],7],[26,25],[27,25],[[]],[28,25],[29,25],[30,25],[31,25],[32,25],[[]],[33],[25,[[35,[34]]]],[[],36],[[],3],[[],3],[[],24],[[]],0,[[]],[[]],[[],37],[37],[[]],[37,[[38,[36]]]],[[]],[[],37],[[37,21],22],[37,22],[[37,5],[[22,[12]]]],[[],3],[[],3],[[],24],[[]],[[37,21],22]],"c":[],"p":[[4,"DeviceType"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"SyncParams"],[3,"Formatter"],[6,"Result"],[4,"SyncReason"],[4,"SyncEngineSelection"],[3,"SyncAuthInfo"],[3,"DeviceSettings"],[3,"SyncResult"],[4,"ServiceStatus"],[3,"Error"],[4,"ServiceStatus"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[15,"u64"],[8,"Hasher"],[15,"str"],[6,"Result"],[8,"Serializer"],[3,"TypeId"],[4,"SyncManagerError"],[4,"ParseError"],[4,"Error"],[4,"Error"],[3,"Error"],[4,"Error"],[3,"Interrupted"],[3,"Error"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"SyncManager"],[3,"Vec"],[13,"Some"]]},\
"tabs":{"doc":"","t":"CDCGCCDGDDLLLLLLLLLLLMMLLLLMLALLLLLLLLFLLLLLMLMLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLGENNNGNNNNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMM","n":["ApiResult","ClientRemoteTabs","Error","RemoteTabRecord","Result","TabsApiError","TabsBridgedEngine","TabsDeviceType","TabsEngine","TabsStore","apply","apply","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bridged_engine","client_id","client_name","clone","clone_into","collection_name","deserialize","device_type","ensure_current_sync_id","error","fmt","from","from","from","from","get_all","get_collection_request","get_last_sync","get_registered_sync_engine","get_sync_assoc","into","into","into","into","last_modified","last_sync","local_id","new","new","new","new_with_mem_path","prepare_for_sync","prepare_for_sync","register_with_sync_manager","remote_tabs","remote_tabs","reset","reset","reset_sync_id","serialize","set_last_sync","set_last_sync","set_local_tabs","set_uploaded","set_uploaded","stage_incoming","storage","store_incoming","sync_finished","sync_id","sync_started","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wipe","wipe","ApiResult","Error","JsonError","MissingLocalIdError","OpenDatabaseError","Result","SqlError","SqlError","SyncAdapterError","SyncError","TabsApiError","UnexpectedTabsError","UrlParseError","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_error_handling","into","into","provide","provide","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","reason","reason","reason"],"q":[[0,"tabs"],[90,"tabs::error"],[134,"tabs::error::TabsApiError"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Called by the sync manager to get a sync engine via the …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Result enum for the public interface","","","","","Result enum for internal functions","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,5,9,1,5,11,9,1,5,11,9,11,11,11,11,5,11,11,1,0,11,9,1,5,11,9,5,5,0,5,9,1,5,11,11,1,5,9,1,5,9,1,5,9,9,11,1,5,1,11,1,5,9,1,5,5,9,1,1,1,1,11,9,1,5,11,9,1,5,11,9,1,5,11,9,1,5,11,1,5,0,0,34,34,34,0,33,34,34,33,0,33,34,33,34,33,34,33,33,34,34,33,33,34,34,34,34,34,34,33,34,33,34,34,33,34,33,34,33,34,33,34,33,34,43,44,45],"f":[0,0,0,0,0,0,0,0,0,0,[1,[[4,[[3,[2]]]]]],[[5,6,7],[[4,[[3,[8]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[1]]]],0,0,[11,11],[[]],[5,12],[13,[[14,[11]]]],0,[[1,15],[[4,[2]]]],0,[[11,16],17],[[]],[[]],[[]],[[]],[9,[[3,[11]]]],[[5,6],[[4,[[19,[18]]]]]],[5,[[4,[[19,[6]]]]]],[20,[[19,[[22,[21]]]]]],[5,[[4,[23]]]],[[]],[[]],[[]],[[]],0,[1,[[4,[24]]]],0,[[[26,[25]]],9],[[[22,[27]]],1],[[[10,[9]]],5],[15,9],[[1,15],4],[[5,28],4],[[[10,[9]]]],[9,[[19,[[3,[11]]]]]],0,[1,4],[[5,23],4],[1,[[4,[2]]]],[[11,29],14],[[1,24],4],[[5,6],4],[[9,[3,[0]]]],[[1,24,[3,[30]]],4],[[5,6,[3,[30]]],4],[[5,[3,[31]],7],4],0,[[1,[3,[2]]],4],[1,4],[1,[[4,[[19,[2]]]]]],[1,4],[[]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],32],[[],32],[[],32],[[],32],[[]],[[]],[[]],[[]],[1,4],[5,4],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[33,16],17],[[33,16],17],[[34,16],17],[[34,16],17],[[]],[35,33],[36,34],[37,34],[38,34],[[]],[39,34],[34,40],[[]],[[]],[41],[41],[34,[[19,[42]]]],[[],2],[[],2],[[],14],[[],14],[[],14],[[],14],[[],32],[[],32],[[]],[[]],0,0,0],"c":[],"p":[[3,"TabsBridgedEngine"],[3,"String"],[3,"Vec"],[6,"Result"],[3,"TabsEngine"],[3,"ServerTimestamp"],[3,"Engine"],[3,"OutgoingBso"],[3,"TabsStore"],[3,"Arc"],[3,"ClientRemoteTabs"],[6,"CollectionName"],[8,"Deserializer"],[4,"Result"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"CollectionRequest"],[4,"Option"],[4,"SyncEngineId"],[8,"SyncEngine"],[3,"Box"],[4,"EngineSyncAssociation"],[15,"i64"],[3,"Path"],[8,"AsRef"],[8,"BridgedEngine"],[8,"Fn"],[8,"Serializer"],[3,"Guid"],[3,"IncomingBso"],[3,"TypeId"],[4,"TabsApiError"],[4,"Error"],[3,"Error"],[4,"ParseError"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"ErrorHandling"],[3,"Demand"],[8,"Error"],[13,"SyncError"],[13,"SqlError"],[13,"UnexpectedTabsError"]]},\
"types":{"doc":"","t":"SDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["EARLIEST","Timestamp","as_millis","as_millis_i64","borrow","borrow_mut","checked_add","checked_sub","clone","clone_into","cmp","column_result","default","deserialize","duration_since","eq","equivalent","fmt","fmt","from","from","from","get_hash","hash","into","now","partial_cmp","serialize","to_owned","to_sql","to_string","try_from","try_into","type_id"],"q":[[0,"types"]],"d":["In desktop sync, bookmarks are clamped to Jan 23, 1993 …","","","","","","","","","","","","","","Returns None if <code>other</code> is later than <code>self</code> (Duration may not …","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,[1,2],[1,3],[[]],[[]],[[1,4],[[5,[1]]]],[[1,4],[[5,[1]]]],[1,1],[[]],[[1,1],6],[7,[[8,[1]]]],[[],1],[9,[[10,[1]]]],[[1,1],[[5,[4]]]],[[1,1],11],[[],11],[[1,12],13],[[1,12],13],[2,1],[[]],[14,1],[[[0,[15,16]],17],2],[[1,18]],[[]],[[],1],[[1,1],[[5,[6]]]],[[1,19],10],[[]],[1,[[21,[20]]]],[[],22],[[],10],[[],10],[[],23]],"c":[],"p":[[3,"Timestamp"],[15,"u64"],[15,"i64"],[3,"Duration"],[4,"Option"],[4,"Ordering"],[4,"ValueRef"],[6,"FromSqlResult"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"SystemTime"],[8,"Hash"],[8,"Sized"],[8,"BuildHasher"],[8,"Hasher"],[8,"Serializer"],[4,"ToSqlOutput"],[6,"Result"],[3,"String"],[3,"TypeId"]]},\
"viaduct":{"doc":"","t":"INNCNNDDDDENNNNDDNLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALMMLLLLLLLLLLLLLLLLLLLLLMLLLLLLLFLLLLLLLLMLKLFLAMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLNNENNNNDNLLLLLLLLLLLLLLLMLLLMLLLLLLLLLMRRRRRRRRRRRRRRRRHDMLLMLMLLMLLLMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFF","n":["Backend","Connect","Delete","GLOBAL_SETTINGS","Get","Head","Header","HeaderName","Headers","InvalidHeaderName","Method","Options","Patch","Post","Put","Request","Response","Trace","as_ref","as_ref","as_str","as_str","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","default","delete","deref","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_as","get_header","hash","hash","hash","header","header_names","headers","headers","headers","insert","insert_header","insert_if_missing","into","into","into","into","into","into","into","into_iter","into_iter","into_vec","is_client_error","is_empty","is_server_error","is_success","iter","json","json","len","method","name","name","new","new","new","new","new_unchecked","note_backend","partial_cmp","partial_cmp","partial_cmp","patch","post","provide","put","query","request_method","require_success","send","send","set_backend","set_query","settings","status","status_codes","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_extend","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_get","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url","value","with_capacity","BackendError","BackendNotInitialized","Error","NetworkError","NonTlsUrl","RequestHeaderError","SetBackendError","UnexpectedStatus","UrlError","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","from","from","from","into","into","method","provide","provide","source","status","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url","ACCEPT","ACCEPT_ENCODING","AUTHORIZATION","CONTENT_TYPE","ETAG","IF_NONE_MATCH","RETRY_AFTER","USER_AGENT","X_IF_UNMODIFIED_SINCE","X_KEYID","X_LAST_MODIFIED","X_TIMESTAMP","X_WEAVE_BACKOFF","X_WEAVE_NEXT_OFFSET","X_WEAVE_RECORDS","X_WEAVE_TIMESTAMP","GLOBAL_SETTINGS","Settings","addn_allowed_insecure_url","borrow","borrow_mut","connect_timeout","fmt","follow_redirects","from","into","read_timeout","try_from","try_into","type_id","use_caches","ACCEPTED","BAD_GATEWAY","BAD_REQUEST","CONFLICT","CONTINUE","CREATED","EXPECTATION_FAILED","FORBIDDEN","FOUND","GATEWAY_TIMEOUT","GONE","HTTP_VERSION_NOT_SUPPORTED","INTERNAL_SERVER_ERROR","LENGTH_REQUIRED","METHOD_NOT_ALLOWED","MOVED_PERMANENTLY","MULTIPLE_CHOICES","NONAUTHORITATIVE_INFORMATION","NOT_ACCEPTABLE","NOT_FOUND","NOT_IMPLEMENTED","NOT_MODIFIED","NO_CONTENT","OK","PARTIAL_CONTENT","PAYMENT_REQUIRED","PRECONDITION_FAILED","PROXY_AUTHENTICATION_REQUIRED","REQUESTED_RANGE_NOT_SATISFIABLE","REQUEST_ENTITY_TOO_LARGE","REQUEST_TIMEOUT","REQUEST_URI_TOO_LONG","RESET_CONTENT","SEE_OTHER","SERVICE_UNAVAILABLE","SWITCHING_PROTOCOLS","TEMPORARY_REDIRECT","TOO_MANY_REQUESTS","UNAUTHORIZED","UNSUPPORTED_MEDIA_TYPE","USE_PROXY","is_client_error_code","is_server_error_code","is_success_code"],"q":[[0,"viaduct"],[197,"viaduct::error"],[236,"viaduct::header_names"],[252,"viaduct::settings"],[267,"viaduct::status_codes"]],"d":["","","","","","","A single header. Headers have a name (case insensitive) …","Represents a header name that we know to be both valid and …","A list of headers.","Indicates an invalid header name. Note that we only emit …","HTTP Methods.","","","","","","A response from the server.","","","","","","Set this request’s body.","","The body of the response.","","","","","","","","","","","","","","","Clear this set of headers.","","","","","","","","","","","","","","","","","","","Alias for <code>Request::new(Method::Delete, url)</code>, for …","","","","","","","","","","","","","","","","","","Add all the headers in the provided iterator to this list …","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get the value of the header with the provided name.","Alias for <code>Request::new(Method::Get, url)</code>, for convenience.","Get the value of the header with the provided name, and …","Get the header object with the requested name. Usually, …","","","","Add the provided header to the list of headers to send …","","Add all the provided headers to the list of headers to …","","The headers returned with this response.","Insert or update a new header.","Insert or update a header directly. Typically you will …","Insert the provided header unless a header is already …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this list of headers to a Vec","Returns true if the status code is in the interval …","Returns true if <code>len()</code> is zero.","Returns true if the status code is in the interval …","Returns true if the status code is in the interval …","Get an iterator over the headers in no particular order.","Set body to the result of serializing <code>val</code>, and, unless it …","Parse the body as JSON.","Returns the number of headers.","","","","Create a new header. In general you likely want to use …","","Initialize an empty list of headers.","Construct a new request to the given <code>url</code> using the given …","","","","","","Alias for <code>Request::new(Method::Patch, url)</code>, for …","Alias for <code>Request::new(Method::Post, url)</code>, for convenience.","","Alias for <code>Request::new(Method::Put, url)</code>, for convenience.","Append the provided query parameters to the URL","The method used to request this response.","Returns an <code>UnexpectedStatus</code> error if <code>self.is_success()</code> is …","","","","Set the query string of the URL. Note that …","","The HTTP Status code of this response.","A module containing constants for all HTTP status codes.","Get the body as a string. Assumes UTF-8 encoding. Any …","","","","","","","","","","","","Add all the headers in the provided iterator, unless any …","","","","","","","","Get the value of the header with the provided name, and …","","","","","","","","","","","","","","","","The URL of this response.","","Initialize an empty list of headers backed by a vector …","","","","","","","","This error is returned as the <code>Err</code> result from […","Note: we return this if the server returns a bad URL with …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Note: reqwest allows these only to be specified …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Is it a 4xx error?","Is it a 5xx error?","Is it a 2xx status?"],"i":[0,5,5,0,5,5,0,0,0,0,0,5,5,5,5,0,0,5,1,1,1,5,6,6,12,1,10,11,9,5,6,12,1,10,11,9,5,6,12,9,1,10,11,9,5,6,12,1,10,11,9,5,6,12,1,11,5,9,6,1,1,1,1,1,1,1,10,11,9,5,1,10,11,9,5,0,9,1,1,10,10,11,11,9,5,5,6,12,1,1,1,1,10,11,9,5,6,12,9,9,6,9,9,1,11,5,6,0,6,6,12,9,9,9,1,10,11,9,5,6,12,9,9,9,12,9,12,12,9,6,12,9,6,10,11,1,11,9,6,11,0,1,11,5,6,6,10,6,6,12,12,35,6,0,6,0,12,0,12,1,10,11,9,5,6,12,1,10,11,5,9,1,10,11,9,5,6,12,9,1,10,11,9,5,6,12,1,10,11,9,5,6,12,6,12,11,9,27,27,0,27,27,27,27,0,27,27,34,27,34,34,34,27,27,34,34,27,27,34,27,34,34,27,34,27,34,34,27,34,27,34,27,34,27,34,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,[[4,[3]]]],[1,2],[5,2],[[6,[8,[[7,[3]]]]],6],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[1,1],[10,10],[11,11],[9,9],[5,5],[6,6],[12,12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],13],[[11,11],13],[[5,5],13],[[],9],[14,6],[1,2],[[1,15],16],[[1,2],16],[[1,2],16],[[1,15],16],[[1,1],16],[[1,[17,[2]]],16],[[10,10],16],[[11,11],16],[[9,9],16],[[5,5],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[[9,18],9],[[1,19],20],[[1,19],20],[[10,19],20],[[10,19],20],[[11,19],20],[[11,19],20],[[9,19],20],[[5,19],20],[[5,19],20],[[6,19],20],[[12,19],20],[[]],[15,1],[[[17,[2]]],1],[2,1],[[]],[[]],[[]],[[]],[[]],[[]],[18,9],[[9,[21,[1]]],[[22,[2]]]],[14,6],[[9,[21,[1]]],[[22,[[24,[23]]]]]],[[9,[21,[1]]],[[22,[11]]]],[[1,25]],[[11,25]],[[5,25]],[[6,[0,[[8,[1]],[21,[1]]]],[0,[[8,[15]],[26,[2]]]]],[[24,[6,27]]]],0,[[6,18],6],0,0,[[9,[0,[[8,[1]],[21,[1]]]],[0,[[8,[15]],[26,[2]]]]],[[24,[9,27]]]],[[9,11],9],[[9,[0,[[8,[1]],[21,[1]]]],[0,[[8,[15]],[26,[2]]]]],[[24,[9,27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[9],[9],[9,[[7,[11]]]],[12,16],[9,16],[12,16],[12,16],[9],[[6,[0,[28,29]]],6],[12,[[24,[30,31]]]],[9,32],0,[10,2],[11,1],[[[8,[[17,[2]]]]],[[24,[1,10]]]],[[[8,[1]],[0,[[26,[2]],[8,[15]]]]],[[24,[11,27]]]],[[],9],[[5,14],6],[[1,[0,[[26,[2]],[8,[15]]]]],11],[2],[[1,1],[[22,[13]]]],[[11,11],[[22,[13]]]],[[5,5],[[22,[13]]]],[14,6],[14,6],[33],[14,6],[[6,4],6],0,[12,[[24,[12,34]]]],[6,[[24,[12,27]]]],[6,[[24,[12,27]]]],[35,[[24,[27]]]],[[6,[8,[[22,[2]]]]],6],0,0,0,[12,[[17,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[9,18],[[24,[9]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[9,[21,[1]]],[[22,[23]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],0,0,[11,2],[32,9],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[34,34],[[]],[[27,19],20],[[27,19],20],[[34,19],20],[[34,19],20],[37,27],[[]],[[]],[[]],[[]],0,[33],[33],[27,[[22,[38]]]],0,[[]],[[],15],[[],15],[[],24],[[],24],[[],24],[[],24],[[],36],[[],36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[39,19],20],0,[[]],[[]],0,[[],24],[[],24],[[],36],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40,16],[40,16],[40,16]],"c":[],"p":[[3,"HeaderName"],[15,"str"],[15,"u8"],[15,"slice"],[4,"Method"],[3,"Request"],[3,"Vec"],[8,"Into"],[3,"Headers"],[3,"InvalidHeaderName"],[3,"Header"],[3,"Response"],[4,"Ordering"],[3,"Url"],[3,"String"],[15,"bool"],[4,"Cow"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[8,"PartialEq"],[4,"Option"],[8,"FromStr"],[4,"Result"],[8,"Hasher"],[8,"AsRef"],[4,"Error"],[8,"Sized"],[8,"Serialize"],[8,"Deserialize"],[3,"Error"],[15,"usize"],[3,"Demand"],[3,"UnexpectedStatus"],[8,"Backend"],[3,"TypeId"],[4,"ParseError"],[8,"Error"],[3,"Settings"],[15,"u16"]]},\
"viaduct_reqwest":{"doc":"","t":"DLLLLLLLLFF","n":["ReqwestBackend","borrow","borrow_mut","from","into","send","try_from","try_into","type_id","use_reqwest_backend","viaduct_detect_reqwest_backend"],"q":[[0,"viaduct_reqwest"]],"d":["","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","A dummy symbol we include so that we can detect whether or …"],"i":[0,1,1,1,1,1,1,1,1,0,0],"f":[0,[[]],[[]],[[]],[[]],[[1,2],[[5,[3,4]]]],[[],5],[[],5],[[],6],[[]],[[]]],"c":[],"p":[[3,"ReqwestBackend"],[3,"Request"],[3,"Response"],[4,"Error"],[4,"Result"],[3,"TypeId"]]},\
"webext_storage":{"doc":"","t":"DRRRRDLLLLLLLLLLMMLLLLAMMMLLLLLLMMMLALLLLLLLLLLNNDENNNNNNNNNNEGNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLL","n":["MigrationInfo","STORAGE_VERSION","SYNC_MAX_ITEMS","SYNC_QUOTA_BYTES","SYNC_QUOTA_BYTES_PER_ITEM","UsageInfo","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","entries","entries_successful","eq","eq","equivalent","equivalent","error","ext_id","extensions","extensions_successful","fmt","fmt","from","from","into","into","num_bytes","num_keys","open_failure","serialize","store","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ConnectionAlreadyOpen","DatabaseConnectionClosed","Error","ErrorKind","IllegalDatabasePath","InterruptedError","InvalidConnectionType","IoError","ItemBytes","JsonError","MaxItems","OpenDatabaseError","OtherConnectionReferencesExist","QuotaError","QuotaReason","Result","SqlError","SyncError","TotalBytes","Utf8Error","WrongApiForClose","backtrace","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","kind","provide","provide","source","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Store","borrow","borrow_mut","bridged_engine","clear","close","from","get","get_bytes_in_use","get_synced_changes","interrupt_handle","into","migrate","new","remove","set","take_migration_info","try_from","try_into","type_id","usage","vzip"],"q":[[0,"webext_storage"],[47,"webext_storage::error"],[118,"webext_storage::store"]],"d":["","","","","","Information about the usage of a single extension.","","","","","","","","","","","The number of entries (rows in the original table) we …","The number of records we successfully migrated (equal to …","","","","","","The extension id.","The number of extensions (distinct extension ids) in the …","The number of extensions we successfully migrated","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of bytes used by the extension. This result is …","The number of keys the extension uses.","True iff we failed to open the source DB at all.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A store is used to access <code>storage.sync</code> data. It manages an …","","","Returns a bridged sync engine for Desktop for this store.","Deletes all key-value pairs for the extension. As with …","Closes the store and its database connection. See the docs …","Returns the argument unchanged.","Returns the values for one or more keys <code>keys</code> can be:","Returns the bytes in use for the specified items (which …","Gets the changes which the current sync applied. Should be …","Returns an interrupt handle for this store.","Calls <code>U::from(self)</code>.","Migrates data from a database in the format of the “old…","Creates a store backed by a database at <code>db_path</code>. The path …","Deletes the values for one or more keys. As with <code>get</code>, <code>keys</code> …","Sets one or more JSON key-value pairs for an extension ID. …","Read-and-delete (e.g. <code>take</code> in rust parlance, see …","","","","Returns information about per-extension usage",""],"i":[0,0,0,0,0,0,1,2,1,2,1,2,1,2,2,2,2,2,1,2,1,2,0,1,2,2,1,2,1,2,1,2,1,1,2,2,0,1,2,1,2,1,2,1,2,1,2,15,15,0,0,15,15,15,15,14,15,14,15,15,15,0,0,15,15,14,15,15,10,14,15,10,14,15,10,14,15,15,10,10,14,15,15,15,15,15,15,15,10,10,10,10,10,10,10,10,10,14,15,10,10,15,10,15,15,10,14,15,10,14,15,10,14,15,10,14,15,10,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[],2],[3,[[4,[2]]]],0,0,[[1,1],5],[[2,2],5],[[],5],[[],5],0,0,0,0,[[1,6],7],[[2,6],7],[[]],[[]],[[]],[[]],0,0,0,[[2,8],4],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],9],[[],9],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[10,[[13,[[12,[11]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,6],7],[[15,6],7],[[15,6],7],[[10,6],7],[[10,6],7],[[]],[[]],[16,15],[17,15],[18,15],[19,15],[20,15],[21,15],[21,10],[[]],[19,10],[16,10],[20,10],[15,10],[22,10],[17,10],[18,10],[[]],[[]],[[]],[10,15],[23],[23],[15,[[13,[24]]]],[[],25],[[],25],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,[[]],[[]],0,[[26,27],[[28,[0]]]],[26,28],[[]],[[26,27,29],[[28,[29]]]],[[26,27,29],[[28,[30]]]],[26,[[28,[[31,[0]]]]]],[26,[[33,[32]]]],[[]],[[26,[35,[34]]],28],[[[35,[34]]],[[28,[26]]]],[[26,27,29],[[28,[0]]]],[[26,27,29],[[28,[0]]]],[26,[[28,[[13,[2]]]]]],[[],4],[[],4],[[],9],[26,[[28,[[31,[1]]]]]],[[]]],"c":[],"p":[[3,"UsageInfo"],[3,"MigrationInfo"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Serializer"],[3,"TypeId"],[3,"Error"],[3,"Backtrace"],[3,"Mutex"],[4,"Option"],[4,"QuotaReason"],[4,"ErrorKind"],[3,"Error"],[3,"Error"],[3,"Interrupted"],[3,"Utf8Error"],[4,"Error"],[4,"Error"],[3,"Error"],[3,"Demand"],[8,"Error"],[3,"String"],[3,"Store"],[15,"str"],[6,"Result"],[4,"Value"],[15,"usize"],[3,"Vec"],[3,"SqlInterruptHandle"],[3,"Arc"],[3,"Path"],[8,"AsRef"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
